var v=Object.defineProperty,j=Object.defineProperties;var g=Object.getOwnPropertyDescriptors;var l=Object.getOwnPropertySymbols;var O=Object.prototype.hasOwnProperty,S=Object.prototype.propertyIsEnumerable;var c=(e,t,r)=>t in e?v(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,d=(e,t)=>{for(var r in t||(t={}))O.call(t,r)&&c(e,r,t[r]);if(l)for(var r of l(t))S.call(t,r)&&c(e,r,t[r]);return e},p=(e,t)=>j(e,g(t));import{aX as n,aY as o,aZ as w,c4 as m,hw as R,b5 as y,b0 as u}from"./vendor.c8f3cc8c.js";import _ from"./FeatureLayerView2D.94dfd5f5.js";import{e as I}from"./util.de314230.js";import"./EffectView.59df383f.js";import"./definitions.21e97413.js";import"./LayerView2D.25658a74.js";import"./Container.98366c00.js";import"./schemaUtils.3bffe16f.js";import"./Utils.b2b84829.js";import"./number.dfbabd3f.js";import"./MaterialKey.56ac52e4.js";import"./visualVariablesUtils.9dcd3ad7.js";import"./CIMSymbolHelper.05203bfb.js";import"./BidiEngine.aae60613.js";import"./GeometryUtils.d4e26b77.js";import"./cimSymbolUtils.441175f3.js";import"./cimAnalyzer.ddfafba2.js";import"./MD5.f9440c6b.js";import"./FeatureLayerView.0b5ae637.js";import"./popupUtils.37c6f82e.js";import"./RefreshableLayerView.552e5409.js";function f(e,t){if(y(e)&&y(t))return null;const r={};return u(t)&&(r.geometry=t.toJSON()),u(e)&&(r.where=e),r}let s=class extends _{constructor(){super(...arguments),this._enabledDataReceived=!1,this.errorString=null,this.connectionStatus="disconnected"}initialize(){this.handles.add([this.layer.watch("purgeOptions",()=>this._update())])}destroy(){this.connectionStatus="disconnected"}get connectionError(){if(this.errorString)return new m("stream-controller",this.errorString)}on(e,t){e==="data-received"&&(this._enabledDataReceived=!0,this._proxy.enableEvent("data-received",!0));const r=super.on(e,t),i=this;return{remove(){r.remove(),e==="data-received"&&(i._proxy.closed||i.hasEventListener("data-received")||i._proxy.enableEvent("data-received",!1))}}}queryLatestObservations(e,t){if(!(this.layer.timeInfo.endField||this.layer.timeInfo.startField))throw new m("streamlayer-no-timeField","queryLatestObservation can only be used with services that define a TrackIdField");return this._proxy.queryLatestObservations(this._cleanUpQuery(e),t).then(r=>{const i=R.fromJSON(r);return i.features.forEach(a=>{a.layer=this.layer,a.sourceLayer=this.layer}),i})}_createClientOptions(){return p(d({},super._createClientOptions()),{setProperty:e=>{this.set(e.propertyName,e.value)}})}_createTileRendererHash(e){const t=`${JSON.stringify(this.layer.purgeOptions)}.${JSON.stringify(f(this.layer.definitionExpression,this.layer.geometryDefinition))})`;return super._createTileRendererHash(e)+t}async _createServiceOptions(){const e=this.layer,{objectIdField:t}=e,r=e.fields.map(b=>b.toJSON()),i=I(e.geometryType),a=e.timeInfo&&e.timeInfo.toJSON()||null,h=e.spatialReference?e.spatialReference.toJSON():null;return{type:"stream",fields:r,geometryType:i,objectIdField:t,timeInfo:a,source:this.layer.parsedUrl,serviceFilter:f(this.layer.definitionExpression,this.layer.geometryDefinition),purgeOptions:this.layer.purgeOptions.toJSON(),enableDataReceived:this._enabledDataReceived,spatialReference:h,maxReconnectionAttempts:this.layer.maxReconnectionAttempts,maxReconnectionInterval:this.layer.maxReconnectionInterval,updateInterval:this.layer.updateInterval,customParameters:e.customParameters}}};n([o()],s.prototype,"errorString",void 0),n([o({readOnly:!0})],s.prototype,"connectionError",null),n([o()],s.prototype,"connectionStatus",void 0),s=n([w("esri.views.2d.layers.StreamLayerView2D")],s);const Q=s;export{Q as default};
