var Ve=Object.defineProperty,Me=Object.defineProperties;var $e=Object.getOwnPropertyDescriptors;var pe=Object.getOwnPropertySymbols;var Ae=Object.prototype.hasOwnProperty,De=Object.prototype.propertyIsEnumerable;var me=(e,t,i)=>t in e?Ve(e,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[t]=i,w=(e,t)=>{for(var i in t||(t={}))Ae.call(t,i)&&me(e,i,t[i]);if(pe)for(var i of pe(t))De.call(t,i)&&me(e,i,t[i]);return e},L=(e,t)=>Me(e,$e(t));import{e as r,d as l,i as Z,p as J,u as K,a5 as y,av as X,b as f,eS as xe,aH as ve,jm as z,jn as C,t as _,$ as _e,iX as je,iL as Y,gd as ee,jU as Te,jV as Re,jW as Ge,jX as He,eJ as ye,iN as we,iW as M,iI as We,iY as ke,iZ as Ue,jY as qe,jZ as Fe,hF as Qe,hH as te,hL as ie,hK as Ie,hU as Ne,hM as Be,hN as Ze,hO as Je,j6 as Ke,j8 as Xe,hP as Ye,j_ as et,j9 as tt,hQ as it,hR as st,j$ as at,jc as nt,jg as rt,jh as ot,aw as se,iO as ae,gg as be,iP as lt,f5 as ne,ji as dt,eI as ht,k0 as k,jR as U,ej as ct,r as q,f3 as re,dG as ut,jk as F,jl as oe,jo as gt,az as pt,ay as mt,ju as vt,jp as _t,jq as yt,jw as wt,k1 as fe,jD as Le,jP as le,jx as bt}from"./index.988b09cd.js";import{p as ft}from"./AnalysisView3D.e6f70945.js";import{t as Lt,e as $,v as de,f as Pe,_ as A,l as D,a as Pt,h as he,b as zt,c as ce,s as Ct,k as ue,d as ze}from"./Segment.977543cc.js";import{y as St}from"./RightAngleQuadVisualElement.81592a03.js";const Et=1e5;let S=class extends J{constructor(e){super(e),this._unitNormalizer=new Lt,this._handles=new K,this._tempStartPosition=y(),this._tempEndPosition=y(),this._tempCornerPosition=y()}initialize(){this._handles.add(X(this.view,"ready",()=>this._initialize(),!0))}destroy(){this._handles=f(this._handles)}_initialize(){const e=this.view.spatialReference,t=xe(e),i=t===ke?Ue:t;this._sphericalPCPF=i;const s=ve(e,i);this._unitNormalizer.spatialReference=s?i:e,this._handles.add([z(()=>({viewData:this.viewData,startPoint:this.analysis.startPoint}),({viewData:a,startPoint:n})=>{a.elevationAlignedStartPoint=this._applyElevationAlignment(n)},C),z(()=>({viewData:this.viewData,endPoint:this.analysis.endPoint}),({viewData:a,endPoint:n})=>{a.elevationAlignedEndPoint=this._applyElevationAlignment(n)},C),z(()=>({result:this._computedResult,viewData:this.viewData}),({result:a,viewData:n})=>{n.result=a},C)])}_applyElevationAlignment(e){if(_(e)||e.hasZ)return e;const t=e.clone();return t.z=_e(je(this.view.elevationProvider,t),0),t}get _computedResult(){const{elevationAlignedStartPoint:e,elevationAlignedEndPoint:t}=this.viewData;if(_(e)||_(t))return null;const i=this._euclideanDistances(e,t),s=this._exactGeodesicDistanceAndAngle(e,t,i.horizontal.value);let a=null;switch(this.viewData.measurementMode){case 0:{var n;a="euclidean";const c=this.viewData.unit,d=((n=i.horizontal)==null?void 0:n.value)>Et;(c==="degrees"||c==="degrees-minutes-seconds"||d)&&(a="geodesic");break}case 1:a="euclidean";break;case 2:a="geodesic"}return{distance:a==="euclidean"?i.direct:s.distance,mode:a,directDistance:i.direct,horizontalDistance:i.horizontal,verticalDistance:i.vertical,geodesicDistance:s.distance,geodesicAngle:s.angle}}_euclideanDistances(e,t){const i=e.clone();i.z=t.z;const s=this._tempStartPosition,a=this._tempEndPosition,n=this._tempCornerPosition,c=this.view.spatialReference,d=this._sphericalPCPF,o=ve(c,d)?d:c;Y(e,s,o),Y(t,a,o),Y(i,n,o);const h=ee(s,a),u=ee(n,a),v=Math.abs(t.z-e.z),m=R=>this._unitNormalizer.normalizeDistance(R),b=m(h),O=m(u),T=m(v);return{direct:new $(b,"meters"),horizontal:new $(O,"meters"),vertical:new $(T,"meters")}}_exactGeodesicDistanceAndAngle(e,t,i){const s=e.spatialReference,a=new Te({spatialReference:s});a.addPath([e,t]);const n=s.isGeographic&&Re(s)?Ge([a],"meters")[0]:s.isWebMercator?He(a,"meters"):void 0,{distance:c,angle:d}=n?{distance:n,angle:this._fallbackGeodesicAngle(n,s)}:this._fallbackGeodesicDistance(e,t,i);return{distance:new $(c,"meters"),angle:new $(d,"degrees")}}_fallbackGeodesicAngle(e,t){return e/ye(t).metersPerDegree}_fallbackGeodesicDistance(e,t,i){if(we(e,x)){we(t,j);const n=M(x[0]),c=M(x[1]),d=M(j[0]),o=M(j[1]),h=Math.abs(d-n),u=Fe(Math.sin(c)*Math.sin(o)+Math.cos(c)*Math.cos(o)*Math.cos(h)),v=qe(u),m={distance:0};return We(m,[x[0],x[1]],[j[0],j[1]]),{distance:m.distance,angle:v}}const s=e.spatialReference,a=i;return{distance:a,angle:this._fallbackGeodesicAngle(a,s)}}};r([l()],S.prototype,"view",void 0),r([l()],S.prototype,"analysis",void 0),r([l()],S.prototype,"viewData",void 0),r([l()],S.prototype,"_computedResult",null),S=r([Z("esri.views.3d.analysis.DirectLineMeasurement.DirectLineMeasurementController")],S);const x=y(),j=y();function Ot(){const e=new Qe;e.vertex.uniforms.add("proj","mat4").add("view","mat4").add("width","float"),e.attributes.add("position","vec3"),e.attributes.add("normal","vec3"),e.attributes.add("uv0","vec2"),e.attributes.add("auxpos1","float"),e.varyings.add("vtc","vec2"),e.varyings.add("vlength","float"),e.varyings.add("vradius","float"),e.vertex.code.add(te`void main(void) {
vec3 bitangent = normal;
vtc = uv0;
vlength = auxpos1;
vradius = 0.5 * width;
vec4 pos = view * vec4(position + vradius * bitangent * uv0.y, 1.0);
gl_Position = proj * pos;
}`),e.fragment.uniforms.add("outlineSize","float").add("outlineColor","vec4").add("stripeLength","float").add("stripeEvenColor","vec4").add("stripeOddColor","vec4");const t=1/Math.sqrt(2);return e.fragment.code.add(te`
    const float INV_SQRT2 = ${te.float(t)};

    vec4 arrowColor(vec2 tc, float len) {
      float d = INV_SQRT2 * (tc.x - abs(tc.y));
      d = min(d, INV_SQRT2 * (len - tc.x - abs(tc.y)));
      d = min(d, 1.0 - abs(tc.y));

      if (d < 0.0) {
        return vec4(0.0);
      } else if (d < outlineSize) {
        return outlineColor;
      } else {
        return fract(0.5 / stripeLength * tc.x * vradius) >= 0.5 ? stripeOddColor : stripeEvenColor;
      }
    }

    void main(void) {
      vec2 ntc = vec2(vtc.x / vradius, vtc.y);
      vec4 color = arrowColor(ntc, vlength / vradius);
      if (color.a == 0.0) {
        discard;
      }
      gl_FragColor = color;
    }
  `),e}const Vt=Object.freeze({__proto__:null,build:Ot});class Q extends Be{constructor(t,i,s){super(t,i,s)}initializeProgram(t){const i=Q.shader.get().build();return new Ze(t.rctx,i,Je)}bindPass(t,i){Ke(this.program,i.camera.projectionMatrix),this.program.setUniform1f("width",t.width),this.program.setUniform1f("outlineSize",t.outlineSize),this.program.setUniform4fv("outlineColor",t.outlineColor),this.program.setUniform1f("stripeLength",t.stripeLength),this.program.setUniform4fv("stripeEvenColor",t.stripeEvenColor),this.program.setUniform4fv("stripeOddColor",t.stripeOddColor)}bindDraw(t){Xe(this.program,t),this.program.rebindTextures()}setPipelineState(t){const i=t===3,s=this.configuration;return Ye({blending:s.transparent?i?et:tt(t):null,polygonOffset:this.configuration.polygonOffsetEnabled&&{factor:0,units:-4},depthTest:{func:513},depthWrite:it,colorWrite:st})}initializePipeline(){return this.setPipelineState(this.configuration.transparencyPassType)}get primitiveType(){return 5}}Q.shader=new Ie(Vt,()=>import("./MeasurementArrow.glsl.f144b349.js"));class I extends Ne{constructor(){super(...arguments),this.polygonOffsetEnabled=!1,this.transparent=!1,this.transparencyPassType=3}}r([ie()],I.prototype,"polygonOffsetEnabled",void 0),r([ie()],I.prototype,"transparent",void 0),r([ie({count:4})],I.prototype,"transparencyPassType",void 0);class Mt extends nt{constructor(t){super(t,At),this.techniqueConfig=new I}getTechniqueConfig(t,i){var s;return this.techniqueConfig.polygonOffsetEnabled=this.parameters.polygonOffset,this.techniqueConfig.transparent=this.parameters.stripeEvenColor[3]<1||this.parameters.stripeOddColor[3]<1||this.parameters.outlineColor[3]<1,this.techniqueConfig.transparencyPassType=(s=i==null?void 0:i.transparencyPassType)!=null?s:3,this.techniqueConfig}dispose(){}getPassParameters(){return this.parameters}intersect(){}requiresSlot(t){return t===2}createGLMaterial(t){return t.output===0?new $t(t):null}createBufferWriter(){return new Ht}}class $t extends rt{updateParameters(t){return this.ensureTechnique(Q,t)}beginSlot(t){return this.updateParameters(t)}bind(t,i){i.bindPass(this._material.getPassParameters(),t)}}const At=w({width:32,outlineSize:.2,outlineColor:[1,.5,0,1],stripeLength:1,stripeEvenColor:[1,1,1,1],stripeOddColor:[1,.5,0,1],polygonOffset:!1},ot),Dt=at().vec3f("position").vec3f("normal").vec2f("uv0").f32("auxpos1"),xt=y(),jt=y(),Tt=y(),Rt=y(),Gt=y();class Ht{constructor(){this.vertexBufferLayout=Dt}allocate(t){return this.vertexBufferLayout.createBuffer(t)}elementCount(t){return 2*(t.indices.get("position").length/2+1)}write(t,i,s,a){const n=i.vertexAttributes.get("position").data,c=i.vertexAttributes.get("normal").data,d=n.length/3,o=i&&i.indices&&i.indices.get("position");o&&o.length!==2*(d-1)&&console.warn("MeasurementArrowMaterial does not support indices");const h=xt,u=jt,v=Tt,m=Rt,b=Gt,O=t.transformation,T=t.invTranspTransformation,R=s.position,ge=s.normal,G=s.uv0;let H=0;for(let P=0;P<d;++P){const B=3*P;if(se(h,n[B],n[B+1],n[B+2]),P<d-1){const E=3*(P+1);se(u,n[E],n[E+1],n[E+2]),se(b,c[E],c[E+1],c[E+2]),ae(b,b),be(v,u,h),ae(v,v),lt(m,b,v),ae(m,m)}const Oe=ee(h,u);O&&T&&(ne(h,h,O),ne(u,u,O),ne(m,m,T));const V=a+2*P,W=V+1;R.setVec(V,h),R.setVec(W,h),ge.setVec(V,m),ge.setVec(W,m),G.set(V,0,H),G.set(V,1,-1),G.set(W,0,H),G.set(W,1,1),P<d-1&&(H+=Oe)}const Ee=s.auxpos1;for(let P=0;P<2*d;++P)Ee.set(a+P,H)}}class Wt extends dt{constructor(t){super(t),this._parameters=kt,this._handles=null,this._origin=y(),this._originTransform=ht(),this._arrowCenter=y(),this._renderOccluded=4,this._geometry=null,this._stripeLength=1,this._stripesEnabled=!0,this._opacity=1,this.applyProps(t)}get renderOccluded(){return this._renderOccluded}set renderOccluded(t){t!==this._renderOccluded&&(this._renderOccluded=t,this._arrowMaterial&&this._arrowMaterial.setParameters({renderOccluded:t}))}get geometry(){return this._geometry}set geometry(t){this._geometry=t,this.geometryChanged()}get stripeLength(){return this._stripeLength}set stripeLength(t){this._stripeLength=t,this.attached&&this._arrowMaterial.setParameters({stripeLength:this._stripeLength})}get stripesEnabled(){return this._stripesEnabled}set stripesEnabled(t){if(this._stripesEnabled=t,this.attached){const i=this.opacity,{arrowStripeEvenColor:s,arrowStripeOddColor:a}=this._parameters,n=k(Ce,this._stripesEnabled?s:a,i);this._arrowMaterial.setParameters({stripeEvenColor:n})}}get opacity(){return this._opacity}set opacity(t){t!==this._opacity&&(this._opacity=t,this._updateArrowOpacity())}createExternalResources(){const{arrowStripeEvenColor:t,arrowStripeOddColor:i,arrowOutlineColor:s}=this._parameters,a=this._stripesEnabled?t:i;this._arrowMaterial=new Mt({outlineColor:s,stripeEvenColor:a,stripeOddColor:i,renderOccluded:this.renderOccluded,polygonOffset:!0}),this._handles=new K,this._handles.add(this.view.state.watch("camera",()=>{this.viewChanged()}))}destroyExternalResources(){this._arrowMaterial=null,this._handles.destroy(),this._handles=null}forEachExternalMaterial(t){t(this._arrowMaterial)}createGeometries(t){if(_(this._geometry)||_(this._geometry.startRenderSpace)||_(this._geometry.endRenderSpace))return;const i=this._createArrowGeometry(this._geometry.startRenderSpace,this._geometry.endRenderSpace,this._origin,this._geometry);t.addGeometry(i,this._arrowMaterial,this._originTransform),this.viewChanged()}_createArrowGeometry(t,i,s,a){const n=this.view.renderCoordsHelper,c=[],d=[],o=(h,u)=>{const v=U.get();be(v,h,s),c.push(v),d.push(u)};if(a.type==="euclidean"){a.eval(.5,this._arrowCenter);const h=U.get();n.worldUpAtPosition(this._arrowCenter,h),o(t,h),o(i,h)}else{a.eval(.5,this._arrowCenter);const h=this._parameters.arrowSubdivisions+1&-2;for(let u=0;u<h;++u){const v=u/(h-1),m=U.get(),b=U.get();a.eval(v,m),n.worldUpAtPosition(m,b),o(m,b)}}return ct.createPolylineGeometry(c,d)}geometryChanged(){this.recreateGeometry()}viewChanged(){if(this.view.ready&&this.attached&&q(this._geometry)){const t=this.view.state.camera.computeScreenPixelSizeAt(this._arrowCenter);this._arrowMaterial.setParameters({width:this._parameters.arrowWidth*t})}}_updateArrowOpacity(){const t=this.opacity,{arrowStripeEvenColor:i,arrowStripeOddColor:s,arrowOutlineColor:a}=this._parameters,n=k(Ce,this._stripesEnabled?i:s,t),c=k(Ut,a,t),d=k(qt,s,t);this._arrowMaterial.setParameters({stripeEvenColor:n,outlineColor:c,stripeOddColor:d})}}const kt={arrowWidth:16,arrowOutlineColor:[1,.5,0,1],arrowOutlineWidth:.2,arrowStripeEvenColor:[1,1,1,1],arrowStripeOddColor:[1,.5,0,1],arrowStripeLength:16,arrowSubdivisions:128},Ce=re(),Ut=re(),qt=re();let p=class extends J{constructor(e){super(e),this._params=w({},Qt),this._handles=new K,this._segmentVisualElement=null,this._triangleVisualElement=null,this._rightAngleQuad=null,this._projectedGeodesicLine=null,this._geodesicStartHint=null,this._geodesicEndHint=null,this._segmentLabel=null,this._verticalLabel=null,this._horizontalLabel=null,this._startPosition=y(),this._endPosition=y(),this._cornerPosition=y(),this._startPositionAtSeaLevel=y(),this._endPositionAtSeaLevel=y(),this._state=0,this._triangleOrientationOverride=null,this.messages=null,this.loadingMessages=!0,this.visualElementOrientation=0,this.triangleCollapseRatioThreshold=.03}get ready(){return this._state===1}get visible(){return this.analysisView.visible}get viewMode(){const{elevationAlignedStartPoint:e,elevationAlignedEndPoint:t}=this.analysisView;if(_(e)||_(t)||e.equals(t))return 0;const i=this.analysisView.result;if(_(i))return 1;if(i.mode==="geodesic")return this._requiresGeodesicGuideAt(this._startPosition)||this._requiresGeodesicGuideAt(this._endPosition)?3:1;const{verticalDistance:s,horizontalDistance:a}=i,n=s.value,c=a.value;return Math.min(n/c,c/n)<this.triangleCollapseRatioThreshold?1:2}get actualVisualizedMeasurement(){if(_(this.analysisView.result))switch(this.analysisView.measurementMode){case 0:case 1:default:return"euclidean";case 2:return"geodesic"}return this.analysisView.result.mode}get allowVisualElementsOrientationChange(){return _(this._triangleOrientationOverride)}set allowVisualElementsOrientationChange(e){_(this._triangleOrientationOverride)!==e&&(_(this._triangleOrientationOverride)?this._triangleOrientationOverride=this._actualVisualElementsOrientation:this._triangleOrientationOverride=null)}get labels(){const e=this.actualVisualizedMeasurement==="geodesic";return{direct:this._segmentLabel,horizontal:e?this._segmentLabel:this._horizontalLabel,vertical:this._verticalLabel}}get testData(){var e;return{labels:this.labels,stripeLength:(e=this._segmentVisualElement)==null?void 0:e.stripeLength}}initialize(){this._handles.add(X(this.view,"ready",()=>this._initialize(),!0))}_initialize(){switch(this._state){case 1:throw new Error("invalid state");case 2:return}const e=this._params,t={attached:!0,view:this.view};this._segmentVisualElement=new Wt(L(w({},t),{geometry:null,renderOccluded:4})),this._triangleVisualElement=new F(L(w({},t),{width:e.triangleLineWidth,color:e.triangleColor,renderOccluded:4})),this._rightAngleQuad=new St(L(w({},t),{color:N,renderOccluded:4}));const i=L(w({},t),{polygonOffset:!0,renderOccluded:4});this._projectedGeodesicLine=new F(L(w({},i),{width:e.geodesicProjectionLineWidth,color:e.geodesicProjectionLineColor,stipplePattern:oe(e.guideStippleLengthPixels)})),this._geodesicStartHint=new F(L(w({},i),{width:e.guideLineWidth,color:e.geodesicProjectionLineColor,stipplePattern:oe(e.guideStippleLengthPixels)})),this._geodesicEndHint=new F(L(w({},i),{width:e.guideLineWidth,color:e.geodesicProjectionLineColor,stipplePattern:oe(e.guideStippleLengthPixels)})),this._segmentLabel=new de(L(w({},t),{fontSize:e.direcLabelFontSize})),this._verticalLabel=new de(L(w({},t),{fontSize:e.verticalLabelFontSize})),this._horizontalLabel=new de(L(w({},t),{fontSize:e.horizontalLabelFontSize})),this._handles.add([z(()=>{const{elevationAlignedStartPoint:s,elevationAlignedEndPoint:a}=this.analysisView,n=this.view;return{view:n,camera:n.state.camera,viewMode:this.viewMode,elevationAlignedStartPoint:s,elevationAlignedEndPoint:a,orientation:this._actualVisualElementsOrientation,visualizedMeasurement:this.actualVisualizedMeasurement,stripeLength:this._measurementArrowStripeLength}},s=>this._updateGeometryAndViewMode(s),C),z(()=>({visible:this.visible,viewMode:this.viewMode}),s=>this._updateVisualElementVisibility(s),C),z(()=>({text:this._labelsText,visualizedMeasurement:this.actualVisualizedMeasurement}),s=>this._updateLabelText(s),C),z(()=>({visible:this.visible,viewMode:this.viewMode,state:this._state}),s=>this._updateLabelVisibility(s),C),z(()=>this._measurementArrowStripeLength,s=>this._updateSegmentStripeLength(s),C),gt(async()=>this._updateMessageBundle())]),this._state=1,this._updateMessageBundle()}destroy(){this._state!==2&&(this._handles=f(this._handles),this._segmentVisualElement=f(this._segmentVisualElement),this._triangleVisualElement=f(this._triangleVisualElement),this._rightAngleQuad=f(this._rightAngleQuad),this._projectedGeodesicLine=f(this._projectedGeodesicLine),this._geodesicStartHint=f(this._geodesicStartHint),this._geodesicEndHint=f(this._geodesicEndHint),this._segmentLabel=f(this._segmentLabel),this._verticalLabel=f(this._verticalLabel),this._horizontalLabel=f(this._horizontalLabel),this.set("view",null),this._state=2)}async whenReady(){await X(this,"ready")}_updateVisualElementVisibility({visible:e,viewMode:t}){if(this._segmentVisualElement.visible=!1,this._triangleVisualElement.visible=!1,this._rightAngleQuad.visible=!1,this._projectedGeodesicLine.visible=!1,this._geodesicStartHint.visible=!1,this._geodesicEndHint.visible=!1,e)switch(t){case 0:break;case 1:this._segmentVisualElement.visible=!0;break;case 2:this._segmentVisualElement.visible=!0,this._triangleVisualElement.visible=!0,this._rightAngleQuad.visible=!0;break;case 3:this._segmentVisualElement.visible=!0,this._projectedGeodesicLine.visible=!0,this._geodesicStartHint.visible=!0,this._geodesicEndHint.visible=!0}}_updateGeometryAndViewMode({view:e,camera:t,viewMode:i,elevationAlignedStartPoint:s,elevationAlignedEndPoint:a,orientation:n,visualizedMeasurement:c,stripeLength:d}){const o=e.renderCoordsHelper;if(_(s)||_(a)||s.equals(a))return;let h=this._startPosition,u=this._endPosition;o.toRenderCoords(s,h),o.toRenderCoords(a,u);const v=n===1?1:-1,m=v*(o.getAltitude(u)-o.getAltitude(h));m<0&&(h=this._endPosition,u=this._startPosition);const b=c==="geodesic"?new Pe(this._startPosition,this._endPosition,o.spatialReference):new A(this._startPosition,this._endPosition);switch(this._segmentVisualElement.geometry=b,this._updateSegmentStripeLength(d),i){case 1:this._updateSegment(b,n);break;case 2:this._updateSegmentAndTriangle({view:e,camera:t,segment:b,orientation:n,startPosition:h,endPosition:u,deltaSign:v,altitudeDelta:m});break;case 3:this._updateSegmentAndProjection({view:e,orientation:n,startPosition:h,endPosition:u})}}_updateSegment(e,t){this._segmentLabel.anchor=t===1?"top":"bottom",this._segmentLabel.geometry={type:"segment",segment:e,sampleLocation:"center"}}_updateSegmentAndTriangle({view:{renderCoordsHelper:e},camera:t,segment:i,orientation:s,startPosition:a,endPosition:n,deltaSign:c,altitudeDelta:d}){const o=this._cornerPosition;e.worldUpAtPosition(a,o),pt(o,o,c*Math.abs(d)),mt(o,o,a),this._triangleVisualElement.geometry=[[[a[0],a[1],a[2]],[o[0],o[1],o[2]],[n[0],n[1],n[2]]]],this._rightAngleQuad.geometry={previous:a,center:o,next:n};const h=new A(a,o),u=new A(o,n),v=Ft(a,n,o,s,t);this._segmentLabel.anchor=v.segment,this._segmentLabel.geometry={type:"segment",segment:i,sampleLocation:"center"},this._verticalLabel.geometry={type:"segment",segment:h,sampleLocation:"center"},this._verticalLabel.anchor=v.vertical,this._horizontalLabel.geometry={type:"segment",segment:u,sampleLocation:"center"},this._horizontalLabel.anchor=v.horizontal}_updateSegmentAndProjection({view:{renderCoordsHelper:e},orientation:t,startPosition:i,endPosition:s}){e.setAltitude(this._startPositionAtSeaLevel,0,i),e.setAltitude(this._endPositionAtSeaLevel,0,s);const a=new Pe(this._startPositionAtSeaLevel,this._endPositionAtSeaLevel,e.spatialReference);this._projectedGeodesicLine.setGeometryFromSegment(a),this._geodesicStartHint.setGeometryFromSegment(new A(this._startPositionAtSeaLevel,i)),this._geodesicEndHint.setGeometryFromSegment(new A(this._endPositionAtSeaLevel,s)),this._segmentLabel.geometry={type:"segment",segment:a,sampleLocation:"center"},this._segmentLabel.anchor=t===1?"top":"bottom"}_updateLabelText({text:e,visualizedMeasurement:t}){q(e)?(this._segmentLabel.text=t==="euclidean"?e.euclideanDistance:e.geodesicDistance,this._horizontalLabel.text=e.horizontalDistance,this._verticalLabel.text=e.verticalDistance):(this._segmentLabel.text=null,this._horizontalLabel.text=null,this._verticalLabel.text=null),this.notifyChange("labels")}_updateLabelVisibility({state:e,visible:t,viewMode:i}){if(e!==1)return;const s=this._segmentLabel,a=this._horizontalLabel,n=this._verticalLabel;if(s.visible=!1,a.visible=!1,n.visible=!1,t)switch(i){case 1:case 3:s.visible=!0;break;case 2:s.visible=!0,a.visible=!0,n.visible=!0}}get _labelsText(){if(this._state!==1)return null;const e=this.messages,t=this.analysisView.result;if(_(t)||_(e))return null;const{directDistance:i,horizontalDistance:s,verticalDistance:a,geodesicDistance:n,geodesicAngle:c}=t,d=this.analysisView.unit,o=h=>w({euclideanDistance:"",geodesicDistance:"",horizontalDistance:"",verticalDistance:""},h);switch(d){case"metric":return o({euclideanDistance:i&&ce(e,i),geodesicDistance:n&&ce(e,n),horizontalDistance:s&&ce(e,s),verticalDistance:a&&Ct(e,a)});case"imperial":return o({euclideanDistance:i&&he(e,i),geodesicDistance:n&&he(e,n),horizontalDistance:s&&he(e,s),verticalDistance:a&&zt(e,a)});case"degrees":{const h=c&&D(e,c,"degrees");return o({euclideanDistance:h,geodesicDistance:h,horizontalDistance:h})}case"degrees-minutes-seconds":return o({horizontalDistance:c&&Pt(c)});default:return o({euclideanDistance:i&&D(e,i,d),geodesicDistance:n&&D(e,n,d),horizontalDistance:s&&D(e,s,d),verticalDistance:a&&D(e,a,d)})}}_updateSegmentStripeLength(e){const t=this._segmentVisualElement;q(e)?(t.stripeLength=e,t.stripesEnabled=!0):t.stripesEnabled=!1}get _actualVisualElementsOrientation(){if(q(this._triangleOrientationOverride))return this._triangleOrientationOverride;const e=this.visualElementOrientation;return e===0?this.view.state.camera.aboveGround?1:2:e}_requiresGeodesicGuideAt(e){const t=this.view;if(t==null||!t.state)return!1;const i=t.state.camera,s=t.renderCoordsHelper,a=i.computeScreenPixelSizeAt(e);return s.getAltitude(e)/a>=10}get _measurementArrowStripeLength(){const{result:e,unit:t}=this.analysisView;if(_(e))return null;let i=null;const s=e.directDistance;switch(t){case"metric":i=s&&s.toUnit("meters");break;case"imperial":i=s&&s.toUnit(vt(s.value,s.unit));break;case"degrees":case"degrees-minutes-seconds":{const a=e.geodesicAngle;i=a&&a.toUnit("degrees");break}default:i=s&&s.toUnit(t)}return _(i)?null:_t(i.value/30)*(i.unit==="degrees"?ye(this.view.spatialReference).metersPerDegree:yt(1,i.unit,"meters"))}_updateMessageBundle(){this.loadingMessages=!0,wt("esri/core/t9n/Units").then(e=>{this.messages=e}).finally(()=>{this.loadingMessages=!1})}};function Ft(e,t,i,s,a){const n=It,c=Nt;a.projectToRenderScreen(i,n),a.projectToRenderScreen(t,c);const d={segment:"bottom",horizontal:"top",vertical:n[0]<c[0]?"left":"right"};{const o=Bt,h=Zt;if(ue(e,i,o,a),ue(e,t,h,a),fe(o,h)>=Se){const u=Math.sign(o[1])===Math.sign(h[1]);d.segment=u?ze(d.vertical):d.vertical}else{const u=Jt;ue(i,t,u,a),fe(u,h)>=Se&&(d.segment=Math.sign(u[0])===Math.sign(h[0])?ze(d.horizontal):d.horizontal)}}if(s===2){const o=h=>h==="top"?"bottom":"top";d.segment=o(d.segment),d.horizontal=o(d.horizontal),d.vertical=o(d.vertical)}return d}r([l()],p.prototype,"_state",void 0),r([l()],p.prototype,"_triangleOrientationOverride",void 0),r([l()],p.prototype,"messages",void 0),r([l()],p.prototype,"view",void 0),r([l()],p.prototype,"analysis",void 0),r([l()],p.prototype,"analysisView",void 0),r([l()],p.prototype,"ready",null),r([l()],p.prototype,"loadingMessages",void 0),r([l()],p.prototype,"visible",null),r([l()],p.prototype,"viewMode",null),r([l()],p.prototype,"actualVisualizedMeasurement",null),r([l()],p.prototype,"visualElementOrientation",void 0),r([l()],p.prototype,"triangleCollapseRatioThreshold",void 0),r([l()],p.prototype,"allowVisualElementsOrientationChange",null),r([l()],p.prototype,"labels",null),r([l()],p.prototype,"testData",null),r([l()],p.prototype,"_labelsText",null),r([l()],p.prototype,"_actualVisualElementsOrientation",null),r([l()],p.prototype,"_measurementArrowStripeLength",null),p=r([Z("esri.views.3d.analysis.DirectLineMeasurement.DirectLineMeasurementVisualization")],p);const N=ut(1,.5,0,.75),Qt={laserLineGlowColor:[1,.5,0],laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:[1,1,1],laserLineInnerWidth:.75,laserLineGlobalAlpha:.75,laserLineEnabled:!0,handleColor:[1,.5,0],handleOpacity:.5,handleRadius:5,triangleColor:N,triangleLineWidth:3,triangleCornerSize:32,triangleSubdivisions:128,arrowWidth:16,arrowOutlineColor:[1,.5,0,1],arrowOutlineWidth:.2,arrowStripeEvenColor:[1,1,1,1],arrowStripeOddColor:[1,.5,0,1],arrowStripeLength:16,arrowSubdivisions:128,geodesicProjectionLineWidth:2,geodesicProjectionLineColor:N,guideLineWidth:2,guideLineColor:N,guideStippleLengthPixels:6,labelDistance:25,direcLabelFontSize:16,horizontalLabelFontSize:12,verticalLabelFontSize:12},Se=Math.cos(M(12)),It=Le(),Nt=Le(),Bt=le(),Zt=le(),Jt=le();let g=class extends ft(J){constructor(e){super(e),this.type="direct-line-measurement-view-3d",this.result=null,this.measurementMode=0,this.elevationAlignedStartPoint=null,this.elevationAlignedEndPoint=null}initialize(){const e=this.view,t=this.analysis;this._analysisVisualization=new p({view:e,analysis:t,analysisView:this}),this._analysisController=new S({view:e,analysis:t,viewData:this})}destroy(){this._analysisController=f(this._analysisController),this._analysisVisualization=f(this._analysisVisualization)}whenReady(){return this._analysisVisualization.whenReady()}get updating(){var e;return!((e=this._analysisVisualization)==null||!e.loadingMessages)}get viewMode(){return this._analysisVisualization.viewMode}get visualizedMeasurement(){return this.measurementMode}set visualizedMeasurement(e){this.measurementMode=e}get actualVisualizedMeasurement(){return this._analysisVisualization.actualVisualizedMeasurement}get visualElementOrientation(){return this._analysisVisualization.visualElementOrientation}set visualElementOrientation(e){this._analysisVisualization.visualElementOrientation=e}get allowVisualElementsOrientationChange(){return this._analysisVisualization.allowVisualElementsOrientationChange}set allowVisualElementsOrientationChange(e){this._analysisVisualization.allowVisualElementsOrientationChange=e}get triangleCollapseRatioThreshold(){return this._analysisVisualization.triangleCollapseRatioThreshold}set triangleCollapseRatioThreshold(e){this._analysisVisualization.triangleCollapseRatioThreshold=e}get directLabelText(){return this._analysisVisualization.labels.direct.text}get horizontalLabelText(){return this._analysisVisualization.labels.horizontal.text}get verticalLabelText(){return this._analysisVisualization.labels.vertical.text}get testData(){var e;return this.destroyed?{labels:null,stripeLength:null,visualization:null,controller:null}:L(w({},(e=this._analysisVisualization)==null?void 0:e.testData),{visualization:this._analysisVisualization,controller:this._analysisController})}get unit(){return _e(this.analysis.unit,this._defaultUnit)}};r([l()],g.prototype,"updating",null),r([l()],g.prototype,"type",void 0),r([l()],g.prototype,"analysis",void 0),r([l()],g.prototype,"result",void 0),r([l()],g.prototype,"measurementMode",void 0),r([l()],g.prototype,"elevationAlignedStartPoint",void 0),r([l()],g.prototype,"elevationAlignedEndPoint",void 0),r([l({readOnly:!0})],g.prototype,"viewMode",null),r([l()],g.prototype,"visualizedMeasurement",null),r([l({readOnly:!0})],g.prototype,"actualVisualizedMeasurement",null),r([l()],g.prototype,"visualElementOrientation",null),r([l()],g.prototype,"allowVisualElementsOrientationChange",null),r([l()],g.prototype,"triangleCollapseRatioThreshold",null),r([l({readOnly:!0})],g.prototype,"directLabelText",null),r([l({readOnly:!0})],g.prototype,"horizontalLabelText",null),r([l({readOnly:!0})],g.prototype,"verticalLabelText",null),r([l()],g.prototype,"testData",null),r([l()],g.prototype,"_analysisVisualization",void 0),r([l()],g.prototype,"_analysisController",void 0),r([l()],g.prototype,"unit",null),r([l(bt)],g.prototype,"_defaultUnit",void 0),g=r([Z("esri.views.3d.analysis.DirectLineMeasurement.DirectLineMeasurementView3D")],g);const Kt=g;var si=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",default:Kt});export{si as D,Ot as o};
