import{lO as H,c2 as v,b4 as u,a$ as f,dF as D,bz as P,sr as $,q0 as L,pR as k,gh as G,aW as g,aX as w,aY as V,aZ as z,aU as y,dl as O,k_ as d,k$ as p,hx as j,b0 as x,bH as A,lw as I,sv as M,ha as E,b8 as _,ss as b}from"./vendor.70daa49e.js";import{h as S}from"./HoveredPoints.5459ac28.js";import{a as R,e as T,A as C}from"./GraphicState.16f3981d.js";import"./colorUtils.92e1b957.js";class U{constructor(e){this._params=e,this._highlightTask=null,this._highlightHandle=null,this._visualElementHandle=null}destroy(){this.remove()}remove(){this._highlightTask=H(this._highlightTask),this._highlightHandle=v(this._highlightHandle),this._visualElementHandle=v(this._visualElementHandle)}showHighlight(e){if(this.remove(),u(e)||!m(e))return;const s=e.layer;this._highlightTask=D(async t=>{const h=await this._params.view.whenLayerView(s);P(t),$(h)&&(this._highlightHandle=h.highlight(e))})}showReshaping(e){if(this.remove(),u(e))return;const s=this._params.view,t=new R({view:s,geometry:m(e)?e.geometry:null,attached:!1,elevationInfo:L(e),renderOccluded:8}),h=new T({graphic:e}),i=[h.watch("isDraped",o=>{t.isDraped=o}),h.on("changed",()=>{t.geometry=m(e)?e.geometry:null}),s.trackGraphicState(h),s.maskOccludee(e),k(t)];C.visualElements.lineGraphics.outline.apply(t),t.attached=!0,this._visualElementHandle=G(i)}}function m(a){return f(a.geometry)&&a.geometry.type==="polyline"}const F=100;let c=class extends z{constructor(a){super(a),this._chartData=null,this._visualElements=[],this._handles=new y}initialize(){const a=O(e=>{this._update(e)},F);this._handles.add([d(()=>({spatialReference:this.view.spatialReference,chartData:this._chartData}),a,p),a])}destroy(){this._handles.destroy(),this._destroyVisualElements()}remove(){this._destroyVisualElements()}update(a){this._chartData=a}_update(a){const{chartData:e}=a;if(u(e))return this.remove();if(!e.refined)return;const s=this._visualElements,t=e.lines.filter(n=>n.viewVisualizationEnabled),h=t.length;for(;s.length>h;)s.pop().destroy();const i=M;for(;s.length<h;){const n=new R({view:this.view,elevationInfo:{mode:"absolute-height",offset:0},innerWidth:i.width-i.outlineSize,width:i.width,falloff:i.falloff,color:i.outlineColor,renderOccluded:i.renderOccluded});s.push(n)}const o=a.spatialReference;for(let n=0;n<h;++n){const r=s[n],l=t[h-1-n];r.geometry=this._createLineGeometry(l,o),r.innerColor=j(x.toUnitRGBA(l.color))}}_createLineGeometry(a,e){const s=A(a.samples,[]),t=s.length-1,h=[];let i=[];for(let o=0;o<=t;o++){const{x:n,y:r,z:l}=s[o];f(l)&&i.push([n,r,l]),(o===t||u(l))&&i.length&&(h.push(i),i=[])}return new I({paths:h,hasZ:!0,spatialReference:e})}_destroyVisualElements(){this._visualElements.forEach(a=>a.destroy()),this._visualElements.length=0}};g([w()],c.prototype,"view",void 0),g([w()],c.prototype,"_chartData",void 0),c=g([V("esri.widgets.ElevationProfile.support.ProfileLines3D")],c);class X{constructor(e,s){this._handles=new y,this._inputRepresentation=new U({view:e}),this._hoveredPoints=new S({view:e}),this._profileLines=new c({view:e}),this._handles.add([d(()=>s.viewModel.hoveredPoints,t=>this._hoveredPoints.update(t),p),d(()=>{const{state:t,editable:h,highlightEnabled:i,viewModel:o}=s,n=o.input;return E(n,r=>{r.commitProperty("geometry"),r.commitProperty("layer")}),{input:n,state:t,editable:h,highlightEnabled:i}},t=>this._updateInputRepresentation(t),p),d(()=>s.viewModel.chartData,t=>this._profileLines.update(t),p),d(()=>E(s.viewModel.input,t=>t.geometry),()=>{this._profileLines.remove()},p)])}destroy(){this._handles=_(this._handles),this._inputRepresentation=_(this._inputRepresentation),this._hoveredPoints=_(this._hoveredPoints),this._profileLines=_(this._profileLines)}_updateInputRepresentation({input:e,state:s,editable:t,highlightEnabled:h}){const i=this._inputRepresentation;if(!h)return i.remove();s===b.Selected?i.showHighlight(e):s!==b.Created||t?i.remove():i.showReshaping(e)}}export{X as ElevationProfileView3D};
