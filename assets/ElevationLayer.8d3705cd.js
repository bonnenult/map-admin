var f=Object.defineProperty,S=Object.defineProperties;var b=Object.getOwnPropertyDescriptors;var c=Object.getOwnPropertySymbols;var T=Object.prototype.hasOwnProperty,x=Object.prototype.propertyIsEnumerable;var d=(e,t,r)=>t in e?f(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,p=(e,t)=>{for(var r in t||(t={}))T.call(t,r)&&d(e,r,t[r]);if(c)for(var r of c(t))x.call(t,r)&&d(e,r,t[r]);return e},h=(e,t)=>S(e,b(t));import{X as j,kE as _,kF as $,kG as I,kH as k,kI as D,kJ as E,fW as V,r as u,an as C,co as L,bb as y,kK as O,T as v,e as s,d as o,kL as A,kM as U,f6 as q,i as J,f as N}from"./index.988b09cd.js";import"./vendor.c6be4c00.js";import"./index.25aa0880.js";/* empty css              */import"./qrcode.0911187d.js";/* empty css                 */const m=j.getLogger("esri.layers.ElevationLayer");let a=class extends _($(I(k(D(N))))){constructor(...e){super(...e),this.copyright=null,this.heightModelInfo=null,this.path=null,this.opacity=1,this.operationalLayerType="ArcGISTiledElevationServiceLayer",this.sourceJSON=null,this.type="elevation",this.url=null,this.version=null,this._lercDecoder=E()}normalizeCtorArgs(e,t){return typeof e=="string"?p({url:e},t):e}destroy(){this._lercDecoder=V(this._lercDecoder)}set minScale(e){this.constructed&&m.warn(`${this.declaredClass}.minScale support has been removed (since 4.5)`)}get minScale(){}set maxScale(e){this.constructed&&m.warn(`${this.declaredClass}.maxScale support has been removed (since 4.5)`)}get maxScale(){}readVersion(e,t){let r=t.currentVersion;return r||(r=9.3),r}load(e){const t=u(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"],supportsData:!1,validateItem:r=>{for(let i=0;i<r.typeKeywords.length;i++)if(r.typeKeywords[i].toLowerCase()==="elevation 3d layer")return!0;throw new C("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}' ",{type:"Image Service",expectedType:"Image Service Elevation 3D Layer"})}},e).catch(L).then(()=>this._fetchImageService(t))),Promise.resolve(this)}fetchTile(e,t,r,i){const n=u((i=i||{signal:null}).signal)?i.signal:i.signal=new AbortController().signal,g={responseType:"array-buffer",signal:n},w={noDataValue:i.noDataValue,returnFileInfo:!0};return this.load().then(()=>this._fetchTileAvailability(e,t,r,i)).then(()=>y(this.getTileUrl(e,t,r),g)).then(l=>this._lercDecoder.decode(l.data,w,n)).then(l=>({values:l.pixelData,width:l.width,height:l.height,maxZError:l.fileInfo.maxZError,noDataValue:l.noDataValue,minValue:l.minValue,maxValue:l.maxValue}))}getTileUrl(e,t,r){const i=!this.tilemapCache&&this.supportsBlankTile,n=O(h(p({},this.parsedUrl.query),{blankTile:!i&&null}));return`${this.parsedUrl.path}/tile/${e}/${t}/${r}${n?"?"+n:""}`}async queryElevation(e,t){const{ElevationQuery:r}=await import("./index.988b09cd.js").then(function(i){return i.ty});return v(t),new r().query(this,e,t)}async createElevationSampler(e,t){const{ElevationQuery:r}=await import("./index.988b09cd.js").then(function(i){return i.ty});return v(t),new r().createSampler(this,e,t)}_fetchTileAvailability(e,t,r,i){return this.tilemapCache?this.tilemapCache.fetchAvailability(e,t,r,i):Promise.resolve("unknown")}async _fetchImageService(e){if(this.sourceJSON)return this.sourceJSON;const t={query:p({f:"json"},this.parsedUrl.query),responseType:"json",signal:e},r=await y(this.parsedUrl.path,t);r.ssl&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=r.data,this.read(r.data,{origin:"service",url:this.parsedUrl})}get hasOverriddenFetchTile(){return!this.fetchTile.__isDefault__}};s([o({json:{read:{source:"copyrightText"}}})],a.prototype,"copyright",void 0),s([o({readOnly:!0,type:A})],a.prototype,"heightModelInfo",void 0),s([o({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],a.prototype,"path",void 0),s([o({type:["show","hide"]})],a.prototype,"listMode",void 0),s([o({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],a.prototype,"minScale",null),s([o({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],a.prototype,"maxScale",null),s([o({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],a.prototype,"opacity",void 0),s([o({type:["ArcGISTiledElevationServiceLayer"]})],a.prototype,"operationalLayerType",void 0),s([o()],a.prototype,"sourceJSON",void 0),s([o({json:{read:!1},value:"elevation",readOnly:!0})],a.prototype,"type",void 0),s([o(U)],a.prototype,"url",void 0),s([o()],a.prototype,"version",void 0),s([q("version",["currentVersion"])],a.prototype,"readVersion",null),a=s([J("esri.layers.ElevationLayer")],a),a.prototype.fetchTile.__isDefault__=!0;const z=a;export{z as default};
