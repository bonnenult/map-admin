var x=Object.defineProperty,F=Object.defineProperties;var w=Object.getOwnPropertyDescriptors;var $=Object.getOwnPropertySymbols;var C=Object.prototype.hasOwnProperty,J=Object.prototype.propertyIsEnumerable;var j=(r,e,s)=>e in r?x(r,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):r[e]=s,m=(r,e)=>{for(var s in e||(e={}))C.call(e,s)&&j(r,s,e[s]);if($)for(var s of $(e))J.call(e,s)&&j(r,s,e[s]);return r},g=(r,e)=>F(r,w(e));import{e as t,d as o,aA as b,f6 as u,jU as O,v as q,h as A,i as P,eb as T,fS as I,cn as M,r as z,kz as E,gA as G,bb as K,kA as Q}from"./index.988b09cd.js";import{c as U,a as V,u as d,d as Z,b as D,p as H,o as L}from"./networkService.216d80a7.js";import"./vendor.c6be4c00.js";import"./index.25aa0880.js";/* empty css              */import"./qrcode.0911187d.js";/* empty css                 */import"./GPMessage.07f07255.js";function W(r){return r.features.map(e=>{const s=M.fromJSON(r.spatialReference),n=A.fromJSON(e);return z(n.geometry)&&(n.geometry.spatialReference=s),n})}function y(r){return I.fromJSON(r).features.map(e=>e.geometry)}let i=class extends T{constructor(r){super(r),this.directions=null,this.facilities=null,this.incidents=null,this.messages=null,this.pointBarriers=null,this.polylineBarriers=null,this.polygonBarriers=null,this.routes=null}readFacilities(r){return y(r)}readIncidents(r){return y(r)}readPointBarriers(r,e){return y(e.barriers)}readPolylineBarriers(r){return y(r)}readPolygonBarriers(r){return y(r)}readRoutes(r){return W(r)}};t([o({type:[U]})],i.prototype,"directions",void 0),t([o({type:[b]})],i.prototype,"facilities",void 0),t([u("facilities")],i.prototype,"readFacilities",null),t([o({type:[b]})],i.prototype,"incidents",void 0),t([u("incidents")],i.prototype,"readIncidents",null),t([o({type:[V]})],i.prototype,"messages",void 0),t([o({type:[b]})],i.prototype,"pointBarriers",void 0),t([u("pointBarriers",["barriers"])],i.prototype,"readPointBarriers",null),t([o({type:[O]})],i.prototype,"polylineBarriers",void 0),t([u("polylineBarriers")],i.prototype,"readPolylineBarriers",null),t([o({type:[q]})],i.prototype,"polygonBarriers",void 0),t([u("polygonBarriers")],i.prototype,"readPolygonBarriers",null),t([o({type:[A]})],i.prototype,"routes",void 0),t([u("routes")],i.prototype,"readRoutes",null),i=t([P("esri.rest.support.ClosestFacilitySolveResult")],i);const X=i,Y=L({accumulateAttributes:{name:"accumulateAttributeNames"},attributeParameterValues:!0,directionsTimeAttribute:{name:"directionsTimeAttributeName"},impedanceAttribute:{name:"impedanceAttributeName"},facilities:!0,incidents:!0,outSpatialReference:{name:"outSR",getter:r=>r.outSpatialReference.wkid},pointBarriers:{name:"barriers"},polylineBarriers:!0,polygonBarriers:!0,restrictionAttributes:{name:"restrictionAttributeNames"},returnPointBarriers:{name:"returnBarriers"},returnRoutes:{name:"returnCFRoutes"},travelMode:!0});async function _(r,e,s){const n=[],p=[],l={},c={},h=E(r),{path:v}=h;e.incidents&&e.incidents.features&&d(e.incidents.features,p,"incidents.features",l),e.facilities&&e.facilities.features&&d(e.facilities.features,p,"facilities.features",l),e.pointBarriers&&e.pointBarriers.features&&d(e.pointBarriers.features,p,"pointBarriers.features",l),e.polylineBarriers&&e.polylineBarriers.features&&d(e.polylineBarriers.features,p,"polylineBarriers.features",l),e.polygonBarriers&&e.polygonBarriers.features&&d(e.polygonBarriers.features,p,"polygonBarriers.features",l);const R=await G(p);for(const a in l){const f=l[a];n.push(a),c[a]=R.slice(f[0],f[1])}if(Z(c,n)){let a=null;try{a=await D(v,e.apiKey,s)}catch{}a&&!a.hasZ&&H(c,n)}for(const a in c)c[a].forEach((f,N)=>{e.get(a)[N].geometry=f});const S=g(m({},s),{query:g(m(m({},h.query),Y.toQueryParams(e)),{f:"json"})}),{data:k}=await K(`${v}/solveClosestFacility`,S);return X.fromJSON(k)}let B=class extends Q{constructor(r){super(r),this.url=null}solve(r,e){return _(this.url,r,e)}};t([o()],B.prototype,"url",void 0),B=t([P("esri.tasks.ClosestFacilityTask")],B);const pe=B;export{pe as default};
