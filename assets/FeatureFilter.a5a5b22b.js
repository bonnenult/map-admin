import{bE as d,c4 as c,cv as _,bc as p,e0 as y,b0 as m}from"./vendor.c8f3cc8c.js";import{Z as f,v as w,n as b}from"./spatialQuerySupport.88aac535.js";import{u as I}from"./FeatureStore2D.553b9dd8.js";import"./projectionSupport.a9ad5f38.js";import"./json.2d0d6862.js";import"./CircularArray.0c10b958.js";import"./FeatureSetReader.2ffb1ded.js";import"./centroid.d0af71ad.js";const u=d.getLogger("esri.views.2d.layers.features.support.whereUtils"),g={getAttribute:(r,e)=>r.field(e)};async function T(r,e){const t=await import("./WhereClause.23a6eab5.js");try{const i=t.WhereClause.create(r,e);if(!i.isStandardized){const s=new c("mapview - bad input","Unable to apply filter's definition expression, as expression is not standardized.",i);u.error(s)}return s=>{const n=s.readArcadeFeature();return i.testFeature(n,g)}}catch{return u.warn("mapview-bad-where-clause","Encountered an error when evaluating where clause",r),s=>!0}}const v=d.getLogger("esri.views.2d.layers.features.controllers.FeatureFilter"),o=1,j=2;class H{constructor(e){this._geometryBounds=_(),this._idToVisibility=new Map,this._serviceInfo=e}get hash(){return this._hash}check(e){return this._applyFilter(e)}clear(){const e=this._resetAllHiddenIds();return this.update(),{show:e,hide:[]}}invalidate(){this._idToVisibility.forEach((e,t)=>{this._idToVisibility.set(t,0)})}setKnownIds(e){for(const t of e)this._idToVisibility.set(t,o)}setTrue(e){const t=[],i=[],s=new Set(e);return this._idToVisibility.forEach((n,a)=>{const l=!!(this._idToVisibility.get(a)&o),h=s.has(a);!l&&h?t.push(a):l&&!h&&i.push(a),this._idToVisibility.set(a,h?o|j:0)}),{show:t,hide:i}}createQuery(){const{geometry:e,spatialRel:t,where:i,timeExtent:s,objectIds:n}=this;return p.fromJSON({geometry:e,spatialRel:t,where:i,timeExtent:s,objectIds:n})}async update(e,t){this._hash=JSON.stringify(e);const i=await f(e,null,t);await Promise.all([this._setGeometryFilter(i),this._setIdFilter(i),this._setAttributeFilter(i),this._setTimeFilter(i)])}async _setAttributeFilter(e){if(!e||!e.where)return this._clause=null,void(this.where=null);this._clause=await T(e.where,this._serviceInfo.fieldsIndex),this.where=e.where}_setIdFilter(e){this._idsToShow=e&&e.objectIds&&new Set(e.objectIds),this._idsToHide=e&&e.hiddenIds&&new Set(e.hiddenIds),this.objectIds=e&&e.objectIds}async _setGeometryFilter(e){if(!e||!e.geometry)return this._spatialQueryOperator=null,this.geometry=null,void(this.spatialRel=null);const t=e.geometry,i=e.spatialRel||"esriSpatialRelIntersects",s=await w(i,t,this._serviceInfo.geometryType,this._serviceInfo.hasZ,this._serviceInfo.hasM);y(this._geometryBounds,t),this._spatialQueryOperator=s,this.geometry=t,this.spatialRel=i}_setTimeFilter(e){if(this.timeExtent=this._timeOperator=null,e&&e.timeExtent)if(this._serviceInfo.timeInfo)this.timeExtent=e.timeExtent,this._timeOperator=b(this._serviceInfo.timeInfo,e.timeExtent,I);else{const t=new c("feature-layer-view:time-filter-not-available","Unable to apply time filter, as layer doesn't have time metadata.",e.timeExtent);v.error(t)}}_applyFilter(e){return this._filterByGeometry(e)&&this._filterById(e)&&this._filterByTime(e)&&this._filterByExpression(e)}_filterByExpression(e){return!this.where||this._clause(e)}_filterById(e){return(!this._idsToHide||!this._idsToHide.size||!this._idsToHide.has(e.getObjectId()))&&(!this._idsToShow||!this._idsToShow.size||this._idsToShow.has(e.getObjectId()))}_filterByGeometry(e){if(!this.geometry)return!0;const t=e.readHydratedGeometry();return!!t&&this._spatialQueryOperator(t)}_filterByTime(e){return!m(this._timeOperator)||this._timeOperator(e)}_resetAllHiddenIds(){const e=[];return this._idToVisibility.forEach((t,i)=>{t&o||(this._idToVisibility.set(i,o),e.push(i))}),e}}export{H as default};
