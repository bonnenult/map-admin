import{b4 as c,h5 as d,bK as n,cy as u,gL as h,aV as g,aW as o,aX as b,aY as S,gm as v,bN as j}from"./vendor.70daa49e.js";import{b as m}from"./TileTreeDebugger.bafb9aac.js";let p=class extends m{constructor(l){super(l)}getTiles(){const l=this.lv.getVisibleNodes(),r=this.view.renderSpatialReference,t=this.nodeSR;return l.map(a=>y(a,r,t)).sort((a,s)=>a.lij[0]===s.lij[0]?a.label>s.label?-1:1:a.lij[0]-s.lij[0])}};function y(l,r,t){const a=l.serviceObb;if(c(a)||c(r))return null;d(i,a.quaternion),n(e,a.center),u(e,t,0,e,r,0,1),i[12]=e[0],i[13]=e[1],i[14]=e[2];const s=[[],[],[]];n(e,a.halfSize),h(e,e,i),u(e,r,0,e,t,0,1),s[0].push([e[0],e[1]]),n(e,a.halfSize),e[0]=-e[0],h(e,e,i),u(e,r,0,e,t,0,1),s[0].push([e[0],e[1]]),n(e,a.halfSize),e[0]=-e[0],e[1]=-e[1],h(e,e,i),u(e,r,0,e,t,0,1),s[0].push([e[0],e[1]]),n(e,a.halfSize),e[1]=-e[1],h(e,e,i),u(e,r,0,e,t,0,1),s[0].push([e[0],e[1]]),s[1].push(s[0][0]),s[1].push(s[0][1]),n(e,a.halfSize),e[0]=-e[0],e[2]=-e[2],h(e,e,i),u(e,r,0,e,t,0,1),s[1].push([e[0],e[1]]),n(e,a.halfSize),e[2]=-e[2],h(e,e,i),u(e,r,0,e,t,0,1),s[1].push([e[0],e[1]]),s[2].push(s[0][0]),s[2].push(s[0][3]),n(e,a.halfSize),e[1]=-e[1],e[2]=-e[2],h(e,e,i),u(e,r,0,e,t,0,1),s[2].push([e[0],e[1]]),s[2].push(s[1][3]);const f=new g({rings:s,spatialReference:t});return{lij:[l.level,l.childCount,0],label:l.id,geometry:f}}o([b({constructOnly:!0})],p.prototype,"lv",void 0),o([b({constructOnly:!0})],p.prototype,"nodeSR",void 0),p=o([S("esri.views.3d.layers.support.I3STreeDebugger")],p);const i=v(),e=j();export{p as I3STreeDebugger};
