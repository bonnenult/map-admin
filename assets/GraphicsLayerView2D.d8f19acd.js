import{fX as p,as as o,bd as h,aX as a,aY as c,aZ as l}from"./vendor.c8f3cc8c.js";import{l as n}from"./LayerView2D.25658a74.js";import{i as m}from"./GraphicContainer.02e1f23b.js";import{i as d}from"./BaseGraphicContainer.ed4b7b6a.js";import"./Container.98366c00.js";import"./EffectView.59df383f.js";import"./Utils.b2b84829.js";import"./number.dfbabd3f.js";import"./CIMSymbolHelper.05203bfb.js";import"./BidiEngine.aae60613.js";import"./definitions.21e97413.js";import"./GeometryUtils.d4e26b77.js";import"./normalizeUtilsSync.dd7ec7e5.js";import"./projectionSupport.a9ad5f38.js";import"./json.2d0d6862.js";import"./FeatureContainer.f5fb900c.js";import"./visualVariablesUtils.98dff1e6.js";import"./visualVariablesUtils.9dcd3ad7.js";import"./TileContainer.b3c46ff1.js";import"./WGLContainer.465f24a3.js";import"./brushes.97799122.js";import"./programUtils.d5889455.js";import"./GeometryUtils.ea8c8742.js";import"./MaterialKey.56ac52e4.js";import"./pixelUtils.c614fa0a.js";import"./Matcher.b81ee078.js";import"./tileUtils.8432939a.js";import"./TileClipper.af441dba.js";import"./cimAnalyzer.ddfafba2.js";import"./cimSymbolUtils.441175f3.js";import"./schemaUtils.3bffe16f.js";import"./MD5.f9440c6b.js";import"./util.de314230.js";import"./ComputedAttributeStorage.8a8199a7.js";import"./FeatureSetReader.2ffb1ded.js";import"./centroid.d0af71ad.js";import"./GraphicsView.991cf1e8.js";const f={remove(){},pause(){},resume(){}};let s=class extends n(p){initialize(){this.graphicsView=new d({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new m(this.view.featuresTilingScheme)})}attach(){this.container.addChild(this.graphicsView.container),this.handles.add(this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler),"graphicslayerview2d")}detach(){this.container.removeAllChildren(),this.graphicsView.destroy(),this.handles.remove("graphicslayerview2d")}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i):null}async fetchPopupFeatures(i){if(this.graphicsView)return this.graphicsView.hitTest(i).filter(r=>!!r.popupTemplate)}update(i){this.graphicsView.processUpdate(i)}moveStart(){}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i){var r;let e;return typeof i=="number"?e=[i]:i instanceof o?e=[i.uid]:Array.isArray(i)&&i.length>0?e=typeof i[0]=="number"?i:i.map(t=>t&&t.uid):h.isCollection(i)&&i.length>0&&(e=i.map(t=>t&&t.uid).toArray()),e=(r=e)==null?void 0:r.filter(t=>t!=null),e.length?(this.graphicsView.addHighlight(e),{remove:()=>this.graphicsView.removeHighlight(e)}):f}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}};a([c()],s.prototype,"graphicsView",void 0),s=a([l("esri.views.2d.layers.GraphicsLayerView2D")],s);const Q=s;export{Q as default};
