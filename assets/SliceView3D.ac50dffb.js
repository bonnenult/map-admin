import{bE as $,aX as s,aY as l,aZ as p,a_ as w,aV as g,ba as C,lW as x,lX as z,b0 as n,k$ as y,cc as _,lY as D,b5 as u,lZ as j,l_ as G,l$ as O,m0 as A,m1 as B,m2 as R,m3 as k,l0 as S,b9 as v,cd as F,hz as E,lu as I,m4 as M,m5 as P,m6 as U,hj as q,m7 as T,m8 as X,m9 as Y,k_ as Z,ma as H,mb as N}from"./vendor.c8f3cc8c.js";import{p as W}from"./AnalysisView3D.6ee7bff6.js";import{U as J}from"./BuildingComponentSublayer.f8965431.js";import"./capabilities.2e888fa1.js";import"./I3SIndexInfo.620d5bbd.js";import"./I3SLayerDefinitions.586abe87.js";function K(e,i,t){t.warnOnce(`Failed to project analysis geometry (id: '${e.id}'), projection from spatial reference (wkid: '${i.wkid}') to view spatial reference is not supported. Projection may be possible after calling projection.load().`)}const f=$.getLogger("esri.views.3d.analysis.Slice.SliceController");let d=class extends w{constructor(e){super(e),this._handles=new g,this._internalChange=!1,this._currentSlicePlane=null,this.state="pending"}get ready(){return this.state==="ready"}initialize(){this._handles.add(this.analysis.excludedLayers.on("before-add",e=>{const i=e.item;i!=null&&(i instanceof C||i instanceof J)?i instanceof C&&x(i)?(f.error("excludedLayers",`Layer '${i.title}, id:${i.id}' of type '${i.type}' can not be individually excluded from slicing. Use 'excludeGroundSurface' instead.`),e.preventDefault()):this.analysis.excludedLayers.includes(i)&&e.preventDefault():(f.error("excludedLayers","Invalid layer type, layer must derive from Layer or BuildingComponentSublayer"),e.preventDefault())})),this._handles.add(z(()=>this.view.ready&&n(this.view.renderCoordsHelper),()=>this._initialize(),{sync:!0,initial:!0,once:!0}))}_initialize(){this.state!=="destroyed"&&this.state!=="ready"&&(ee(this.view,this),this._handles.add([y(()=>this.analysisView.analysisViewData.plane,()=>{this._internalChange||this._updateSlicePlaneFromBoundedPlane(),this._updateLayerViews()},{sync:!0}),y(()=>this.analysis.excludeGroundSurface,()=>this._updateLayerViews(),{sync:!0}),this.analysis.excludedLayers.on("change",()=>this._updateLayerViews()),y(()=>[this.analysisView.active,this.analysisView.visible],()=>{this._updateActiveController(),this._updateViewSlicePlane()},{sync:!0}),y(()=>this._allLayerAndSubLayerViews,()=>this._updateLayerViews())]),this._handles.add([y(()=>this.analysis.shape,()=>{this._internalChange||(this._updateBoundedPlaneFromSlicePlane(),this._updateViewSlicePlane())},{sync:!0})],"analysis"),this._set("state","ready"),this._updateActiveController(),this._updateBoundedPlaneFromSlicePlane(),this._updateViewSlicePlane())}destroy(){this.state!=="destroyed"&&this.state!=="pending"&&(this.analysisView.active=!1,ie(this.view,this),this._handles.destroy(),this.view.slicePlane=null,this.set("view",null),this._set("state","destroyed"))}async whenReady(){return await _(this,"ready"),this}get _allLayerAndSubLayerViews(){const e=this.view.allLayerViews.items;return e.concat(e.filter(D).flatMap(({sublayerViews:i})=>i.items))}_updateBoundedPlaneFromSlicePlane(){const e=this.analysis.shape,i=this._currentSlicePlane;if(u(i)&&u(e)||n(i)&&n(e)&&e.equals(i))return;let t=null,a=null;if(n(e)&&n(e.position)){const o=e.position.spatialReference,b=j(e,this.view.spatialReference);u(b)&&K(this.analysis,o,f),t=G(b,this.view,{tiltEnabled:this.analysis.tiltEnabled},O()),n(t)&&(a={heading:e.heading,tilt:e.tilt,position:e.position,width:e.width,height:e.height})}this._currentSlicePlane=a,this._internalChange=!0,this.analysisView.analysisViewData.plane=t,this._internalChange=!1}_updateSlicePlaneFromBoundedPlane(){const e=this.analysisView.analysisViewData.plane,i=A(e,this.view,this.view.spatialReference,new B);let t=null;n(i)&&(t={heading:i.heading,tilt:i.tilt,position:i.position,width:i.width,height:i.height}),this._currentSlicePlane=t,this._internalChange=!0,this.analysis.shape=i,this._internalChange=!1,this._updateViewSlicePlane()}_updateActiveController(){if(m)return;const e=L(this.view);if(this.analysisView.active)n(e.activeController)&&e.activeController!==this?(m=!0,e.activeController.analysisView.active=!1,m=!1):n(e.activeController)&&e.activeController,this._updateLayerViews(),e.activeController=this;else{if(n(e.activeController)&&e.activeController!==this)return;n(e.activeController)&&e.activeController===this&&(e.activeController=null,this._updateLayerViews())}}_updateViewSlicePlane(){this.state==="ready"&&Q(this.view)}_updateLayerViews(){const e=n(this.analysisView.analysisViewData.plane)&&this.analysisView.visible&&this.analysisView.active,i=[],t=a=>{"layers"in a?a.layers.forEach(t):i.push(a)};this.analysis.excludedLayers.forEach(t),this.view.allLayerViews.forEach(a=>{a.destroyed||("slicePlaneEnabled"in a&&(a.slicePlaneEnabled=e&&i.indexOf(a.layer)<0),"sublayerViews"in a&&a.sublayerViews.forEach(o=>{o.slicePlaneEnabled=e&&i.indexOf(o.sublayer)<0}))}),this.view.basemapTerrain!=null&&(this.view.basemapTerrain.slicePlaneEnabled=e&&!this.analysis.excludeGroundSurface)}};s([l({readOnly:!0})],d.prototype,"state",void 0),s([l()],d.prototype,"view",void 0),s([l()],d.prototype,"analysis",void 0),s([l()],d.prototype,"analysisView",void 0),s([l()],d.prototype,"ready",null),s([l()],d.prototype,"_allLayerAndSubLayerViews",null),d=s([p("esri.views.3d.analysis.Slice.SliceController")],d);const c=new Map;let m=!1;function Q(e){const i=L(e).activeController;n(i)&&n(i.analysisView.analysisViewData.plane)&&i.analysisView.visible?e.slicePlane=i.analysisView.analysisViewData.plane:e.slicePlane=null}function ee(e,i){c.has(e)||c.set(e,{all:[],activeController:null}),c.get(e).all.push(i)}function L(e){return c.get(e)}function ie(e,i){if(!c.has(e))throw new Error("view expected in global slice register");const t=c.get(e),a=t.all.lastIndexOf(i);if(a===-1)throw new Error("controller expected in global slice register");t.all.splice(a,1),t.all.length===0&&c.delete(e)}let V=class extends w{constructor(){super(...arguments),this.plane=null}};s([l()],V.prototype,"plane",void 0),V=s([p("esri.views.3d.analysis.Slice.SliceViewData")],V);let r=class extends w{constructor(e){super(e),this._handles=new g,this._gridVisualElement=null,this._outlineVisualElement=null,this.state="pending",this.showGrid=!1,this.editable=!0}get ready(){return this.state==="ready"}initialize(){this._initialize()}async _initialize(){if(this.state==="destroyed"||this.state==="ready")return;await _(this.view,"ready",!0);const e=this.analysisView.analysisViewData;if(u(e))throw new Error("expected internal object to be valid");this._gridVisualElement=R(this.view),this._outlineVisualElement=k(this.view),this._handles.add([y(()=>({visible:n(e.plane)&&this.analysisView.visible,active:this.analysisView.active,editable:this.editable,showGrid:this.showGrid}),i=>this._updateMaterials(i),S),y(()=>e.plane,i=>this._updatePlane(i),S)],"internal"),this._set("state","ready")}destroy(){this.state!=="destroyed"&&this.state!=="pending"&&(this._handles.destroy(),this._gridVisualElement=v(this._gridVisualElement),this._outlineVisualElement=v(this._outlineVisualElement),this.set("view",null),this._set("state","destroyed"))}async whenReady(){return await _(this,"ready"),this}_updatePlane(e){if(u(e))return;const i=F(I.get(),E(e.basis1),E(e.basis2),1),t=M(P.get(),i),a=U(e,P.get()),o=q(t,a,t);this._outlineVisualElement.transform=o,this._gridVisualElement.transform=o}_updateMaterials({visible:e,active:i,editable:t,showGrid:a}){this._outlineVisualElement.color=T,this._outlineVisualElement.width=t?X:Y,this._outlineVisualElement.stipplePattern=i?null:Z(5);const o=a?N:[0,0,0,0];this._gridVisualElement.backgroundColor=H,this._gridVisualElement.gridColor=o,this._gridVisualElement.visible=e,this._outlineVisualElement.visible=e}};s([l({readOnly:!0})],r.prototype,"state",void 0),s([l()],r.prototype,"view",void 0),s([l()],r.prototype,"analysis",void 0),s([l()],r.prototype,"analysisView",void 0),s([l()],r.prototype,"ready",null),s([l()],r.prototype,"showGrid",void 0),s([l()],r.prototype,"editable",void 0),r=s([p("esri.views.3d.analysis.Slice.SliceVisualization")],r);let h=class extends W(w){constructor(e){super(e),this.type="slice-view",this.analysisVisualization=null,this.analysisController=null,this.analysisViewData=new V,this.active=!0,this.showGrid=!1,this.editable=!1}initialize(){this.analysisVisualization=new r({view:this.view,analysis:this.analysis,analysisView:this}),this.analysisController=new d({view:this.view,analysis:this.analysis,analysisView:this})}destroy(){this.analysisVisualization=v(this.analysisVisualization),this.analysisController=v(this.analysisController)}async when(){return await this.analysisVisualization.whenReady(),await this.analysisController.whenReady(),this}get testData(){return{visualization:this.analysisVisualization,controller:this.analysisController}}};s([l()],h.prototype,"type",void 0),s([l()],h.prototype,"analysis",void 0),s([l()],h.prototype,"analysisViewData",void 0),s([l()],h.prototype,"active",void 0),s([l({aliasOf:"analysisVisualization.showGrid"})],h.prototype,"showGrid",void 0),s([l({aliasOf:"analysisVisualization.editable"})],h.prototype,"editable",void 0),h=s([p("esri.views.3d.analysis.Slice.SliceView3D")],h);const oe=h;export{oe as default};
