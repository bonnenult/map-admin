var O=Object.defineProperty,_=Object.defineProperties;var j=Object.getOwnPropertyDescriptors;var m=Object.getOwnPropertySymbols;var x=Object.prototype.hasOwnProperty,I=Object.prototype.propertyIsEnumerable;var f=(e,t,i)=>t in e?O(e,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[t]=i,a=(e,t)=>{for(var i in t||(t={}))x.call(t,i)&&f(e,i,t[i]);if(m)for(var i of m(t))I.call(t,i)&&f(e,i,t[i]);return e},d=(e,t)=>_(e,j(t));import{sn as b,n as M,dy as L,bb as $,at as u,e as o,d as r,i as v,kF as N,kG as D,kH as J,ru as U,kI as k,ry as A,f as K,u as P,aS as V,dz as z,co as C,r as R,t as F,an as y,gr as q,f6 as E,rC as G}from"./index.988b09cd.js";import{N as H}from"./SceneService.0f1d9f36.js";import{s as B,l as Q,u as W,m as X}from"./I3SLayerDefinitions.3938f828.js";import{f as l}from"./SceneModification.5a303e34.js";import"./vendor.c6be4c00.js";import"./index.25aa0880.js";/* empty css              */import"./qrcode.0911187d.js";/* empty css                 */import"./I3SIndexInfo.c2d3f440.js";import"./resourceUtils.c74f626c.js";var n;let p=n=class extends b(M.ofType(l)){constructor(e){super(e),this.url=null}toJSON(e){return this.toArray().map(t=>t.toJSON(e)).filter(t=>!!t.geometry)}clone(){return new n({url:this.url,items:this.items.map(e=>e.clone())})}_readModifications(e,t){for(const i of e)this.add(l.fromJSON(i,t))}static fromJSON(e,t){const i=new n;return i._readModifications(e,t),i}static async fromUrl(e,t,i){const S={url:L(e),origin:"service"},w=await $(e,{responseType:"json",signal:u(i,"signal")}),T=t.toJSON(),c=[];for(const h of w.data)c.push(l.fromJSON(d(a({},h),{geometry:d(a({},h.geometry),{spatialReference:T})}),S));return new n({url:e,items:c})}};o([r({type:String})],p.prototype,"url",void 0),p=n=o([v("esri.layers.support.SceneModifications")],p);const g=p;let s=class extends H(N(D(J(U(k(A(K))))))){constructor(...e){super(...e),this.handles=new P,this.geometryType="mesh",this.operationalLayerType="IntegratedMeshLayer",this.type="integrated-mesh",this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.profile="mesh-pyramids",this.modifications=null,this._modificationsSource=null,this.elevationInfo=null,this.path=null}destroy(){this.handles.destroy()}initialize(){this.handles.add(V(this,"modifications","after-changes",()=>this.modifications=this.modifications,null,null,!0))}normalizeCtorArgs(e,t){return typeof e=="string"?a({url:e},t):e}readModifications(e,t,i){this._modificationsSource={url:z(e,i),context:i}}async load(e){return this.addResolvingPromise(this._doLoad(e)),this}async _doLoad(e){const t=u(e,"signal");try{await this.loadFromPortal({supportedTypes:["Scene Service"]},e)}catch(i){C(i)}if(await this._fetchService(t),R(this._modificationsSource)){const i=await g.fromUrl(this._modificationsSource.url,this.spatialReference,e);this.setAtOrigin("modifications",i,this._modificationsSource.context.origin),this._modificationsSource=null}await this._fetchIndexAndUpdateExtent(this.nodePages,t)}beforeSave(){if(!F(this._modificationsSource))return this.load().then(()=>{},()=>{})}async saveAs(e,t){return this._debouncedSaveOperations(1,d(a({},t),{getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"}),e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"};return this._debouncedSaveOperations(0,e)}validateLayer(e){if(e.layerType&&e.layerType!=="IntegratedMesh")throw new y("integrated-mesh-layer:layer-type-not-supported","IntegratedMeshLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new y("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new y("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"})}_getTypeKeywords(){return["IntegratedMeshLayer"]}};o([r({type:String,readOnly:!0})],s.prototype,"geometryType",void 0),o([r({type:["show","hide"]})],s.prototype,"listMode",void 0),o([r({type:["IntegratedMeshLayer"]})],s.prototype,"operationalLayerType",void 0),o([r({json:{read:!1},readOnly:!0})],s.prototype,"type",void 0),o([r({type:B,readOnly:!0})],s.prototype,"nodePages",void 0),o([r({type:[Q],readOnly:!0})],s.prototype,"materialDefinitions",void 0),o([r({type:[W],readOnly:!0})],s.prototype,"textureSetDefinitions",void 0),o([r({type:[X],readOnly:!0})],s.prototype,"geometryDefinitions",void 0),o([r({readOnly:!0})],s.prototype,"serviceUpdateTimeStamp",void 0),o([r({type:g}),q({origins:["web-scene","portal-item"],type:"resource",prefix:"modifications"})],s.prototype,"modifications",void 0),o([E(["web-scene","portal-item"],"modifications")],s.prototype,"readModifications",null),o([r(G)],s.prototype,"elevationInfo",void 0),o([r({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],s.prototype,"path",void 0),s=o([v("esri.layers.IntegratedMeshLayer")],s);const ye=s;export{ye as default};
