import{ee as g,ef as c,eg as f,h8 as u,aI as b,t as p,is as I,eh as z,ck as R,e as d,d as m,i as x}from"./index.fe92decb.js";import{m as S}from"./ImageryTileLayerView.aaf419e5.js";import{i as T}from"./RefreshableLayerView.4c074742.js";import"./vendor.d9e807b5.js";import"./index.dbbecfd7.js";/* empty css              */import"./qrcode.0911187d.js";/* empty css                 */import"./rasterProjectionHelper.28e9f319.js";import"./popupUtils.16f9871e.js";let a=class extends S(T(g(c(f)))){constructor(){super(...arguments),this.type="imagery-tile-3d",this.isAlignedMapTile=!0}initialize(){this.layer.increaseRasterJobHandlerUsage();const e=this.updateFullExtent();this.addResolvingPromise(e);const t=u(this.view,"basemapTerrain.tilingSchemeLocked").then(()=>{const i=this.view.basemapTerrain.tilingScheme,{tileInfo:r}=this.layer,n=["png","png24","png32","jpg","mixed"].indexOf(r.format)>-1&&i.compatibleWith(r);this.isAlignedMapTile=n;const o=n?r:i.toTileInfo();this._set("tileInfo",o),this.updatingHandles.add(this,"layer.renderer",()=>this.refresh()),this.updatingHandles.add(this,"layer.interpolation",()=>this.refresh()),this.updatingHandles.add(this,"layer.bandIds",()=>this.refresh()),this.updatingHandles.add(this,"layer.multidimensionalDefinition",()=>this.refresh())});this.addResolvingPromise(t)}destroy(){this.layer.decreaseRasterJobHandlerUsage(),this.view=null}get _blankTile(){const e=document.createElement("canvas"),t=e.getContext("2d"),[i,r]=this.tileInfo.size;return e.width=i,e.height=r,t.clearRect(0,0,i,r),t.getImageData(0,0,i,r)}get imageFormatIsOpaque(){return this.layer.tileInfo.format==="jpg"}get hasMixedImageFormats(){return this.layer.tileInfo.format==="mixed"}get dataLevelRange(){const e=this.tileInfo.lods,t=this.layer.tileInfo.lods,i=e[0].scale,r=t[t.length-1].scale;return this.levelRangeFromScaleRange(i,r)}async fetchTile(e,t,i,r){const n=this.tileInfo,o=this._canSymbolizeInWebGL(),y={tileInfo:n,requestRawData:o,signal:b(r.signal),requestAsImageElement:this.isAlignedMapTile},l=await this.layer.fetchTile(e,t,i,y);if(l instanceof HTMLImageElement)return l;let h=l&&l.pixelBlock;if(p(h))return this._blankTile;if(!o&&(h=await this.layer.applyRenderer(l),p(h)))return this._blankTile;const s=new I([e,t,i],h,n.size[0],n.size[1]);return o?(s.symbolizerRenderer=this.layer.symbolizer.rendererJSON,s.symbolizerParameters=this.layer.symbolizer.generateWebGLParameters(this._getSymbolizerOptions(e)),s.transformGrid=l.transformGrid):s.isRendereredSource=!0,s.interpolation=this.layer.interpolation,s.bandIds=this.layer.bandIds,s}_getSymbolizerOptions(e){const t=this.tileInfo.lodAt(e).resolution;return{pixelBlock:null,isGCS:this.view.spatialReference.isGeographic,resolution:{x:t,y:t},bandIds:this.layer.bandIds}}ensureSymbolizerParameters(e){this._canSymbolizeInWebGL()&&JSON.stringify(e.symbolizerRenderer)!==JSON.stringify(this.layer.symbolizer.rendererJSON)&&(e.symbolizerParameters=this.layer.symbolizer.generateWebGLParameters(this._getSymbolizerOptions(e.lij[0])))}createFetchPopupFeaturesQueryGeometry(e,t){return z(e,t,this.view)}refresh(){this.emit("data-changed")}async doRefresh(){this.suspended||this.emit("data-changed")}_canSymbolizeInWebGL(){return R().supportsTextureFloat&&this.layer.symbolizer.canRenderInWebGL}};d([m({readOnly:!0})],a.prototype,"_blankTile",null),d([m({readOnly:!0})],a.prototype,"imageFormatIsOpaque",null),d([m({readOnly:!0})],a.prototype,"hasMixedImageFormats",null),d([m({readOnly:!0})],a.prototype,"dataLevelRange",null),a=d([x("esri.views.3d.layers.ImageryTileLayerView3D")],a);const H=a;export{H as default};
