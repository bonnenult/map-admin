import{aZ as t,a$ as p,aW as e,aX as s,aY as h}from"./vendor.70daa49e.js";import{E as c}from"./Graphics3DGraphicLikeLayerView.bbb082ab.js";import{t as o}from"./GraphicsView.fb49caf7.js";import"./Graphics3DScaleVisibility.0816abff.js";import"./rendererConversion.409e8cbe.js";import"./optimizedFeatureQueryEngineAdapter.a39515e3.js";import"./centroid.76062f7d.js";import"./PooledRBush.644941f3.js";import"./Graphics3DObjectStates.e1548025.js";let r=class extends o(t){constructor(i){super(i),this.graphics3d=null,this.slicePlaneEnabled=!1,this.drapeSourceType=1}initialize(){const i="__sceneView.graphics-"+Date.now().toString(16),a={id:i,uid:i};this._set("graphics3d",new c({owner:this,layer:a})),this.graphics3d.setup()}destroy(){this.graphics3d&&(this.graphics3d.destroy(),this._set("graphics3d",null))}get updating(){var i;return!((i=this.graphics3d)==null||!i.updating)}notifyGraphicGeometryChanged(i){this.graphics3d.graphicsCore.notifyGraphicGeometryChanged(i)}notifyGraphicVisibilityChanged(i){this.graphics3d.graphicsCore.notifyGraphicVisibilityChanged(i)}get graphics3DGraphics(){return this.graphics3d.graphicsCore.graphics3DGraphics}get graphics3DGraphicsByObjectID(){return this.graphics3d.graphicsCore.graphics3DGraphicsByObjectID}get symbolUpdateType(){return this.graphics3d.graphicsCore.symbolUpdateType}getGraphicFromGraphicUid(i){return this.graphics3d.getGraphicFromGraphicUid(i)}whenGraphicBounds(i,a){return this.graphics3d.whenGraphicBounds(i,a)}graphicChanged(i){this.graphics3d.graphicsCore.graphicUpdateHandler(i)}get updatePolicy(){return this.graphics3d.graphicsCore.effectiveUpdatePolicy}queryGraphics(){return Promise.resolve(this.loadedGraphics)}async fetchPopupFeatures(i,a){return p(a)?a.clientGraphics:null}highlight(i){return this.graphics3d.highlight(i)}maskOccludee(i){return this.graphics3d.maskOccludee(i)}};e([s({readOnly:!0,aliasOf:"view.graphics"})],r.prototype,"graphics",void 0),e([s({aliasOf:"graphics"})],r.prototype,"loadedGraphics",void 0),e([s({readOnly:!0})],r.prototype,"updating",null),e([s({constructOnly:!0})],r.prototype,"view",void 0),e([s()],r.prototype,"graphics3d",void 0),e([s({type:Boolean})],r.prototype,"slicePlaneEnabled",void 0),r=e([h("esri.views.3d.layers.GraphicsView3D")],r);const b=r;export{b as default};
