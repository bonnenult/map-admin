import{fB as m,db as a,cw as p}from"./vendor.47ccae81.js";import{g as h}from"./Bitmap.cada6152.js";import{j as b}from"./brushes.c1614039.js";import{I as n}from"./Utils.30b0e1a1.js";import{o as c}from"./TileContainer.b343a31f.js";class f extends m{constructor(e,t,s,r,i,d=null){super(e,t,s,r,i),this.bitmap=new h(d,"standard",!1),this.bitmap.coordScale=[r,i],this.bitmap.once("isReady",()=>this.ready())}destroy(){super.destroy(),this.bitmap.destroy()}beforeRender(e){super.beforeRender(e),this.bitmap.beforeRender(e)}afterRender(e){super.afterRender(e),this.bitmap.afterRender(e)}set stencilRef(e){this.bitmap.stencilRef=e}get stencilRef(){return this.bitmap.stencilRef}_createTransforms(){return{dvs:a(),tileMat3:a()}}setTransform(e,t){super.setTransform(e,t),this.bitmap.transforms.dvs=this.transforms.dvs}onAttach(){this.bitmap.stage=this.stage}onDetach(){this.bitmap&&(this.bitmap.stage=null)}}class P extends c{get requiresDedicatedFBO(){return this.children.some(e=>e.bitmap.blendFunction==="additive")}createTile(e){const t=this._tileInfoView.getTileBounds(p(),e),[s,r]=this._tileInfoView.tileInfo.size;return new f(e,t[0],t[3],s,r)}destroyTile(){}prepareRenderPasses(e){const t=e.registerRenderPass({name:"bitmap (tile)",brushes:[b.bitmap],target:()=>this.children.map(s=>s.bitmap),drawPhase:n.MAP});return[...super.prepareRenderPasses(e),t]}doRender(e){this.visible&&e.drawPhase===n.MAP&&super.doRender(e)}}export{P as n};
