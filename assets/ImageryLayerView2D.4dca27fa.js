import{bD as q,aW as s,aX as n,gW as D,aY as b,aZ as P,oe as G,f$ as O,bQ as S,a$ as j,b7 as C,ar as I,cS as T,bf as _,j6 as z,fW as L}from"./vendor.70daa49e.js";import{p as A}from"./AnimatedFlowView2D.9b83a74c.js";import{l as H}from"./LayerView2D.291c660d.js";import{j as J}from"./rasterProjectionHelper.ff8c0d58.js";import{m as W}from"./dataUtils.6b82af38.js";import{s as B}from"./Container.879a33d6.js";import{i as N}from"./GraphicContainer.028dd6e2.js";import{i as K}from"./BaseGraphicContainer.ad159856.js";import{d as Q}from"./pixelUtils.59d1e551.js";import{t as X}from"./BitmapContainer.ff910785.js";import{i as Y}from"./Bitmap.f5efb0a9.js";import{S as Z}from"./ExportStrategy.f46421bd.js";import{u as ee}from"./ImageryLayerView.ca9351d3.js";import{i as te}from"./RefreshableLayerView.765039f7.js";import"./brushes.00614641.js";import"./definitions.21e97413.js";import"./Utils.8da54d2f.js";import"./number.dfbabd3f.js";import"./programUtils.96aa856a.js";import"./GeometryUtils.ea8c8742.js";import"./MaterialKey.f8f54134.js";import"./WGLContainer.054d692c.js";import"./EffectView.39edae97.js";import"./CIMSymbolHelper.8e5a45e2.js";import"./BidiEngine.aae60613.js";import"./GeometryUtils.d4e26b77.js";import"./normalizeUtilsSync.d0259d5c.js";import"./projectionSupport.850c9ce4.js";import"./json.2d0d6862.js";import"./FeatureContainer.86bb1943.js";import"./visualVariablesUtils.16bece63.js";import"./visualVariablesUtils.e3b233f7.js";import"./TileContainer.26ab15fa.js";import"./Matcher.9dc20079.js";import"./tileUtils.3ef9ae84.js";import"./TileClipper.96955a5e.js";import"./cimAnalyzer.f8c59bac.js";import"./cimSymbolUtils.f85d4916.js";import"./schemaUtils.953db095.js";import"./MD5.f9440c6b.js";import"./util.7ad95d3e.js";import"./ComputedAttributeStorage.9152a833.js";import"./FeatureSetReader.cfa1b3ff.js";import"./centroid.76062f7d.js";import"./GraphicsView.fb49caf7.js";import"./popupUtils.83af9bb7.js";const ie=q.getLogger("esri.views.2d.layers.imagery.ImageryGraphicsView2D");let l=class extends P{constructor(){super(...arguments),this.attached=!1,this.container=new B,this.updateRequested=!1,this._graphicsView=null,this._projectFullExtentPromise=null,this._dataParameters={exportParametersVersion:0,extents:[],tileResolution:0,time:"",isOceanStyle:!1,isOceanographic:!1},this.type="Graphics",this._graphics=new G,this._updateGraphics=O(async(e,t)=>{if(!e.stationary)return;const i=e.state,a=new S({xmin:i.extent.xmin,ymin:i.extent.ymin,xmax:i.extent.xmax,ymax:i.extent.ymax,spatialReference:i.spatialReference}),[r,p]=e.state.size,h={};h.timeExtent=this.timeExtent,h.requestAsImageElement=!1,h.signal=t,this._projectFullExtentPromise==null&&(this._projectFullExtentPromise=this._getProjectedFullExtent(a.spatialReference));const u=this.layer.renderer.type==="vector-field"?this.layer.renderer.symbolTileSize:50,g=await this._projectFullExtentPromise,{extent:w,resolution:$,width:k,height:M}=W(a,r,p,u,g),V=await this.layer.fetchImage(w,k,M,h),d=this.layer.renderer;if(d.type==="vector-field"){const m=V.pixelData.pixelBlock,y=d.sizeVariables[0];!j(m)||y.minDataValue&&y.maxDataValue||(y.minDataValue=m.statistics[0].minValue,y.maxDataValue=m.statistics[0].maxValue),this._pixelData={extent:w,pixelBlock:m};const R=w.clone().normalize(),U={exportParametersVersion:this.layer.exportImageServiceParameters.version,extents:R,tileResolution:$,time:JSON.stringify(this.timeExtent||""),isOceanStyle:d.flowRepresentation==="flow-to",isOceanographic:d.style==="ocean-current-kn"||d.style==="ocean-current-m"},x=this._canReuseVectorFieldData(U)?this._dataParameters.extents:[],E=await d.getGraphicsFromPixelData(V.pixelData,this.layer.rasterInfo.dataType==="vector-uv",x);if(x.length){const F=this._graphics.items.filter(f=>j(f.geometry)&&x.some(v=>v.intersects(f.geometry))&&!R.some(v=>v.intersects(f.geometry)));this._graphics.removeMany(F),this._graphics.addMany(E)}else this._graphics.set("items",E);this._graphicsView.update(e),this._dataParameters=U}})}destroy(){this.attached&&(this.detach(),this.attached=!1),this.updateRequested=!1}get updating(){return!this.attached||this.isUpdating()}update(e){this._updateGraphics(e).catch(t=>{C(t)||ie.error(t)})}hitTest(e){return new I({attributes:{},geometry:e.clone(),layer:this.layer})}attach(){this._graphicsView=new K({view:this.view,graphics:this._graphics,requestUpdateCallback:()=>this.requestUpdate(),container:new N(this.view.featuresTilingScheme)}),this.attached=!0}detach(){this._graphics.destroy(),this._graphicsView.destroy(),this.container.removeChild(this._graphicsView.container),this._graphicsView=null}install(e){this.container.addChild(this._graphicsView.container),e.addChild(this.container)}uninstall(e){this.container.removeChild(this._graphicsView.container),e.removeChild(this.container)}isUpdating(){return this._graphicsView.updating||this.updateRequested}getPixelData(){return this.updating?null:this._pixelData}redraw(){}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.view.requestUpdate())}async _getProjectedFullExtent(e){try{return await J(this.layer.fullExtent,e)}catch{try{const i=(await T(this.layer.url,{query:{option:"footprints",outSR:e.wkid||JSON.stringify(e.toJSON()),f:"json"}})).data.featureCollection.layers[0].layerDefinition.extent;return i?S.fromJSON(i):null}catch{return null}}}_canReuseVectorFieldData(e){const t=this._dataParameters.exportParametersVersion===e.exportParametersVersion,i=this._dataParameters.time===e.time,a=Math.abs(this._dataParameters.tileResolution-e.tileResolution)/e.tileResolution<.01,r=this._dataParameters.extents.some(u=>e.extents.some(g=>u.intersects(g))),p=this._dataParameters.isOceanStyle===e.isOceanStyle,h=this._dataParameters.isOceanographic===e.isOceanographic;return t&&i&&a&&r&&p&&h}};s([n()],l.prototype,"attached",void 0),s([n()],l.prototype,"container",void 0),s([n()],l.prototype,"layer",void 0),s([n()],l.prototype,"timeExtent",void 0),s([n()],l.prototype,"view",void 0),s([n()],l.prototype,"updateRequested",void 0),s([n()],l.prototype,"updating",null),s([D({graphics:"Graphics"})],l.prototype,"type",void 0),l=s([b("esri.views.2d.layers.imagery.ImageryGraphicsView2D")],l);const se=l,ae=q.getLogger("esri.views.2d.layers.imagery.ImageryView2D");let o=class extends P{constructor(){super(...arguments),this.attached=!1,this.container=new B,this.updateRequested=!1,this.type="Imagery",this._bitmapView=null}destroy(){this.attached&&(this.detach(),this.attached=!1),this.updateRequested=!1}get updating(){return!this.attached||this.isUpdating()}update(e){this.strategy.update(e).catch(t=>{C(t)||ae.error(t)})}detach(){this.strategy.destroy(),this._bitmapView.removeAllChildren(),this.container.removeAllChildren()}hitTest(e){return new I({attributes:{},geometry:e.clone(),layer:this.layer})}attach(){const e=this.layer.version>=10,t=this.layer.version>=10.1?this.layer.imageMaxHeight:2048,i=this.layer.version>=10.1?this.layer.imageMaxWidth:2048;this._bitmapView=new X,this.strategy=new Z({container:this._bitmapView,imageNormalizationSupported:e,imageMaxHeight:t,imageMaxWidth:i,fetchSource:this._fetchImage.bind(this),requestUpdate:()=>this.requestUpdate()}),this.attached=!0}install(e){this.container.addChild(this._bitmapView),e.addChild(this.container)}uninstall(e){this.container.removeChild(this._bitmapView),e.removeChild(this.container)}redraw(){this.strategy.updateExports(e=>{e.source instanceof HTMLImageElement?e.requestRender():this.layer.applyRenderer({pixelBlock:e.source.pixelBlock}).then(t=>{const i=e.source;i.pixelBlock=t.pixelBlock,i.filter=a=>this.layer.applyFilter(a),this.container.requestRender()})})}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.view.requestUpdate())}isUpdating(){return this.strategy.updating||this.updateRequested}getPixelData(){if(this.updating)return null;const e=this.strategy.bitmaps;if(e.length===1&&e[0].source)return{extent:e[0].source.extent,pixelBlock:e[0].source.originalPixelBlock};if(e.length>1){const t=this.view.extent,i=e.map(r=>r.source).filter(r=>r.extent&&r.extent.intersects(t)).map(r=>({extent:r.extent,pixelBlock:r.originalPixelBlock})),a=Q(i,t);return j(a)?{extent:a.extent,pixelBlock:a.pixelBlock}:null}return null}_fetchImage(e,t,i,a){return(a=a||{}).timeExtent=this.timeExtent,a.requestAsImageElement=!0,this.layer.fetchImage(e,t,i,a).then(r=>r.imageElement?r.imageElement:this.layer.applyRenderer(r.pixelData,{signal:a.signal}).then(p=>{const h=new Y(p.pixelBlock,p.extent.clone(),r.pixelData.pixelBlock);return h.filter=u=>this.layer.applyFilter(u),h}))}};s([n()],o.prototype,"attached",void 0),s([n()],o.prototype,"container",void 0),s([n()],o.prototype,"layer",void 0),s([n()],o.prototype,"strategy",void 0),s([n()],o.prototype,"timeExtent",void 0),s([n()],o.prototype,"view",void 0),s([n()],o.prototype,"updateRequested",void 0),s([n()],o.prototype,"updating",null),s([D({imagery:"Imagery"})],o.prototype,"type",void 0),o=s([b("esri.views.2d.layers.imagery.ImageryView2D")],o);const re=o;let c=class extends ee(te(H(L))){constructor(){super(...arguments),this._exportImageVersion=-1}initialize(){this.handles.add([_(this,["layer.blendMode","layer.effects"],e=>{this.subview&&(this.subview.container.blendMode=e)},!0),_(this,"layer.effect",e=>{this.subview&&(this.subview.container.effect=e)},!0)])}get pixelData(){return this.updating?null:"getPixelData"in this.subview?this.subview.getPixelData():null}get updating(){return!!(!this.subview||"updating"in this.subview&&this.subview.updating)}async hitTest(e,t){return this.subview?"hitTest"in this.subview?[this.subview.hitTest(e)]:[]:null}update(e){var t;(t=this.subview)==null||t.update(e)}attach(){this.layer.increaseRasterJobHandlerUsage(),this._setSubView(),this.handles.add([_(this,"layer.exportImageServiceParameters.version",e=>{this._exportImageVersion!==e&&(this._exportImageVersion=e,this.requestUpdate())}),this.watch("timeExtent",()=>{"timeExtent"in this.subview&&(this.subview.timeExtent=this.timeExtent),this.requestUpdate()}),this.layer.on("redraw",()=>{"redraw"in this.subview?this.subview.redraw():this.subview.redrawOrRefetch()}),z(this.layer,"renderer",()=>this._setSubView())],"imagerylayerview-update")}detach(){this.layer.decreaseRasterJobHandlerUsage(),this.subview.destroy(),this.handles.remove("imagerylayerview-update"),this._exportImageVersion=-1}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}async doRefresh(){this.requestUpdate()}isUpdating(){return!this.subview||!this.suspended&&this.subview.updating}_setSubView(){var e,t;let i="Imagery";((e=this.layer.renderer)==null?void 0:e.type)==="vector-field"&&this.layer.format==="lerc"&&(i="Graphics");var a,r;((t=this.layer.renderer)==null?void 0:t.type)==="animated-flow"&&(i="Flow"),this.subview&&this.subview.type===i||((a=this.subview)==null||a.uninstall(this.container),(r=this.subview)==null||r.destroy(),this.subview=i==="Imagery"?new re({layer:this.layer,view:this.view,timeExtent:this.timeExtent}):i==="Graphics"?new se({layer:this.layer,view:this.view,timeExtent:this.timeExtent}):new A({layer:this.layer,layerView:this}),this.subview.attach(),this.subview.install(this.container),this.subview.container.blendMode=this.layer.blendMode,this.subview.container.effect=this.layer.effect),this.requestUpdate()}};s([n()],c.prototype,"pixelData",null),s([n({readOnly:!0})],c.prototype,"updating",null),s([n()],c.prototype,"subview",void 0),c=s([b("esri.views.2d.layers.ImageryLayerView2D")],c);const Ye=c;export{Ye as default};
