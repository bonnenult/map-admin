var d=Object.defineProperty,b=Object.defineProperties;var m=Object.getOwnPropertyDescriptors;var n=Object.getOwnPropertySymbols;var u=Object.prototype.hasOwnProperty,f=Object.prototype.propertyIsEnumerable;var y=(i,e,s)=>e in i?d(i,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):i[e]=s,l=(i,e)=>{for(var s in e||(e={}))u.call(e,s)&&y(i,s,e[s]);if(n)for(var s of n(e))f.call(e,s)&&y(i,s,e[s]);return i},p=(i,e)=>b(i,m(e));import{aX as c,aZ as h,bg as j,b0 as w,gh as g}from"./vendor.c8f3cc8c.js";import S from"./FeatureLayerView2D.94dfd5f5.js";import"./EffectView.59df383f.js";import"./definitions.21e97413.js";import"./LayerView2D.25658a74.js";import"./Container.98366c00.js";import"./schemaUtils.3bffe16f.js";import"./Utils.b2b84829.js";import"./number.dfbabd3f.js";import"./MaterialKey.56ac52e4.js";import"./visualVariablesUtils.9dcd3ad7.js";import"./CIMSymbolHelper.05203bfb.js";import"./BidiEngine.aae60613.js";import"./GeometryUtils.d4e26b77.js";import"./cimSymbolUtils.441175f3.js";import"./cimAnalyzer.ddfafba2.js";import"./MD5.f9440c6b.js";import"./util.de314230.js";import"./FeatureLayerView.0b5ae637.js";import"./popupUtils.37c6f82e.js";import"./RefreshableLayerView.552e5409.js";function v(i,e){return!i.visible||i.minScale!==0&&e>i.minScale||i.maxScale!==0&&e<i.maxScale}let o=class extends S{initialize(){this.handles.add([j(this.view,"viewpoint",()=>this._update())])}_injectOverrides(i){let e=super._injectOverrides(i);const s=this.view.scale,t=this.layer.sublayers.filter(a=>v(a,s)).map(a=>a.subtypeCode);if(!t.length)return e;e=w(e)?e:new g().toJSON();const r=`NOT ${this.layer.subtypeField} IN (${t.join(",")})`;return e.where=e.where?`(${e.where}) AND (${r})`:r,e}_setLayersForFeature(i){const e=this.layer.fieldsIndex.get(this.layer.subtypeField),s=i.attributes[e.name],t=this.layer.sublayers.find(r=>r.subtypeCode===s);i.layer=t,i.sourceLayer=this.layer}_createSchemaConfig(){const i={subtypeField:this.layer.subtypeField,sublayers:Array.from(this.layer.sublayers).map(r=>({featureReduction:null,geometryType:this.layer.geometryType,labelingInfo:r.labelingInfo,labelsVisible:r.labelsVisible,renderer:r.renderer,subtypeCode:r.subtypeCode,orderBy:null}))},e=this.layer.sublayers.map(r=>r.subtypeCode).join(","),s=this.layer.sublayers.length?`${this.layer.subtypeField} IN (${e})`:"1=2";let t=this.layer.definitionExpression?this.layer.definitionExpression+" AND ":"";return t+=s,p(l(l({},super._createSchemaConfig()),i),{definitionExpression:t})}};o=c([h("esri.views.2d.layers.SubtypeGroupLayerView2D")],o);const K=o;export{K as default};
