import{fX as p,fY as u,jb as g,gL as v,b1 as h,cD as _,e3 as c,e4 as y,as as f,b6 as m,aY as r,aZ as o,gk as T,a_ as x}from"./vendor.47ccae81.js";import{$ as S}from"./I3SMeshView3D.cdd09d50.js";import"./I3SAttributeOverrides.5d693798.js";import"./I3SUtil.93e43a9c.js";import"./I3SBinaryReader.c42f51a5.js";import"./SceneModification.70e5b6f7.js";import"./Graphics3DScaleVisibility.7377a362.js";import"./rendererConversion.1dce883d.js";import"./optimizedFeatureQueryEngineAdapter.43553634.js";import"./centroid.db30e28e.js";import"./PooledRBush.e74b4240.js";import"./SceneLayerWorker.80a41a00.js";import"./attributeUtils.a1b96ab7.js";const O=.2;let a=class extends S(p(u)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this.lodFactor=1,this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=1,this._overlayTexOffset=g(-1,-1,-1,-1),this._overlayTexScale=v(),this._overlayColor=null,this._overlayHighlight=null,this._overlayNormal=null}get progressiveLoadFactor(){return this.lodFactor>=1?O:1}setDrapingTextures(e){this._clearDrapingTexture(0),this._clearDrapingTexture(1);for(const t of e){const s=t.index,i=t.extent,l=t.needsColorWithoutRasterImage?t.getValidTarget(1):t.hasDrapedFeatureSource?t.getValidTarget(0):null;if(h(l)&&_(i)>0){this._overlayTexOffset[2*s]=-i[0]/c(i),this._overlayTexOffset[2*s+1]=-i[1]/y(i),this._overlayTexScale[2*s]=1/c(i),this._overlayTexScale[2*s+1]=1/y(i);const n=t.getValidTarget(2),d=t.getValidTarget(3);this._overlayColor=l.getTexture(),this._overlayHighlight=n?n.getTexture():null,this._overlayNormal=d?d.getTexture():null}}this._forAllNodes(t=>h(t)&&this._collection.updateMaterial(t.objectHandle,s=>this._updateMaterialOverlay(s)))}_clearDrapingTexture(e){this._overlayTexOffset[2*e]=-1,this._overlayTexOffset[2*e+1]=-1,this._overlayTexScale[2*e]=0,this._overlayTexScale[2*e+1]=0,this._overlayColor=null,this._overlayHighlight=null,this._overlayNormal=null}_updateMaterialOverlay(e){e.overlayColor=this._overlayColor,e.overlayHighlight=this._overlayHighlight,e.overlayNormal=this._overlayNormal,e.overlayTexOffset=this._overlayTexOffset,e.overlayTexScale=this._overlayTexScale}initialize(){this.updatingHandles.add(this.layer,"modifications",()=>this._loadModifications(),2)}_createLayerGraphic(){const e=new f;return e.layer=this.layer,e.sourceLayer=this.layer,e}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.handles.remove("modifications"),m(this.layer.modifications))return void(this._modifications=[]);const e=this.layer.modifications;this.handles.add(this.updatingHandles.addOnCollectionChange(e,()=>this._modifications=e.toArray(),2),"modifications")}};r([o()],a.prototype,"layer",void 0),r([o({aliasOf:"layer"})],a.prototype,"i3slayer",void 0),r([o()],a.prototype,"suspended",void 0),r([o(T)],a.prototype,"updatingProgress",void 0),r([o({readOnly:!0,aliasOf:"_controller.updatingProgress"})],a.prototype,"updatingProgressValue",void 0),r([o({readOnly:!0,aliasOf:"view.qualitySettings.sceneService.integratedMesh.lodFactor"})],a.prototype,"lodFactor",void 0),r([o({readOnly:!0})],a.prototype,"progressiveLoadFactor",null),a=r([x("esri.views.3d.layers.SceneLayerView3D")],a);const A=a;export{A as default};
