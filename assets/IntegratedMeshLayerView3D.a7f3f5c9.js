import{ef as p,eg as u,hu as v,f3 as g,r as h,aW as f,cl as c,cm as y,h as _,t as m,e as i,d as o,eE as x,i as T}from"./index.fe92decb.js";import{$ as j}from"./I3SMeshView3D.ada2fcd0.js";import"./vendor.d9e807b5.js";import"./index.dbbecfd7.js";/* empty css              */import"./qrcode.0911187d.js";/* empty css                 */import"./I3SAttributeOverrides.75b7ad6d.js";import"./I3SUtil.4e90dbc7.js";import"./I3SBinaryReader.d17cc604.js";import"./SceneModification.ca787267.js";import"./Graphics3DScaleVisibility.e0d9e694.js";import"./rendererConversion.3d1e3abc.js";import"./optimizedFeatureQueryEngineAdapter.e1159fff.js";import"./centroid.4f152857.js";import"./PooledRBush.24e35ea4.js";import"./SceneLayerWorker.dcf008e5.js";import"./attributeUtils.a1b96ab7.js";const S=.2;let r=class extends j(p(u)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this.lodFactor=1,this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=1,this._overlayTexOffset=v(-1,-1,-1,-1),this._overlayTexScale=g(),this._overlayColor=null,this._overlayHighlight=null,this._overlayNormal=null}get progressiveLoadFactor(){return this.lodFactor>=1?S:1}setDrapingTextures(e){this._clearDrapingTexture(0),this._clearDrapingTexture(1);for(const t of e){const s=t.index,a=t.extent,l=t.needsColorWithoutRasterImage?t.getValidTarget(1):t.hasDrapedFeatureSource?t.getValidTarget(0):null;if(h(l)&&f(a)>0){this._overlayTexOffset[2*s]=-a[0]/c(a),this._overlayTexOffset[2*s+1]=-a[1]/y(a),this._overlayTexScale[2*s]=1/c(a),this._overlayTexScale[2*s+1]=1/y(a);const d=t.getValidTarget(2),n=t.getValidTarget(3);this._overlayColor=l.getTexture(),this._overlayHighlight=d?d.getTexture():null,this._overlayNormal=n?n.getTexture():null}}this._forAllNodes(t=>h(t)&&this._collection.updateMaterial(t.objectHandle,s=>this._updateMaterialOverlay(s)))}_clearDrapingTexture(e){this._overlayTexOffset[2*e]=-1,this._overlayTexOffset[2*e+1]=-1,this._overlayTexScale[2*e]=0,this._overlayTexScale[2*e+1]=0,this._overlayColor=null,this._overlayHighlight=null,this._overlayNormal=null}_updateMaterialOverlay(e){e.overlayColor=this._overlayColor,e.overlayHighlight=this._overlayHighlight,e.overlayNormal=this._overlayNormal,e.overlayTexOffset=this._overlayTexOffset,e.overlayTexScale=this._overlayTexScale}initialize(){this.updatingHandles.add(this.layer,"modifications",()=>this._loadModifications(),2)}_createLayerGraphic(){const e=new _;return e.layer=this.layer,e.sourceLayer=this.layer,e}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.handles.remove("modifications"),m(this.layer.modifications))return void(this._modifications=[]);const e=this.layer.modifications;this.handles.add(this.updatingHandles.addOnCollectionChange(e,()=>this._modifications=e.toArray(),2),"modifications")}};i([o()],r.prototype,"layer",void 0),i([o({aliasOf:"layer"})],r.prototype,"i3slayer",void 0),i([o()],r.prototype,"suspended",void 0),i([o(x)],r.prototype,"updatingProgress",void 0),i([o({readOnly:!0,aliasOf:"_controller.updatingProgress"})],r.prototype,"updatingProgressValue",void 0),i([o({readOnly:!0,aliasOf:"view.qualitySettings.sceneService.integratedMesh.lodFactor"})],r.prototype,"lodFactor",void 0),i([o({readOnly:!0})],r.prototype,"progressiveLoadFactor",null),r=i([T("esri.views.3d.layers.SceneLayerView3D")],r);const q=r;export{q as default};
