import{eg as a,u as o,t as p,e as m,i as l}from"./index.fe92decb.js";import{l as c}from"./LayerView2D.7ca65bda.js";import{i as n}from"./GraphicContainer.1733e138.js";import{i as h}from"./BaseGraphicContainer.67656288.js";import"./vendor.d9e807b5.js";import"./index.dbbecfd7.js";/* empty css              */import"./qrcode.0911187d.js";/* empty css                 */import"./Container.2f7d1138.js";import"./EffectView.873e2976.js";import"./Utils.b6ae6dd5.js";import"./number.dfbabd3f.js";import"./CIMSymbolHelper.0a12f9a9.js";import"./BidiEngine.aae60613.js";import"./definitions.21e97413.js";import"./GeometryUtils.d4e26b77.js";import"./normalizeUtilsSync.503cfc44.js";import"./projectionSupport.18cf131f.js";import"./json.2d0d6862.js";import"./FeatureContainer.8f6f9a19.js";import"./visualVariablesUtils.57af9670.js";import"./visualVariablesUtils.2043fc08.js";import"./TileContainer.78074cd9.js";import"./WGLContainer.8d1ee991.js";import"./brushes.54912a2b.js";import"./programUtils.bb88f8de.js";import"./GeometryUtils.ea8c8742.js";import"./MaterialKey.2ed20ae2.js";import"./pixelUtils.bd04c746.js";import"./Matcher.4b214574.js";import"./tileUtils.6a16d9da.js";import"./TileClipper.34d95dd2.js";import"./cimAnalyzer.da7b7ced.js";import"./cimSymbolUtils.d6efc770.js";import"./schemaUtils.52b6278f.js";import"./MD5.f9440c6b.js";import"./util.103b8071.js";import"./ComputedAttributeStorage.4b3ca333.js";import"./FeatureSetReader.2f3c5dca.js";import"./centroid.4f152857.js";import"./GraphicsView.390bb3e3.js";let s=class extends c(a){constructor(){super(...arguments),this._handles=new o,this._popupTemplates=new Map,this.graphicsViews=[]}async hitTest(e,i){return this.graphicsViews.length?(await Promise.all(this.graphicsViews.map(t=>t.hitTest(e)))).flat().filter((t,r)=>(t&&(t.popupTemplate=this._popupTemplates.get(this.graphicsViews[r]),t.layer=this.layer,t.sourceLayer=this.layer),!!t)):null}update(e){if(this.graphicsViews)for(const i of this.graphicsViews)i.processUpdate(e)}attach(){p(this.layer.featureCollections)||this.layer.featureCollections.forEach(e=>{const i=new h({view:this.view,graphics:e.source,requestUpdateCallback:()=>this.requestUpdate(),container:new n(this.view.featuresTilingScheme)});i.renderer=e.renderer,this._popupTemplates.set(i,e.popupTemplate),this.graphicsViews.push(i),this.container.addChild(i.container)})}detach(){this.container.removeAllChildren();for(const e of this.graphicsViews)e.destroy();this.graphicsViews.length=0,this._handles.removeAll(),this._popupTemplates=null}moveStart(){}moveEnd(){}viewChange(){for(const e of this.graphicsViews)e.viewChange()}};s=m([l("esri.views.2d.layers.RouteLayerView2D")],s);const ie=s;export{ie as default};
