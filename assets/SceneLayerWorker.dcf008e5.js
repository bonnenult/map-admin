import{d_ as Y,gt as c,r as C}from"./index.fe92decb.js";import"./vendor.d9e807b5.js";import"./index.dbbecfd7.js";/* empty css              */import"./qrcode.0911187d.js";/* empty css                 */function H(){return T||(T=new Promise(e=>import("./i3s.716ba52d.js").then(t=>t.i).then(({default:t})=>{const r=t({locateFile:z,onRuntimeInitialized:()=>e(r)});delete r.then})).catch(e=>Promise.reject(e))),T}function z(e){return Y(`esri/libs/i3s/${e}`)}let T;async function X(e){await E();const t=[e.geometryBuffer];return{result:v(e,t),transferList:t}}async function Z(e){var t;await E();const r=[e.geometryBuffer],{geometryBuffer:a}=e,s=a.byteLength,d=o._malloc(s),f=new Uint8Array(o.HEAPU8.buffer,d,s);f.set(new Uint8Array(a));const b=o.dracoDecompressPointCloudData(d,f.byteLength);if(o._free(d),b.error.length>0)throw`i3s.wasm: ${b.error}`;const y=((t=b.featureIds)==null?void 0:t.length)>0?c(b.featureIds):null,g=c(b.positions);return y&&r.push(y.buffer),r.push(g.buffer),{result:{positions:g,featureIds:y},transferList:r}}async function $(e){await E(),q(e);const t={buffer:e.buffer};return{result:t,transferList:[t.buffer]}}async function ee(e){await E(),V(e)}async function te(e){await E(),o.setLegacySchema(e.context,e.jsonSchema)}function ne(e){R(e)}let w,o;function V(e){const t=e.modifications,r=o._malloc(8*t.length),a=new Float64Array(o.HEAPU8.buffer,r,t.length);for(let s=0;s<t.length;++s)a[s]=t[s];o.setModifications(e.context,r,t.length,e.isGeodetic),o._free(r)}function v(e,t){if(!o)return null;const{context:r,localOrigin:a,globalTrafo:s,mbs:d,obb:f,elevationOffset:b,geometryBuffer:y,geometryDescriptor:g,indexToVertexProjector:S,vertexToRenderProjector:j}=e,_=o._malloc(y.byteLength),I=33,A=o._malloc(I*Float64Array.BYTES_PER_ELEMENT),x=new Uint8Array(o.HEAPU8.buffer,_,y.byteLength);x.set(new Uint8Array(y));const i=new Float64Array(o.HEAPU8.buffer,A,I);p(i,a);let u=i.byteOffset+3*i.BYTES_PER_ELEMENT,l=new Float64Array(i.buffer,u);p(l,s),u+=16*i.BYTES_PER_ELEMENT,l=new Float64Array(i.buffer,u),p(l,d),u+=4*i.BYTES_PER_ELEMENT,C(f)&&(l=new Float64Array(i.buffer,u),p(l,f.center),u+=3*i.BYTES_PER_ELEMENT,l=new Float64Array(i.buffer,u),p(l,f.halfSize),u+=3*i.BYTES_PER_ELEMENT,l=new Float64Array(i.buffer,u),p(l,f.quaternion));const F=g,D={isDraco:!1,isLegacy:!1,color:e.layouts.some(m=>m.some(h=>h.name==="color")),normal:e.needNormals&&e.layouts.some(m=>m.some(h=>h.name==="normalCompressed")),uv0:e.layouts.some(m=>m.some(h=>h.name==="uv0")),uvRegion:e.layouts.some(m=>m.some(h=>h.name==="uvRegion")),featureIndex:F.featureIndex},n=o.process(r,!!e.obb,_,x.byteLength,F,D,A,b,S,j,e.normalReferenceFrame);if(o._free(A),o._free(_),n.error.length>0)throw`i3s.wasm: ${n.error}`;if(n.discarded)return null;const L=n.componentOffsets.length>0?c(n.componentOffsets):null,P=n.featureIds.length>0?c(n.featureIds):null,M=c(n.interleavedVertedData).buffer,B=n.indicesType===1?c(new Uint16Array(n.indices.buffer,n.indices.byteOffset,n.indices.byteLength/2)):c(new Uint32Array(n.indices.buffer,n.indices.byteOffset,n.indices.byteLength/4)),O=c(n.positions),U=n.positionIndicesType===1?c(new Uint16Array(n.positionIndices.buffer,n.positionIndices.byteOffset,n.positionIndices.byteLength/2)):c(new Uint32Array(n.positionIndices.buffer,n.positionIndices.byteOffset,n.positionIndices.byteLength/4)),N={layout:e.layouts[0],interleavedVertexData:M,indices:B,hasColors:n.hasColors,hasModifications:n.hasModifications,positionData:{data:O,indices:U}};return P&&t.push(P.buffer),L&&t.push(L.buffer),t.push(M),t.push(B.buffer),t.push(O.buffer),t.push(U.buffer),{componentOffsets:L,featureIds:P,transformedGeometry:N,obb:n.obb}}function oe(e){return e===0?0:e===1?1:e===2?2:3}function q(e){const{context:t,buffer:r}=e,a=o._malloc(r.byteLength),s=r.byteLength/Float64Array.BYTES_PER_ELEMENT,d=new Float64Array(o.HEAPU8.buffer,a,s),f=new Float64Array(r);d.set(f),o.filterOBBs(t,a,s),f.set(d),o._free(a)}function R(e){o&&o.destroy(e)}function p(e,t){for(let r=0;r<t.length;++r)e[r]=t[r]}function E(){return o?Promise.resolve():(w||(w=H().then(e=>{o=e,w=null})),w)}const re={transform:v,destroy:R};export{ne as destroyContext,Z as dracoDecompressPointCloudData,$ as filterObbsForModifications,q as filterObbsForModificationsSync,E as initialize,oe as interpretObbModificationResults,X as process,te as setLegacySchema,ee as setModifications,V as setModificationsSync,re as test};
