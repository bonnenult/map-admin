import{e as a,i as l}from"./index.a1c5dd56.js";import{o as m,e as d}from"./heatmapUtils.d5582d70.js";import{n as c}from"./BitmapTileContainer.c2ed981b.js";import{o as p}from"./BaseTileRenderer.f91b9cde.js";import"./vendor.c6be4c00.js";import"./index.a0863940.js";/* empty css              */import"./qrcode.0911187d.js";/* empty css                 */import"./Bitmap.0398012e.js";import"./brushes.72191f86.js";import"./definitions.21e97413.js";import"./Utils.bc20347e.js";import"./number.dfbabd3f.js";import"./programUtils.44a18329.js";import"./GeometryUtils.ea8c8742.js";import"./MaterialKey.89cee420.js";import"./pixelUtils.41f8268c.js";import"./TileContainer.ffa9f91c.js";import"./WGLContainer.3b2fd5d0.js";import"./Container.d3a75275.js";import"./EffectView.1278bb79.js";class h{constructor(){this.gradient=null,this.height=512,this.width=512}render(t){m(t,512,this.intensities,this.gradient,this.minPixelIntensity,this.maxPixelIntensity)}}let o=class extends p{constructor(e){super(e),this._intensityInfo={minPixelIntensity:0,maxPixelIntensity:0},this.featuresView={attributeView:{initialize:()=>{},requestUpdate:()=>{}},requestRender:()=>{}},this._container=new c(e.tileInfoView)}createTile(e){const t=this._container.createTile(e);return this.tileInfoView.getTileCoords(t.bitmap,e),t.bitmap.resolution=this.tileInfoView.getTileResolution(e),t}onConfigUpdate(){const e=this.layer.renderer;if(e.type==="heatmap"){const{minPixelIntensity:t,maxPixelIntensity:s}=e;this._intensityInfo.minPixelIntensity=t,this._intensityInfo.maxPixelIntensity=s,this._gradient=d(e.toJSON()),this.tiles.forEach(r=>{const i=r.bitmap.source;i&&(i.minPixelIntensity=t,i.maxPixelIntensity=s,i.gradient=this._gradient,r.bitmap.invalidateTexture())})}}hitTest(){return Promise.resolve([])}install(e){e.addChild(this._container)}uninstall(e){this._container.removeAllChildren(),e.removeChild(this._container)}disposeTile(e){this._container.removeChild(e),e.destroy()}supportsRenderer(e){return e&&e.type==="heatmap"}onTileData(e){const t=this.tiles.get(e.tileKey);if(!t)return;const s=e.intensityInfo,{minPixelIntensity:r,maxPixelIntensity:i}=this._intensityInfo,n=t.bitmap.source||new h;n.intensities=s&&s.matrix||null,n.minPixelIntensity=r,n.maxPixelIntensity=i,n.gradient=this._gradient,t.bitmap.source=n,this._container.addChild(t),this._container.requestRender(),this.requestUpdate()}onTileError(e){console.error(e)}lockGPUUploads(){}unlockGPUUploads(){}fetchResource(e,t){return console.error(e),Promise.reject()}};o=a([l("esri.views.2d.layers.features.tileRenderers.HeatmapTileRenderer")],o);const E=o;export{E as default};
