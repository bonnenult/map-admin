import{fa as y,fb as p,eZ as h,fd as u,oq as d,f8 as O,c4 as g,fc as $,fe as N,ff as v,fg as x,fh as S,or as q,os as w,ot as j,f9 as B}from"./vendor.c8f3cc8c.js";function R(e,t,a,s){return e.name?e.styleName&&e.styleName==="Esri2DPointSymbolsStyle"?F(e,t,s):O(e,t,s).then(o=>E(o,e.name,t,a,s)):Promise.reject(new g("symbolstyleutils:style-symbol-reference-name-missing","Missing name in style symbol reference"))}function E(e,t,a,s,o){const f=e.data,c={portal:a&&a.portal||$.getDefault(),url:u(e.baseUrl),origin:"portal-item"},n=f.items.find(r=>r.name===t);if(!n){const r=`The symbol name '${t}' could not be found`;return Promise.reject(new g("symbolstyleutils:symbol-name-not-found",r,{symbolName:t}))}let m=N(v(n,s),c),i=n.thumbnail&&n.thumbnail.href;const b=n.thumbnail&&n.thumbnail.imageData;x()&&(m=S(m),i=S(i));const U={portal:a.portal,url:u(d(m)),origin:"portal-item"};return y(m,o).then(r=>{const D=s==="cimRef"?p(r.data):r.data,l=h(D,U);if(l&&q(l)){if(i){const P=N(i,c);l.thumbnail=new w({url:P})}else b&&(l.thumbnail=new w({url:`data:image/png;base64,${b}`}));e.styleUrl?l.styleOrigin=new j({portal:a.portal,styleUrl:e.styleUrl,name:t}):e.styleName&&(l.styleOrigin=new j({portal:a.portal,styleName:e.styleName,name:t}))}return l})}function F(e,t,a){const s=B.replace(/\{SymbolName\}/gi,e.name);return y(s,a).then(o=>{const f=p(o.data);return h(f,{portal:t.portal,url:u(d(s)),origin:"portal-item"})})}export{E as fetchSymbolFromStyle,R as resolveWebStyleSymbol};
