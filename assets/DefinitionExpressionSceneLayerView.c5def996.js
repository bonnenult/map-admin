import{bF as p,aY as o,aZ as t,a_ as l}from"./vendor.47ccae81.js";import{WhereClause as d}from"./WhereClause.fde6eef5.js";import{s as f}from"./I3SUtil.93e43a9c.js";const n=p.getLogger("esri.views.3d.layers.support.DefinitionExpressionSceneLayerView"),h=a=>{let s=class extends a{constructor(){super(...arguments),this._definitionExpressionErrors=0,this._maxDefinitionExpressionErrors=20,this.logError=e=>{this._definitionExpressionErrors<this._maxDefinitionExpressionErrors&&n.error("Error while evaluating definitionExpression: "+e),this._definitionExpressionErrors++,this._definitionExpressionErrors===this._maxDefinitionExpressionErrors&&n.error("Further errors are ignored")}}get parsedDefinitionExpression(){if(!this.i3slayer||!this.i3slayer.definitionExpression)return null;try{const e=d.create(this.i3slayer.definitionExpression,this.i3slayer.fieldsIndex);if(!e.isStandardized)return n.error("definitionExpression is using non standard function"),null;const r=[],i=e.fieldNames;return f(i,this.i3slayer.fields,{missingFields:r}),r.length>0?(n.error(`definitionExpression references unknown fields: ${r.join(", ")}`),null):(this._definitionExpressionErrors=0,e)}catch(e){return n.error("Failed to parse definitionExpression: "+e),null}}get definitionExpressionFields(){return this.parsedDefinitionExpression?this.parsedDefinitionExpression.fieldNames:null}_evaluateClause(e,r){try{return e.testFeature(r)}catch(i){return this.logError(i),!1}}_addDefinitionExpressionToQuery(e){if(!this.parsedDefinitionExpression)return e;const r=this.i3slayer.definitionExpression,i=e.clone();return i.where?i.where=`(${r}) AND (${i.where})`:i.where=r,i}};return o([t()],s.prototype,"i3slayer",void 0),o([t({readOnly:!0})],s.prototype,"parsedDefinitionExpression",null),o([t({readOnly:!0})],s.prototype,"definitionExpressionFields",null),s=o([l("esri.views.3d.layers.support.DefinitionExpressionSceneLayerView")],s),s};export{h as p};
