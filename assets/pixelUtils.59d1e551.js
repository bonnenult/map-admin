import{bD as et,aW as G,aX as R,fQ as it,aY as st,fR as nt,c3 as lt,b4 as N,ei as rt,a$ as $}from"./vendor.70daa49e.js";var j;const W=et.getLogger("esri.layers.support.PixelBlock");let I=j=class extends nt{constructor(t){super(t),this.width=null,this.height=null,this.pixelType="f32",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.pixels=null,this.statistics=null}static createEmptyBand(t,s){return new(j.getPixelArrayConstructor(t))(s)}static getPixelArrayConstructor(t){let s;switch(t){case"u1":case"u2":case"u4":case"u8":s=Uint8Array;break;case"u16":s=Uint16Array;break;case"u32":case"u32":s=Uint32Array;break;case"s8":s=Int8Array;break;case"s16":s=Int16Array;break;case"s32":s=Int32Array;break;case"f32":case"c64":case"c128":case"unknown":s=Float32Array;break;case"f64":s=Float64Array}return s}castPixelType(t){if(!t)return"f32";let s=t.toLowerCase();return["u1","u2","u4"].indexOf(s)>-1?s="u8":["unknown","u8","s8","u16","s16","u32","s32","f32","f64"].indexOf(s)===-1&&(s="f32"),s}getPlaneCount(){return this.pixels&&this.pixels.length}addData(t){if(!t.pixels||t.pixels.length!==this.width*this.height)throw new lt("pixelblock:invalid-or-missing-pixels","add data requires valid pixels array that has same length defined by pixel block width * height");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(t.pixels),this.statistics.push(t.statistics||{minValue:null,maxValue:null})}getAsRGBA(){const t=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case"s8":case"s16":case"u16":case"s32":case"u32":case"f32":case"f64":this._fillFromNon8Bit(t);break;default:this._fillFrom8Bit(t)}return new Uint8ClampedArray(t)}getAsRGBAFloat(){const t=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(t),t}updateStatistics(){this.statistics=this.pixels.map(e=>this._calculateBandStatistics(e,this.mask));const t=this.mask;let s=0;if(t)for(let e=0;e<t.length;e++)t[e]&&s++;else s=this.width*this.height;this.validPixelCount=s}clamp(t){if(!t||t==="f64"||t==="f32")return;let s;switch(t){case"u8":s=[0,255];break;case"u16":s=[0,65535];break;case"u32":s=[0,4294967295];break;case"s8":s=[-128,127];break;case"s16":s=[-32768,32767];break;case"s32":s=[-2147483648,2147483647];break;default:s=[-34e38,34e38]}const[e,l]=s,f=this.pixels,a=this.width*this.height,o=f.length;let h,i,u;const x=[];for(let n=0;n<o;n++){u=j.createEmptyBand(t,a),h=f[n];for(let r=0;r<a;r++)i=h[r],u[r]=i>l?l:i<e?e:i;x.push(u)}this.pixels=x,this.pixelType=t}extractBands(t){if(N(t)||t.length===0||this.pixels==null||this.pixels.length===0)return this;const s=this.pixels.length,e=t.some(f=>f>=this.pixels.length),l=s===t.length&&!t.some((f,a)=>f!==a);return e||l?this:new j({pixelType:this.pixelType,width:this.width,height:this.height,mask:this.mask,validPixelCount:this.validPixelCount,maskIsAlpha:this.maskIsAlpha,pixels:t.map(f=>this.pixels[f]),statistics:this.statistics&&t.map(f=>this.statistics[f])})}clone(){const t=new j({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount});let s;this.mask&&(this.mask instanceof Uint8Array?t.mask=new Uint8Array(this.mask):t.mask=this.mask.slice(0));const e=j.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){t.pixels=[];const l=this.pixels[0].slice;for(s=0;s<this.pixels.length;s++)t.pixels[s]=l?this.pixels[s].slice(0,this.pixels[s].length):new e(this.pixels[s])}if(this.statistics)for(t.statistics=[],s=0;s<this.statistics.length;s++)t.statistics[s]=rt(this.statistics[s]);return t}_fillFrom8Bit(t){const{mask:s,maskIsAlpha:e,pixels:l}=this;if(!t||!l||!l.length)return void W.error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");let f,a,o,h;f=a=o=l[0],l.length>=3?(a=l[1],o=l[2]):l.length===2&&(a=l[1]);const i=new Uint32Array(t),u=this.width*this.height;if(f.length===u)if(s&&s.length===u)if(e)for(h=0;h<u;h++)s[h]&&(i[h]=s[h]<<24|o[h]<<16|a[h]<<8|f[h]);else for(h=0;h<u;h++)s[h]&&(i[h]=255<<24|o[h]<<16|a[h]<<8|f[h]);else for(h=0;h<u;h++)i[h]=255<<24|o[h]<<16|a[h]<<8|f[h];else W.error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.")}_fillFromNon8Bit(t){const{pixels:s,mask:e,statistics:l}=this;if(!t||!s||!s.length)return void W.error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");const f=this.pixelType;let a=1,o=0,h=1;if(l&&l.length>0)o=l.map(m=>m.minValue).reduce((m,y)=>Math.min(m,y)),h=l.map(m=>m.maxValue-m.minValue).reduce((m,y)=>Math.max(m,y)),a=255/h;else{let m=255;f==="s8"?(o=-128,m=127):f==="u16"?m=65535:f==="s16"?(o=-32768,m=32767):f==="u32"?m=4294967295:f==="s32"?(o=-2147483648,m=2147483647):f==="f32"?(o=-34e38,m=34e38):f==="f64"&&(o=-Number.MAX_VALUE,m=Number.MAX_VALUE),a=255/(m-o)}const i=new Uint32Array(t),u=this.width*this.height;let x,n,r,c,p;if(x=n=r=s[0],x.length!==u)return W.error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.");if(s.length>=2)if(n=s[1],s.length>=3&&(r=s[2]),e&&e.length===u)for(c=0;c<u;c++)e[c]&&(i[c]=255<<24|(r[c]-o)*a<<16|(n[c]-o)*a<<8|(x[c]-o)*a);else for(c=0;c<u;c++)i[c]=255<<24|(r[c]-o)*a<<16|(n[c]-o)*a<<8|(x[c]-o)*a;else if(e&&e.length===u)for(c=0;c<u;c++)p=(x[c]-o)*a,e[c]&&(i[c]=255<<24|p<<16|p<<8|p);else for(c=0;c<u;c++)p=(x[c]-o)*a,i[c]=255<<24|p<<16|p<<8|p}_fillFrom32Bit(t){const{pixels:s,mask:e}=this;if(!t||!s||!s.length)return W.error("getAsRGBAFloat()","Unable to convert to RGBA. The input pixel block is empty.");let l,f,a,o;l=f=a=s[0],s.length>=3?(f=s[1],a=s[2]):s.length===2&&(f=s[1]);const h=this.width*this.height;if(l.length!==h)return W.error("getAsRGBAFloat()","Unable to convert to RGBA. The pixelblock is invalid.");let i=0;if(e&&e.length===h)for(o=0;o<h;o++)t[i++]=l[o],t[i++]=f[o],t[i++]=a[o],t[i++]=1&e[o];else for(o=0;o<h;o++)t[i++]=l[o],t[i++]=f[o],t[i++]=a[o],t[i++]=1}_calculateBandStatistics(t,s){let e=1/0,l=-1/0;const f=t.length;let a,o=0;if(s)for(a=0;a<f;a++)s[a]&&(o=t[a],e=o<e?o:e,l=o>l?o:l);else for(a=0;a<f;a++)o=t[a],e=o<e?o:e,l=o>l?o:l;return{minValue:e,maxValue:l}}};G([R({json:{write:!0}})],I.prototype,"width",void 0),G([R({json:{write:!0}})],I.prototype,"height",void 0),G([R({json:{write:!0}})],I.prototype,"pixelType",void 0),G([it("pixelType")],I.prototype,"castPixelType",null),G([R({json:{write:!0}})],I.prototype,"validPixelCount",void 0),G([R({json:{write:!0}})],I.prototype,"mask",void 0),G([R({json:{write:!0}})],I.prototype,"maskIsAlpha",void 0),G([R({json:{write:!0}})],I.prototype,"pixels",void 0),G([R({json:{write:!0}})],I.prototype,"statistics",void 0),I=j=G([st("esri.layers.support.PixelBlock")],I);const F=I;function C(t){return $(t)&&t.declaredClass==="esri.layers.support.PixelBlock"&&t.pixels&&t.pixels.length>0}function mt(t,s){if(s==null||!s.length||!C(t))return t;const e=t.pixels.length;return s&&s.some(l=>l>=e)||e===1&&s.length===1&&s[0]===0?t:e!==s.length||s.some((l,f)=>l!==f)?new F({pixelType:t.pixelType,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:s.map(l=>t.pixels[l]),statistics:t.statistics&&s.map(l=>t.statistics[l])}):t}function dt(t){if(!t)return;const s=t.colormap;if(!s||s.length===0)return;const e=s.sort((n,r)=>n[0]-r[0]);let l=0;e[0][0]<0&&(l=e[0][0]);const f=Math.max(256,e[e.length-1][0]-l+1),a=new Uint8Array(4*f),o=[];let h,i=0,u=0;const x=e[0].length===5;if(f>65536)return e.forEach(n=>{o[n[0]-l]=x?n.slice(1):n.slice(1).concat([255])}),{indexed2DColormap:o,offset:l,alphaSpecified:x};if(t.fillUnspecified)for(h=e[u],i=h[0]-l;i<f;i++)a[4*i]=h[1],a[4*i+1]=h[2],a[4*i+2]=h[3],a[4*i+3]=x?h[4]:255,i===h[0]-l&&(h=u===e.length-1?h:e[++u]);else for(i=0;i<e.length;i++)h=e[i],u=4*(h[0]-l),a[u]=h[1],a[u+1]=h[2],a[u+2]=h[3],a[u+3]=x?h[4]:255;return{indexedColormap:a,offset:l,alphaSpecified:x}}function gt(t,s){if(!C(t)||!s&&(s.indexedColormap||s.indexed2DColormap))return t;const e=t.clone(),l=e.pixels;let f=e.mask;const a=e.width*e.height;if(l.length!==1)return t;const{indexedColormap:o,indexed2DColormap:h,offset:i,alphaSpecified:u}=s,x=o.length-1;let n=0;const r=l[0],c=new Uint8Array(r.length),p=new Uint8Array(r.length),m=new Uint8Array(r.length);let y,d=0;if(o)if(f)for(n=0;n<a;n++)f[n]&&(d=4*(r[n]-i),d<i||d>x?f[n]=0:(c[n]=o[d],p[n]=o[d+1],m[n]=o[d+2],f[n]=o[d+3]));else{for(f=new Uint8Array(a),n=0;n<a;n++)d=4*(r[n]-i),d<i||d>x?f[n]=0:(c[n]=o[d],p[n]=o[d+1],m[n]=o[d+2],f[n]=o[d+3]);e.mask=f}else if(f)for(n=0;n<a;n++)f[n]&&(y=h[r[n]],c[n]=y[0],p[n]=y[1],m[n]=y[2],f[n]=y[3]);else{for(f=new Uint8Array(a),n=0;n<a;n++)y=h[r[n]],c[n]=y[0],p[n]=y[1],m[n]=y[2],f[n]=y[3];e.mask=f}return e.pixels=[c,p,m],e.statistics=null,e.pixelType="u8",e.maskIsAlpha=u,e}function yt(t){if(!C(t))return null;t.statistics||t.updateStatistics();const{pixels:s,mask:e,pixelType:l,statistics:f}=t,a=t.width*t.height,o=s.length;let h,i,u,x,n;const r=[],c=[];let p,m,y,d,g,w,A,k,b,M;const v=256;for(x=0;x<o;x++){if(p=new Uint32Array(v),y=s[x],l==="u8")if(h=-.5,i=255.5,e)for(n=0;n<a;n++)e[n]&&p[y[n]]++;else for(n=0;n<a;n++)p[y[n]]++;else{if(h=f[x].minValue,i=f[x].maxValue,u=(i-h)/v,m=new Uint32Array(v+1),e)for(n=0;n<a;n++)e[n]&&m[Math.floor((y[n]-h)/u)]++;else for(n=0;n<a;n++)m[Math.floor((y[n]-h)/u)]++;for(n=0;n<255;n++)p[n]=m[n];p[255]=m[255]+m[256]}for(r.push({min:h,max:i,size:v,counts:p}),d=0,g=0,k=0,n=0;n<v;n++)d+=p[n],g+=n*p[n];for(b=g/d,n=0;n<v;n++)k+=p[n]*(n-b)**2;M=Math.sqrt(k/(d-1)),u=(i-h)/v,w=(b+.5)*u+h,A=M*u,c.push({min:h,max:i,avg:w,stddev:A})}return{statistics:c,histograms:r}}function wt(t){const s=[];for(let e=0;e<t.length;e++){const{min:l,max:f,size:a,counts:o}=t[e];let h=0,i=0;for(let p=0;p<a;p++)h+=o[p],i+=p*o[p];const u=i/h;let x=0;for(let p=0;p<a;p++)x+=o[p]*(p-u)**2;const n=(f-l)/a,r=(u+.5)*n+l,c=Math.sqrt(x/(h-1))*n;s.push({min:l,max:f,avg:r,stddev:c})}return s}function kt(t){const{minCutOff:s,maxCutOff:e,gamma:l,pixelType:f}=t,a=t.outMin||0,o=t.outMax||255;if(["u8","u16","s8","s16"].indexOf(f)===-1)return null;const h=s.length;let i,u,x=0;f==="s8"?x=-127:f==="s16"&&(x=-32767);let n=256;["u16","s16"].indexOf(f)>-1&&(n=65536);const r=[],c=[],p=o-a;for(i=0;i<h;i++)c[i]=e[i]-s[i],r[i]=p/(e[i]-s[i]);const m=l&&l.length>=h,y=[];if(m)for(i=0;i<h;i++)l[i]>1?l[i]>2?y[i]=6.5+(l[i]-2)**2.5:y[i]=6.5+100*(2-l[i])**4:y[i]=1;let d;const g=[];let w,A,k;if(m)for(i=0;i<h;i++){for(k=[],u=0;u<n;u++)w=u+x,d=(w-s[i])/c[i],A=1,l[i]>1&&(A-=(1/p)**(d*y[i])),w<e[i]&&w>s[i]?k[u]=Math.floor(A*p*d**(1/l[i]))+a:w>=e[i]?k[u]=o:k[u]=a;g[i]=k}else for(i=0;i<h;i++){for(k=[],u=0;u<n;u++)w=u+x,w<=s[i]?k[u]=a:w>=e[i]?k[u]=o:k[u]=Math.floor((w-s[i])/c[i]*p)+a;g[i]=k}if(t.contrastOffset!=null){const b=at(t.contrastOffset,t.brightnessOffset);for(i=0;i<h;i++)for(k=g[i],u=0;u<n;u++)k[u]=b[k[u]]}return{lut:g,offset:x}}function at(t,s){const e=Math.min(Math.max(t,-100),100),l=Math.min(Math.max(s,-100),100),f=255,a=128;let o,h;const i=new Uint8Array(256);for(o=0;o<256;o++)e>0&&e<100?h=(200*o-100*f+2*f*l)/(2*(100-e))+a:e<=0&&e>-100?h=(200*o-100*f+2*f*l)*(100+e)/2e4+a:e===100?(h=200*o-100*f+(f+1)*(100-e)+2*f*l,h=h>0?f:0):e===-100&&(h=a),i[o]=h>f?f:h<0?0:h;return i}function At(t,s=256){s=Math.min(s,256);const{size:e,counts:l}=t,f=new Uint8Array(e),a=l.reduce((x,n)=>x+n/s,0);let o=0,h=0,i=0,u=a;for(let x=0;x<e;x++)if(i+=l[x],!(x<e-1&&i+l[x+1]<u)){for(;o<s-1&&u<i;)o++,u+=a;for(let n=h;n<=x;n++)f[n]=o;h=x+1}for(let x=h;x<e;x++)f[x]=s-1;return f}function Mt(t,s){if(!C(t))return null;const e=t.clone(),{pixels:l,mask:f}=e,{minCutOff:a,maxCutOff:o,gamma:h}=s,i=s.outMin||0,u=s.outMax||255,x=e.width*e.height,n=l.length;let r,c,p,m,y;const d=u-i,g=[],w=[];for(r=0;r<n;r++)w[r]=o[r]-a[r],g[r]=d/(o[r]-a[r]);const A=h&&h.length>=n,k=[];if(A)for(r=0;r<n;r++)h[r]>1?h[r]>2?k[r]=6.5+(h[r]-2)**2.5:k[r]=6.5+100*(2-h[r])**4:k[r]=1;if(A)if(f!=null){for(c=0;c<x;c++)if(f[c])for(r=0;r<n;r++)p=l[r][c],y=(p-a[r])/w[r],m=1,h[r]>1&&(m-=(1/d)**(y*k[r])),p<o[r]&&p>a[r]?l[r][c]=Math.floor(m*d*y**(1/h[r]))+i:p>=o[r]?l[r][c]=u:l[r][c]=i}else for(c=0;c<x;c++)for(r=0;r<n;r++)p=l[r][c],y=(p-a[r])/w[r],m=1,h[r]>1&&(m-=(1/d)**(y*k[r])),p<o[r]&&p>a[r]?l[r][c]=Math.floor(m*d*y**(1/h[r]))+i:p>=o[r]?l[r][c]=u:l[r][c]=i;else if(f!=null){for(c=0;c<x;c++)if(f[c])for(r=0;r<n;r++)p=l[r][c],p<o[r]&&p>a[r]?l[r][c]=Math.floor((p-a[r])/w[r]*d)+i:p>=o[r]?l[r][c]=u:l[r][c]=i}else for(c=0;c<x;c++)for(r=0;r<n;r++)p=l[r][c],p<o[r]&&p>a[r]?l[r][c]=Math.floor((p-a[r])/w[r]*d)+i:p>=o[r]?l[r][c]=u:l[r][c]=i;return e.pixelType="u8",e.updateStatistics(),e}function vt(t,s){if(!C(t))return null;const{pixels:e,mask:l}=t,f=t.width*t.height,a=e.length;let o=s.lut;const{offset:h}=s;let i,u;o&&o[0].length===1&&(o=e.map(()=>o));const x=[];let n,r,c;if(h)if(l==null)for(i=0;i<a;i++){for(n=e[i],r=o[i],c=new Uint8Array(f),u=0;u<f;u++)c[u]=r[n[u]-h];x.push(c)}else for(i=0;i<a;i++){for(n=e[i],r=o[i],c=new Uint8Array(f),u=0;u<f;u++)l[u]&&(c[u]=r[n[u]-h]);x.push(c)}else if(l==null)for(i=0;i<a;i++){for(n=e[i],r=o[i],c=new Uint8Array(f),u=0;u<f;u++)c[u]=r[n[u]];x.push(c)}else for(i=0;i<a;i++){for(n=e[i],r=o[i],c=new Uint8Array(f),u=0;u<f;u++)l[u]&&(c[u]=r[n[u]]);x.push(c)}const p=new F({width:t.width,height:t.height,pixels:x,mask:l,pixelType:"u8"});return p.updateStatistics(),p}function Ut(t,s){if(!C(t))return null;const e=t.clone(),{pixels:l}=e,f=e.width*e.height,a=s.length,o=Math.floor(a/2),h=s[Math.floor(o)],i=l[0];let u,x,n,r,c,p,m=!1;const y=new Uint8Array(f),d=new Uint8Array(f),g=new Uint8Array(f);let w=e.mask;const A=s[0].mappedColor.length===4;for(w||(w=new Uint8Array(f),w.fill(A?255:1),e.mask=w),c=0;c<f;c++)if(w[c]){for(u=i[c],m=!1,p=o,x=h,n=0,r=a-1;r-n>1;){if(u===x.value){m=!0;break}u>x.value?n=p:r=p,p=Math.floor((n+r)/2),x=s[Math.floor(p)]}m||(u===s[n].value?(x=s[n],m=!0):u===s[r].value?(x=s[r],m=!0):u<s[n].value?(m=!1,x=null):u>s[n].value&&(u<s[r].value?(x=s[n],m=!0):r===a-1?(m=!1,x=null):(x=s[r],m=!0))),m?(y[c]=x.mappedColor[0],d[c]=x.mappedColor[1],g[c]=x.mappedColor[2],w[c]=x.mappedColor[3]):y[c]=d[c]=g[c]=w[c]=0}return e.pixels=[y,d,g],e.mask=w,e.pixelType="u8",e.maskIsAlpha=A,e}function ot(t,s,e,l,f,a,o,h){return{xmin:f<=e*t?0:f<e*t+t?f-e*t:t,ymin:a<=l*s?0:a<l*s+s?a-l*s:s,xmax:f+o<=e*t?0:f+o<e*t+t?f+o-e*t:t,ymax:a+h<=l*s?0:a+h<l*s+s?a+h-l*s:s}}function bt(t,s){if(!t||t.length===0)return null;const e=t.filter(p=>p.pixelBlock)[0];if(!e||N(e.pixelBlock))return null;const l=(e.extent.xmax-e.extent.xmin)/e.pixelBlock.width,f=(e.extent.ymax-e.extent.ymin)/e.pixelBlock.height,a=.01*Math.min(l,f),o=t.sort((p,m)=>Math.abs(p.extent.ymax-m.extent.ymax)>a?m.extent.ymax-p.extent.ymax:Math.abs(p.extent.xmin-m.extent.xmin)>a?p.extent.xmin-m.extent.xmin:0),h=Math.min.apply(null,o.map(p=>p.extent.xmin)),i=Math.min.apply(null,o.map(p=>p.extent.ymin)),u=Math.max.apply(null,o.map(p=>p.extent.xmax)),x=Math.max.apply(null,o.map(p=>p.extent.ymax)),n={x:Math.round((s.xmin-h)/l),y:Math.round((x-s.ymax)/f)},r={width:Math.round((u-h)/l),height:Math.round((x-i)/f)},c={width:Math.round((s.xmax-s.xmin)/l),height:Math.round((s.ymax-s.ymin)/f)};return Math.round(r.width/e.pixelBlock.width)*Math.round(r.height/e.pixelBlock.height)!==o.length||n.x<0||n.y<0||r.width<c.width||r.height<c.height?null:{extent:s,pixelBlock:ht(o.map(p=>p.pixelBlock),r,{clipOffset:n,clipSize:c})}}function Z(t,s,e,l,f,a){const{width:o,height:h}=e.block,{x:i,y:u}=e.offset,{width:x,height:n}=e.mosaic,r=ot(o,h,l,f,i,u,x,n);let c=0,p=0;if(a){const m=a.hasGCSSShiftTransform?360:a.halfWorldWidth,y=o*a.resolutionX,d=a.startX+l*y,g=d+y;d<m&&g>m?p=a.rightPadding:d>=m&&(c=a.leftMargin-a.rightPadding,p=0)}if(r.xmax-=p,typeof s!="number")for(let m=r.ymin;m<r.ymax;m++){const y=(f*h+m-u)*x+(l*o-i)+c,d=m*o;for(let g=r.xmin;g<r.xmax;g++)t[y+g]=s[d+g]}else for(let m=r.ymin;m<r.ymax;m++){const y=(f*h+m-u)*x+(l*o-i)+c;for(let d=r.xmin;d<r.xmax;d++)t[y+d]=s}}function ht(t,s,e={}){const{clipOffset:l,clipSize:f,alignmentInfo:a,blockWidths:o}=e;if(o)return ft(t,s,{blockWidths:o});const h=t.filter(M=>C(M))[0];if(N(h))return null;const i=f?f.width:s.width,u=f?f.height:s.height,x=h.width,n=h.height,r=s.width/x,c=s.height/n,p={offset:l||{x:0,y:0},mosaic:f||s,block:{width:x,height:n}},m=h.pixelType,y=F.getPixelArrayConstructor(m),d=h.pixels.length,g=[];let w,A;for(let M=0;M<d;M++){A=new y(i*u);for(let v=0;v<c;v++)for(let P=0;P<r;P++){const S=t[v*r+P];C(S)&&(w=S.pixels[M],Z(A,w,p,P,v,a))}g.push(A)}let k;if(t.some(M=>N(M)||M.mask&&M.mask.length>0)){k=new Uint8Array(i*u);for(let M=0;M<c;M++)for(let v=0;v<r;v++){const P=t[M*r+v],S=$(P)?P.mask:null;Z(k,S||(P?1:0),p,v,M,a)}}const b=new F({width:i,height:u,pixels:g,pixelType:m,mask:k});return b.updateStatistics(),b}function ft(t,s,e){const l=t.find(c=>$(c));if(!$(l))return null;const f=t.some(c=>!$(c)||!!c.mask),{width:a,height:o}=s,h=f?new Uint8Array(a*o):null,{blockWidths:i}=e,u=[],x=l.getPlaneCount(),n=F.getPixelArrayConstructor(l.pixelType);if(f)for(let c=0,p=0;c<t.length;p+=i[c],c++){const m=t[c];if(!C(m))continue;const y=m.mask;for(let d=0;d<o;d++)for(let g=0;g<i[c];g++)h[d*a+g+p]=y==null?255:y[d*m.width+g]}for(let c=0;c<x;c++){const p=new n(a*o);for(let m=0,y=0;m<t.length;y+=i[m],m++){const d=t[m];if(!C(d))continue;const g=d.pixels[c];if(g!=null)for(let w=0;w<o;w++)for(let A=0;A<i[m];A++)p[w*a+A+y]=g[w*d.width+A]}u.push(p)}const r=new F({width:a,height:o,mask:h,pixels:u,pixelType:l.pixelType});return r.updateStatistics(),r}function Tt(t,s,e){if(!C(t))return null;const{width:l,height:f}=t,a=s.x,o=s.y,h=e.width+a,i=e.height+o;if(a<0||o<0||h>l||i>f||a===0&&o===0&&h===l&&i===f)return t;t.mask||(t.mask=new Uint8Array(l*f));const u=t.mask;for(let x=0;x<f;x++){const n=x*l;for(let r=0;r<l;r++)u[n+r]=x<o||x>=i||r<a||r>=h?0:1}return t.updateStatistics(),t}function ct(t){if(!C(t))return null;const s=t.clone(),{width:e,height:l,pixels:f,mask:a}=t,o=f[0],h=s.pixels[0];for(let i=2;i<l-1;i++){const u=new Map;for(let n=i-2;n<i+2;n++)for(let r=0;r<4;r++){const c=n*e+r;q(u,o[c],a?a[c]:1)}h[i*e]=tt(u),h[i*e+1]=h[i*e+2]=h[i*e];let x=3;for(;x<e-1;x++){let n=(i-2)*e+x+1;q(u,o[n],a?a[n]:1),n=(i-1)*e+x+1,q(u,o[n],a?a[n]:1),n=i*e+x+1,q(u,o[n],a?a[n]:1),n=(i+1)*e+x+1,q(u,o[n],a?a[n]:1),n=(i-2)*e+x-3,Q(u,o[n],a?a[n]:1),n=(i-1)*e+x-3,Q(u,o[n],a?a[n]:1),n=i*e+x-3,Q(u,o[n],a?a[n]:1),n=(i+1)*e+x-3,Q(u,o[n],a?a[n]:1),h[i*e+x]=tt(u)}h[i*e+x+1]=h[i*e+x]}for(let i=0;i<e;i++)h[i]=h[e+i]=h[2*e+i],h[(l-1)*e+i]=h[(l-2)*e+i];return s.updateStatistics(),s}function tt(t){if(t.size===0)return 0;let s=0,e=-1,l=0;const f=t.keys();let a=f.next();for(;!a.done;)l=t.get(a.value),l>s&&(e=a.value,s=l),a=f.next();return e}function Q(t,s,e){if(e===0)return;const l=t.get(s);l===1?t.delete(s):t.set(s,l-1)}function q(t,s,e){e!==0&&t.set(s,t.has(s)?t.get(s)+1:1)}function ut(t,s,e){let{x:l,y:f}=s;const{width:a,height:o}=e;if(l===0&&f===0&&o===t.height&&a===t.width)return t;const{width:h,height:i}=t,u=Math.max(0,f),x=Math.max(0,l),n=Math.min(l+a,h),r=Math.min(f+o,i);if(n<0||r<0||!C(t))return null;l=Math.max(0,-l),f=Math.max(0,-f);const{pixels:c,mask:p}=t,m=a*o,y=c.length,d=[];for(let A=0;A<y;A++){const k=c[A],b=F.createEmptyBand(t.pixelType,m);for(let M=u;M<r;M++){const v=M*h;let P=(M+f-u)*a+l;for(let S=x;S<n;S++)b[P++]=k[v+S]}d.push(b)}const g=new Uint8Array(m);for(let A=u;A<r;A++){const k=A*h;let b=(A+f-u)*a+l;for(let M=x;M<n;M++)g[b++]=p?p[k+M]:1}const w=new F({width:e.width,height:e.height,pixelType:t.pixelType,pixels:d,mask:g});return w.updateStatistics(),w}function pt(t,s=!0){if(!C(t))return null;const{pixels:e,width:l,height:f,mask:a,pixelType:o}=t,h=[],i=Math.round(l/2),u=Math.round(f/2),x=f-1,n=l-1;for(let c=0;c<e.length;c++){const p=e[c],m=F.createEmptyBand(o,i*u);let y=0;for(let d=0;d<f;d+=2)for(let g=0;g<l;g+=2){const w=p[d*l+g];if(s){const A=g===n?w:p[d*l+g+1],k=d===x?w:p[d*l+g+l],b=g===n?k:d===x?A:p[d*l+g+l+1];m[y++]=(w+A+k+b)/4}else m[y++]=w}h.push(m)}let r=null;if(a){r=new Uint8Array(i*u);let c=0;for(let p=0;p<f;p+=2)for(let m=0;m<l;m+=2){const y=a[p*l+m];if(s){const d=m===n?y:a[p*l+m+1],g=p===x?y:a[p*l+m+l],w=m===n?g:p===x?d:a[p*l+m+l+1];r[c++]=y*d*g*w?1:0}else r[c++]=y}}return new F({width:i,height:u,pixelType:o,pixels:h,mask:r})}function Bt(t,s,e){if(!C(t))return null;const{width:l,height:f}=s;let{width:a,height:o}=t;const h=new Map,i={x:0,y:0},u=e==null?1:1+e;let x=t;for(let n=0;n<u;n++){const r=Math.ceil(a/l),c=Math.ceil(o/f);for(let p=0;p<c;p++){i.y=p*f;for(let m=0;m<r;m++){i.x=m*l;const y=ut(x,i,s);h.set(`${n}/${p}/${m}`,y)}}n<u-1&&(x=pt(x)),a=Math.round(a/2),o=Math.round(o/2)}return h}function Ct(t,s,e,l,f="nearest"){if(!C(t))return null;f==="majority"&&(t=ct(t));const{pixels:a,mask:o,pixelType:h}=t,i=t.width,u=t.height,x=F.getPixelArrayConstructor(h),n=a.length,{width:r,height:c}=s,p=l.cols,m=l.rows,y=Math.ceil(r/p-.1/p),d=Math.ceil(c/m-.1/m);let g,w,A,k,b,M,v,P=!1;for(let U=0;U<e.length;U+=3)e[U]===-1&&e[U+1]===-1&&e[U+2]===-1&&(P=!0);const S=y*p,H=S*d*m,D=new Float32Array(H),X=new Float32Array(H);let V,_,E=0;const L=f==="majority"?0:.5;for(let U=0;U<d;U++)for(let O=0;O<y;O++){g=12*(U*y+O),w=e[g],A=e[g+1],k=e[g+2],b=e[g+3],M=e[g+4],v=e[g+5];for(let T=0;T<m;T++){E=(U*m+T)*S+O*p,_=(T+.5)/m;for(let B=0;B<T;B++)V=(B+.5)/p,D[E+B]=Math.round((w*V+A*_+k)*i-L),X[E+B]=Math.round((b*V+M*_+v)*u-L)}g+=6,w=e[g],A=e[g+1],k=e[g+2],b=e[g+3],M=e[g+4],v=e[g+5];for(let T=0;T<m;T++){E=(U*m+T)*S+O*p,_=(T+.5)/m;for(let B=T;B<p;B++)V=(B+.5)/p,D[E+B]=Math.round((w*V+A*_+k)*i-L),X[E+B]=Math.round((b*V+M*_+v)*u-L)}}const J=(U,O)=>{for(let T=0;T<c;T++){g=T*S;for(let B=0;B<r;B++)D[g]<0||X[g]<0?U[T*r+B]=0:U[T*r+B]=O[D[g]+X[g]*i],g++}},K=[];let Y;for(let U=0;U<n;U++)Y=new x(r*c),J(Y,a[U]),K.push(Y);const z=new F({width:r,height:c,pixelType:h,pixels:K});if(o)z.mask=new Uint8Array(r*c),J(z.mask,o);else if(P){z.mask=new Uint8Array(r*c);for(let U=0;U<r*c;U++)z.mask[U]=D[U]<0||X[U]<0?0:1}return z.updateStatistics(),z}export{Ct as B,Tt as M,At as a,wt as b,Mt as c,bt as d,kt as f,C as i,mt as l,dt as o,vt as p,gt as r,yt as s,F as u,Bt as v,Ut as x,ht as y};
