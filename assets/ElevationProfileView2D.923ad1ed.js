import{lP as l,c3 as d,b5 as p,b0 as g,dG as _,bA as u,ss as c,aV as v,k$ as n,l0 as o,b9 as a,st as m}from"./vendor.c8f3cc8c.js";import{h as w}from"./HoveredPoints.66e66bbe.js";class b{constructor(t){this._params=t,this._highlightTask=null,this._highlightHandle=null}destroy(){this.remove()}remove(){this._highlightTask=l(this._highlightTask),this._highlightHandle=d(this._highlightHandle)}update(t){if(this.remove(),p(t)||!y(t))return;const i=t.layer;this._highlightTask=_(async e=>{const h=await this._params.view.whenLayerView(i);u(e),c(h)&&(this._highlightHandle=h.highlight(t))})}}function y(s){return g(s.geometry)&&s.geometry.type==="polyline"}class ${constructor(t,i){this._handles=new v,this._inputRepresentation=new b({view:t}),this._hoveredPoints=new w({view:t}),this._handles.add([n(()=>i.viewModel.hoveredPoints,e=>this._hoveredPoints.update(e),o),n(()=>{const{state:e,highlightEnabled:h,viewModel:r}=i;return{input:r.input,state:e,highlightEnabled:h}},e=>this._updateInputRepresentation(e),o)])}destroy(){this._handles=a(this._handles),this._inputRepresentation=a(this._inputRepresentation),this._hoveredPoints=a(this._hoveredPoints)}_updateInputRepresentation({input:t,state:i,highlightEnabled:e}){i===m.Selected&&e?this._inputRepresentation.update(t):this._inputRepresentation.remove()}}export{$ as ElevationProfileView2D};
