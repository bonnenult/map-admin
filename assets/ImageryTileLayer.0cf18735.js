var et=Object.defineProperty,tt=Object.defineProperties;var it=Object.getOwnPropertyDescriptors;var Pe=Object.getOwnPropertySymbols;var st=Object.prototype.hasOwnProperty,rt=Object.prototype.propertyIsEnumerable;var Fe=(e,t,i)=>t in e?et(e,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[t]=i,O=(e,t)=>{for(var i in t||(t={}))st.call(t,i)&&Fe(e,i,t[i]);if(Pe)for(var i of Pe(t))rt.call(t,i)&&Fe(e,i,t[i]);return e},N=(e,t)=>tt(e,it(t));import{X as Oe,e as I,d as S,a8 as J,rr as pe,cn as U,iB as ne,kM as $e,i as X,sk as De,t as H,r as P,cr as nt,bb as Be,ew as at,eb as ot,an as D,aI as K,aA as z,be as lt,fS as Ee,ap as Ae,bf as ut,sl as ct,dy as ft,sm as ht,rt as dt,ru as mt,kG as pt,kH as yt,rP as gt,rR as xt,rv as It,kI as wt,f as vt,co as bt,gQ as ce,fc as St,lU as Tt,f7 as Rt,fh as Ct,rM as _t,fg as kt,f6 as Mt}from"./index.988b09cd.js";import{p as He,a as ze,Z as Le,T as Pt,S as Ft,j as Ot,b as $t,u as Dt,o as Bt,l as Et}from"./rasterRendererHelper.95232354.js";import{f as At,c as Ht,a as zt}from"./dataUtils.5926a4d7.js";import{N as Lt,P as Nt,p as fe,r as Ne,l as ae,O as Jt,b as jt,C as Wt,c as qt,d as ye,e as Ut,D as Gt,g as Vt}from"./RasterSymbolizer.d4518fd2.js";import{i as Je,m as je,x as We,d as Yt,h as Xt}from"./RawBlockCache.1670a4c8.js";import{y as qe,B as Kt,v as Qt,s as Zt,b as Se,M as ei,u as ti}from"./pixelUtils.5acf42e1.js";import{d as ii,v as Ue,A as Ge,q as si,P as Ve,G as Te,j as Re,L as ri,T as ni,R as ai}from"./rasterProjectionHelper.d38d1723.js";import{e as oi,f as li,m as Ce,c as ui}from"./utils.804aa32e.js";import"./vendor.c6be4c00.js";import"./index.25aa0880.js";/* empty css              */import"./qrcode.0911187d.js";/* empty css                 */import"./ClassBreaksDefinition.34fb124d.js";import"./LercCodec.90951eb3.js";import"./colorUtils.92e1b957.js";const Ye=Oe.getLogger("esri.layers.mixins.ImageryTileMixin"),ci=e=>{let t=class extends e{constructor(){super(...arguments),this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.fullExtent=null,this.interpolation="nearest",this.multidimensionalDefinition=null,this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.tileInfo=null,this.symbolizer=null}set url(i){this._set("url",De(i,Ye))}set renderer(i){this._set("renderer",i),this.updateRenderer()}async convertVectorFieldData(i,s){if(H(i))return null;const n=this._rasterJobHandler.instance,r=this.rasterInfo.dataType;return n?n.convertVectorFieldData({pixelBlock:i,dataType:r},s):At(i,r)}async createStreamlinesMesh(i,s){const n=this._rasterJobHandler.instance;return n?n.createStreamlinesMesh(i,s):Ht(i.rendererSettings,i.flowData,P(s.signal)?s.signal:new AbortController().signal)}normalizeRasterFetchOptions(i){const{multidimensionalInfo:s}=this.rasterInfo;if(H(s))return i;let n=i.multidimensionalDefinition||this.multidimensionalDefinition;!H(n)&&n.length||(n=this._getDefaultSlice());const r=i.timeExtent||this.timeExtent;if(P(n)&&P(r)&&(P(r.start)||P(r.end))){var a,u;n=n.map(d=>d.clone());const o=(a=s.variables.find(({name:d})=>d===n[0].variableName))==null||(u=a.dimensions)==null?void 0:u.find(({name:d})=>d==="StdTime"),l=n.find(({dimensionName:d})=>d==="StdTime");if(!o||!l)return N(O({},i),{multidimensionalDefinition:null});const{start:c,end:f}=r,m=H(c)?null:c.getTime(),h=H(f)?null:f.getTime(),y=m!=null?m:h,p=h!=null?h:m;if(P(o.values)){const d=o.values.filter(g=>{if(Array.isArray(g)){if(y===p)return g[0]<=y&&g[1]>=y;const x=g[0]<=y&&g[1]>y||g[0]<p&&g[1]>=p,w=g[0]>=y&&g[1]<=p||g[0]<y&&g[1]>p;return x||w}return y===p?g===y:g>=y&&g<=p});if(d.length){const g=d.sort((x,w)=>{var _,v,T,b;return y===p?((T=x[0])!=null?T:x)-((b=w[0])!=null?b:w):Math.abs(((_=x[1])!=null?_:x)-p)-Math.abs(((v=w[1])!=null?v:w)-p)})[0];l.values=[g]}else n=null}else if(o.hasRegularIntervals&&o.extent){const[d,g]=o.extent;y>g||p<d?n=null:l.values=y===p?[y]:[Math.max(d,y),Math.min(g,p)]}}return N(O({},i),{multidimensionalDefinition:n})}async updateRenderer(){if(!this.loaded||JSON.stringify(this._cachedRendererJson)===JSON.stringify(this.renderer))return;const i=this._rasterJobHandler.instance;i&&(this.symbolizer.rendererJSON=Le(this.renderer.toJSON()),this.symbolizer.bind(),await i.updateSymbolizer(this.symbolizer),this._cachedRendererJson=this.renderer.toJSON())}async applyRenderer(i,s){const n=i&&i.pixelBlock;if(!(P(n)&&n.pixels&&n.pixels.length>0))return null;let r;await this.updateRenderer();const a=this._rasterJobHandler.instance,{bandIds:u}=this;return r=a?await a.symbolize(N(O({},i),{simpleStretchParams:s,bandIds:u})):this.symbolizer.symbolize(N(O({},i),{simpleStretchParams:s,bandIds:u})),r}getTileUrl(i,s,n){return this.raster.datasetFormat==="RasterTileServer"?`${this.url}/tile/${i}/${s}/${n}`:""}getCompatibleTileInfo(i,s,n=!1){if(!this.loaded||H(s))return null;if(n&&i.equals(this.spatialReference))return this.tileInfo;const r=nt(i);return ne.create({size:256,spatialReference:i,origin:r?{x:r.origin[0],y:r.origin[1]}:{x:s.xmin,y:s.ymax}})}getCompatibleFullExtent(i){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(i)||(this._compatibleFullExtent=this.raster.computeExtent(i)),this._compatibleFullExtent):null}async fetchTile(i,s,n,r={}){if(r.requestAsImageElement){const a=this.getTileUrl(i,s,n);return Be(a,{responseType:"image",query:O(O({},this.refreshParameters),this.raster.ioConfig.customFetchParameters),signal:r.signal}).then(u=>u.data)}if(P(this.rasterInfo.multidimensionalInfo)&&(r=this.normalizeRasterFetchOptions(r),H(r.multidimensionalDefinition))){const a=r.tileInfo||this.rasterInfo.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(i,s,n,a),pixelBlock:null}}return await this._initJobHandler(),this.renderer.type==="raster-shaded-relief"&&(r=N(O({},r),{buffer:{cols:1,rows:1}})),this.raster.fetchTile(i,s,n,r)}async fetchPixels(i,s,n,r={}){return P(this.rasterInfo.multidimensionalInfo)&&(r=this.normalizeRasterFetchOptions(r),H(r.multidimensionalDefinition))?{extent:i,pixelBlock:null}:(await this._initJobHandler(),this.raster.fetchPixels(i,s,n,r))}async identify(i,s={}){return P(this.rasterInfo.multidimensionalInfo)&&(s=this.normalizeRasterFetchOptions(s),H(s.multidimensionalDefinition))?{location:i,value:null}:this.raster.identify(i,s)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){var i;const s=this.rasterInfo.multidimensionalInfo;if(!P(s)||this.rasterInfo.dataType!=="standard-time")return!1;const n=(i=this.multidimensionalDefinition[0])==null?void 0:i.variableName;return s.variables.some(r=>r.name===n&&r.dimensions.some(a=>a.name==="StdTime"))}getStandardTimeValue(i){return new Date(24*(i-25569)*3600*1e3).toString()}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=this._getDefaultSlice()),this._configDefaultRenderer()}_initJobHandler(){if(this._rasterJobHandler.connectionPromise!=null)return this._rasterJobHandler.connectionPromise;const i=new $t;return this._rasterJobHandler.connectionPromise=i.initialize().then(()=>{this._rasterJobHandler.instance=i,this.raster.rasterJobHandler=i,this.renderer&&this.updateRenderer()}).catch(()=>null),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this.raster.rasterJobHandler=null}_configDefaultInterpolation(){if(this.interpolation==null){var i;const s=Pt(this.rasterInfo,this.raster.tileType,(i=this.sourceJSON)==null?void 0:i.defaultResamplingMethod);this._set("interpolation",s)}}_getDefaultSlice(){const{multidimensionalInfo:i}=this.raster.rasterInfo;if(!P(i))return null;const s=i.variables[0];return s.dimensions.map(n=>{var r,a;return new He({variableName:s.name,dimensionName:n.name,values:[(r=(a=n.values)==null?void 0:a[0])!=null?r:n.extent[0]],isSlice:!0})})}_configDefaultRenderer(){const i=this.raster.rasterInfo;var s;this.bandIds||(this.bandIds=Ft(i)),this.renderer||(this.renderer=Ot(i,{bandIds:this.bandIds,variableName:P(this.multidimensionalDefinition)?(s=this.multidimensionalDefinition[0])==null?void 0:s.variableName:null})),this.symbolizer?(this.symbolizer.rendererJSON=Le(this.renderer.toJSON()),this.symbolizer.rasterInfo=i):this.symbolizer=new Lt({rendererJSON:this.renderer.toJSON(),rasterInfo:i});const n=this.symbolizer.bind();n.success||Ye.warn("imagery-tile-mixin",n.error||"The given renderer is not supported by the layer.")}};return I([S()],t.prototype,"_cachedRendererJson",void 0),I([S()],t.prototype,"_compatibleFullExtent",void 0),I([S()],t.prototype,"_rasterJobHandler",void 0),I([S()],t.prototype,"bandIds",void 0),I([S()],t.prototype,"copyright",void 0),I([S({type:J}),pe("rasterInfo.extent")],t.prototype,"fullExtent",void 0),I([S()],t.prototype,"interpolation",void 0),I([S()],t.prototype,"ioConfig",void 0),I([S({type:[He]})],t.prototype,"multidimensionalDefinition",void 0),I([S()],t.prototype,"raster",void 0),I([S({readOnly:!0}),pe("raster.rasterInfo")],t.prototype,"rasterInfo",void 0),I([S()],t.prototype,"sourceJSON",void 0),I([S({type:U}),pe("rasterInfo.spatialReference")],t.prototype,"spatialReference",void 0),I([S({type:ne}),pe("rasterInfo.storageInfo.tileInfo")],t.prototype,"tileInfo",void 0),I([S($e)],t.prototype,"url",null),I([S({types:ze})],t.prototype,"renderer",null),I([S()],t.prototype,"symbolizer",void 0),t=I([X("esri.layers.ImageryTileMixin")],t),t},ge=8;let G=class extends at(ot){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const e=ii();this.addResolvingPromise(e),await this.when()}normalizeCtorArgs(e){return e&&e.ioConfig&&(e=N(O({},e),{ioConfig:O({resolution:null,bandIds:null,sampling:"closest",tileInfo:ne.create()},e.ioConfig)})),e}set url(e){this._set("url",De(e,Oe.getLogger(this.declaredClass)))}async open(e){throw new D("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(e,t,i,s={}){const n=s.tileInfo||this.rasterInfo.storageInfo.tileInfo,r=this.getTileExtentFromTileInfo(e,t,i,n);return this.fetchPixels(r,n.size[0],n.size[1],s)}async identify(e,t={}){t=this._getRequestOptionsWithSliceId(t);const{spatialReference:i,extent:s}=this.rasterInfo,{datumTransformation:n}=t;let r=Ue(e,i,n);if(!s.intersects(r))return{location:r,value:null};if(P(this.rasterInfo.transform)){const w=this.rasterInfo.transform.inverseTransform(r);if(!this.rasterInfo.nativeExtent.intersects(w))return{location:w,value:null};r=w}let a=0;if(t.srcResolution)a=Ge(t.srcResolution,this.rasterInfo,this.ioConfig.sampling).pyramidLevel;else if(a=await this.computeBestPyramidLevelForLocation(e,t),a==null)return{location:r,value:null};const u=this.identifyPixelLocation(r,a,null);if(u===null)return{location:r,value:null};const{row:o,col:l,rowOffset:c,colOffset:f}=u,m=Je(this.url,t.sliceId),h=`${a}/${o}/${l}`;let y=je(m,null,h);H(y)&&(y=this.fetchRawTile(a,o,l,t),We(m,null,h,y));const p=await y;if(H(p)||!p.pixels||p.pixels.length===0)return{location:r,value:null};const d=c*this.rasterInfo.storageInfo.blockHeight+f,g=!p.mask||p.mask[d]?p.pixels.map(w=>w[d]):null,x=this.rasterInfo.dataType;return(x==="vector-magdir"||x==="vector-uv")&&(g==null?void 0:g.length)>1?{location:r,value:g,magdirValue:x==="vector-magdir"?[g[0],g[1]]:zt([g[0],g[1]]),pyramidLevel:a}:{location:r,value:g,pyramidLevel:a}}async fetchPixels(e,t,i,s={}){e=si(e);const n=Ve(e.spatialReference),r=Te(e),a=Ve(this.rasterInfo.spatialReference),u=P(a)&&this.rasterInfo.extent.width>=a/2;if(s=this._getRequestOptionsWithSliceId(s),H(n)||r===0||r===1&&u)return this._fetchPixels(e,t,i,s);if(r>=3)return{extent:e,pixelBlock:null};const o=[],{xmin:l,xmax:c}=e,f=Math.round(n/(c-l)*t),m=f-Math.round((n/2-l)/(c-l)*t);let h=0;const y=[];for(let x=0;x<=r;x++){const w=new J({xmin:x===0?l:-n/2,xmax:x===r?c-n*x:n/2,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference}),_=x===0?f-m:x===r?t-h:f;h+=_,y.push(_);const v=this._fetchPixels(w,_,i,s);o.push(v)}const p=(await Promise.all(o)).map(x=>x==null?void 0:x.pixelBlock);let d=null;const g={width:t,height:i};return d=this.rasterJobHandler?await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:p,srcMosaicSize:g,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:y},s):qe(p,g,{blockWidths:y}),{extent:e,srcExtent:Re(e,this.rasterInfo.spatialReference,s.datumTransformation),pixelBlock:d}}async fetchRawPixels(e,t,i,s){const{origin:n,blockBoundary:r}=this.rasterInfo.storageInfo,{blockWidth:a,blockHeight:u}=this.getBlockWidthHeight(e);let{x:o,y:l}=t,{width:c,height:f,wrapCount:m}=i;const h=K(this._getRasterTileAlignmentInfo(e,0));s.buffer&&(o-=s.buffer.cols,l-=s.buffer.rows,c+=2*s.buffer.cols,f+=2*s.buffer.rows);const y=Math.floor(o/a),p=Math.floor(l/u),d=Math.floor((o+c-1)/a),g=Math.floor((l+f-1)/u),x=r[e];if(!x)return null;const{minRow:w,minCol:_,maxCol:v,maxRow:T}=x;if(m===0&&(g<w||d<_||p>T||y>v))return null;const b=new Array;let C=!1;const R=this.ioConfig.allowPartialFill==null?s.allowPartialFill:this.ioConfig.allowPartialFill;for(let q=p;q<=g;q++)for(let k=y;k<=d;k++){const Q=m===0||h==null||k<h.worldColumnCountFromOrigin?k:k%h.worldColumnCountFromOrigin-h.originColumnOffset;if(q>=w&&Q>=_&&T>=q&&v>=Q){const B=this._fetchRawTile(e,q,Q,s);R?b.push(new Promise(Z=>{B.then(Ze=>Z(Ze)).catch(()=>{C=!0,Z(null)})})):b.push(B)}else b.push(null)}if(b.length===0)return null;const M=await Promise.all(b),A={height:(g-p+1)*u,width:(d-y+1)*a},{spatialReference:F}=this.rasterInfo,W=this.getPyramidPixelSize(e),{x:E,y:re}=W;return{extent:new J({xmin:n.x+y*a*E,xmax:n.x+(d+1)*a*E,ymin:n.y-(g+1)*u*re,ymax:n.y-p*u*re,spatialReference:F}),pixelBlocks:M,mosaicSize:A,isPartiallyFilled:C}}fetchRawTile(e,t,i,s){throw new D("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(e){return Re(this.rasterInfo.extent,e)}decodePixelBlock(e,t){return!this.rasterJobHandler||t.useCanvas?Nt(e,t):this.rasterJobHandler.decode({data:e,options:t})}async request(e,t,i){var s,n;const{customFetchParameters:r}=this.ioConfig,{range:a,query:u,headers:o}=t;i=(s=(n=i)!=null?n:t.retryCount)!=null?s:this.ioConfig.retryCount;const l=a?{Range:`bytes=${a.from}-${a.to}`}:null;try{return await Be(e,N(O({},t),{query:O(O({},u),r),headers:O(O({},o),l)}))}catch(c){if(i>0)return i--,this.request(e,t,i);throw c}}getSliceIndex(e){const{multidimensionalInfo:t}=this.rasterInfo;if(!P(t)||!P(e)||e.length===0)return null;let i=0;const s=e[0].variableName;for(let n=0;n<t.variables.length;n++){const r=t.variables[n],a=r.dimensions;if(r.name!==s){i+=a.map(l=>this._getDimensionValuesCount(l)).reduce((l,c)=>l+c);break}const u=a.map(l=>this._getDimensionValuesCount(l)),o=a.length;for(let l=0;l<o;l++){const c=e.filter(h=>h.dimensionName===a[l].name)[0];if(c==null)return null;const f=Array.isArray(c.values[0])?c.values[0][0]:c.values[0],m=this._getIndexFromDimensions(f,a[l]);if(m===-1)return null;u.shift(),i+=l===o-1?m:m*u.reduce((h,y)=>h+y)}}return i}getTileExtentFromTileInfo(e,t,i,s){const n=s.lodAt(e);return this.getTileExtent({x:n.resolution,y:n.resolution},t,i,s.origin,s.spatialReference,s.size)}updateTileInfo(){const{storageInfo:e,spatialReference:t,extent:i,pixelSize:s}=this.rasterInfo;if(!e.tileInfo){const n=[],r=e.maximumPyramidLevel||0;let a=Math.max(s.x,s.y),u=1/.0254*96*a;for(let l=0;l<=r;l++)n.push({level:r-l,resolution:a,scale:u}),a*=2,u*=2;const o=new z({x:i.xmin,y:i.ymax,spatialReference:t});e.tileInfo=new ne({origin:o,size:[e.blockWidth,e.blockHeight],spatialReference:t,lods:n}),e.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(e,t=512,i=512,s){const{width:n,height:r,nativeExtent:a,pixelSize:u,spatialReference:o}=e,l=new z({x:a.xmin,y:a.ymax,spatialReference:o});s==null&&(s=Math.max(0,Math.round(Math.log(Math.max(n,r))/Math.LN2-8)));const c=this.computeBlockBoundary(a,512,512,{x:a.xmin,y:a.ymax},[u],s);e.storageInfo=new fe({blockWidth:t,blockHeight:i,pyramidBlockWidth:t,pyramidBlockHeight:i,origin:l,firstPyramidLevel:1,maximumPyramidLevel:s,blockBoundary:c})}async computeBestPyramidLevelForLocation(e,t={}){return 0}computeBlockBoundary(e,t,i,s,n,r=0,a=2){if(n.length===1&&r>0){n=[...n];let{x:c,y:f}=n[0];for(let m=0;m<r;m++)c*=a,f*=a,n.push({x:c,y:f})}const u=[],{x:o,y:l}=s;for(let c=0;c<n.length;c++){const{x:f,y:m}=n[c];u.push({minCol:Math.floor((e.xmin-o+.1*f)/t/f),maxCol:Math.floor((e.xmax-o-.1*f)/t/f),minRow:Math.floor((l-e.ymax+.1*m)/i/m),maxRow:Math.floor((l-e.ymin-.1*m)/i/m)})}return u}getPyramidPixelSize(e){const{nativePixelSize:t}=this.rasterInfo,{pyramidResolutions:i,pyramidScalingFactor:s}=this.rasterInfo.storageInfo;if(e===0)return t;if(P(i)&&i.length)return i[e-1];const n=s**e;return{x:t.x*n,y:t.y*n}}identifyPixelLocation(e,t,i){const{spatialReference:s,nativeExtent:n}=this.rasterInfo,{blockWidth:r,blockHeight:a,maximumPyramidLevel:u,origin:o}=this.rasterInfo.storageInfo,l=Ue(e,s,i);if(!n.intersects(l)||t<0||t>u)return null;const c=this.getPyramidPixelSize(t),{x:f,y:m}=c,h=(o.y-l.y)/m/a,y=(l.x-o.x)/f/r,p=Math.min(a-1,Math.floor((h-Math.floor(h))*a)),d=Math.min(r-1,Math.floor((y-Math.floor(y))*r));return{pyramidLevel:t,row:Math.floor(h),col:Math.floor(y),rowOffset:p,colOffset:d,srcLocation:l}}getTileExtent(e,t,i,s,n,r){const[a,u]=r,o=s.x+i*a*e.x,l=o+a*e.x,c=s.y-t*u*e.y,f=c-u*e.y;return new J({xmin:o,xmax:l,ymin:f,ymax:c,spatialReference:n})}getBlockWidthHeight(e){return{blockWidth:e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(e,t,i){const s=this.rasterInfo.storageInfo.blockBoundary[e];return!s||s.maxRow<t||s.maxCol<i||s.minRow>t||s.minCol>i}async _fetchPixels(e,t,i,s={}){let n=Te(e);if(n>=2)return{extent:e,pixelBlock:null};const r=this._getSourceDataInfo(e,t,i,s),{pyramidLevel:a,pyramidResolution:u,srcResolution:o,srcExtent:l,srcWidth:c,srcHeight:f}=r;if(c===0||f===0)return{extent:e,srcExtent:l,pixelBlock:null};const m=K(this.rasterInfo.transform);(m==null?void 0:m.type)==="gcs-shift"&&(n=Te(r.srcExtent,!0));const h=this.rasterInfo.storageInfo,y={x:Math.floor((l.xmin-h.origin.x)/u.x+.1),y:Math.floor((h.origin.y-l.ymax)/u.y+.1)},p=await this.fetchRawPixels(a,y,{width:c,height:f,wrapCount:n},s);if(!p)return{extent:e,srcExtent:l,pixelBlock:null};const d=a>0?h.pyramidBlockWidth:h.blockWidth,g=a>0?h.pyramidBlockHeight:h.blockHeight,x=d===c&&g===f&&y.x%d==0&&y.y%g==0,w=new z({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference}),_=!e.spatialReference.equals(this.rasterInfo.spatialReference),{datumTransformation:v}=s;if(!_&&x&&p.pixelBlocks.length===1&&d===t&&g===i&&o.x===w.x&&o.y===w.y)return{extent:e,srcExtent:l,pixelBlock:p.pixelBlocks[0]};const T=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:e,srcBufferExtent:p.extent,pixelSize:w.toJSON(),datumTransformation:v,rasterTransform:m,hasWrapAround:n>0,isAdaptive:this.ioConfig.optimizeProjectionAccuracy!==!1},s):ri({projectedExtent:e,srcBufferExtent:p.extent,pixelSize:w,datumTransformation:v,rasterTransform:m,hasWrapAround:n>0,isAdaptive:!1});let b;const C=!s.requestRawData,R={rows:T.spacing[0],cols:T.spacing[1]},M=K(this._getRasterTileAlignmentInfo(a,p.extent.xmin)),{pixelBlocks:A,mosaicSize:F,isPartiallyFilled:W}=p;if(this.rasterJobHandler)b=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:A,srcMosaicSize:F,destDimension:C?{width:t,height:i}:null,coefs:C?T.coefficients:null,sampleSpacing:C?R:null,interpolation:s.interpolation,alignmentInfo:M,blockWidths:null},s);else{const E=qe(A,F,{alignmentInfo:M});b=C?Kt(E,{width:t,height:i},T.coefficients,R,s.interpolation):E}return s.requestRawData?{srcExtent:l,pixelBlock:b,transformGrid:T,extent:e,isPartiallyFilled:W}:{srcExtent:l,extent:e,pixelBlock:b}}_fetchRawTile(e,t,i,s){const n=this.rasterInfo.storageInfo.blockBoundary[e];if(!n)return Promise.resolve(null);const{minRow:r,minCol:a,maxCol:u,maxRow:o}=n;if(t<r||i<a||t>o||i>u)return Promise.resolve(null);const l=Je(this.url,s.sliceId),c=`${e}/${t}/${i}`;let f=je(l,s.registryId,c);if(H(f)){const m=new AbortController;f=this.fetchRawTile(e,t,i,N(O({},s),{signal:m.signal})),We(l,s.registryId,c,f,m),f.catch(()=>Yt(l,s.registryId,c))}return s.signal&&lt(s,()=>{Xt(l,s.registryId,c)}),f}_getIndexFromDimensions(e,t){const{extent:i,interval:s,unit:n,values:r}=t;if(r!=null&&r.length)return Array.isArray(r[0])?r.findIndex(l=>l[0]<=e&&l[1]>=e):r.indexOf(e);if(e>i[1])return-1;const a=i[0];let u=-1;if(n==="ISO8601"){var o;switch(((o=t.intervalUnit)==null?void 0:o.toLowerCase())||"seconds"){case"seconds":u=Math.round((e-a)/1e3/s);break;case"minutes":u=Math.round((e-a)/6e4/s);break;case"hours":u=Math.round((e-a)/36e5/s);break;case"days":u=Math.round((e-a)/864e5/s);break;case"years":u=Math.round((new Date(e).getUTCFullYear()-new Date(a).getUTCFullYear())/s);break;case"decades":u=Math.round((new Date(e).getUTCFullYear()-new Date(a).getUTCFullYear())/10/s)}return u}return Math.round((e-a)/s)}_getDimensionValuesCount(e){const{extent:t,interval:i,unit:s,values:n}=e;let r=(n==null?void 0:n.length)||0;if(r)return r;const a=t[0];if(r===0&&s==="ISO8601"){var u;switch(((u=e.intervalUnit)==null?void 0:u.toLowerCase())||"seconds"){case"seconds":r=Math.round((t[1]-t[0])/1e3/i);break;case"minutes":r=Math.round((t[1]-t[0])/6e4/i);break;case"hours":r=Math.round((t[1]-t[0])/36e5/i);break;case"days":r=Math.round((t[1]-t[0])/864e5/i);break;case"years":r=Math.round((new Date(t[1]).getUTCFullYear()-new Date(a).getUTCFullYear())/i);break;case"decades":r=Math.round((new Date(t[1]).getUTCFullYear()-new Date(a).getUTCFullYear())/10/i)}return r}return Math.round((t[1]-t[0])/i)}_getRasterTileAlignmentInfo(e,t){return this._rasterTileAlighmentInfo==null&&(this._rasterTileAlighmentInfo=ni(this.rasterInfo)),P(this._rasterTileAlighmentInfo.pyramidsInfo)?O({startX:t,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform},this._rasterTileAlighmentInfo.pyramidsInfo[e]):null}_getSourceDataInfo(e,t,i,s={}){const n={datumTransformation:s.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0};s.srcResolution&&(n.srcResolution=s.srcResolution,this._updateSourceDataInfo(e,n));const r=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:a,srcHeight:u,pyramidLevel:o}=n,l=a/t,c=u/i,f=o<r&&l*c>=16;if(f||o===r&&(l>ge||c>ge)||a===0||u===0){const m=new z({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference});let h=ai(m,this.rasterInfo.spatialReference,e,n.datumTransformation);const y=!h||s.srcResolution&&h.x+h.y<s.srcResolution.x+s.srcResolution.y;if(f&&s.srcResolution&&y){const p=Math.round(Math.log(Math.max(l,c))/Math.LN2)-1;if(r-o+3>=p){const d=2**p;h={x:s.srcResolution.x*d,y:s.srcResolution.y*d}}}h&&(n.srcResolution=h,this._updateSourceDataInfo(e,n))}return(n.srcWidth/t>ge||n.srcHeight/i>ge)&&(n.srcWidth=0,n.srcHeight=0),n}_updateSourceDataInfo(e,t){t.srcWidth=0,t.srcHeight=0;const i=this.rasterInfo.spatialReference,{srcResolution:s,datumTransformation:n}=t,{pyramidLevel:r,pyramidResolution:a,excessiveReading:u}=Ge(s,this.rasterInfo,this.ioConfig.sampling);if(u)return;let o=t.srcExtent||Re(e,i,n);if(o==null)return;const l=K(this.rasterInfo.transform);l&&(o=l.inverseTransform(o)),t.srcExtent=o;const c=Math.ceil((o.xmax-o.xmin)/a.x-.1),f=Math.ceil((o.ymax-o.ymin)/a.y-.1);t.pyramidLevel=r,t.pyramidResolution=a,t.srcWidth=c,t.srcHeight=f}_getRequestOptionsWithSliceId(e){return P(this.rasterInfo.multidimensionalInfo)&&e.sliceId==null&&(e=N(O({},e),{sliceId:this.getSliceIndex(e.multidimensionalDefinition)})),e}};I([S()],G.prototype,"_rasterTileAlighmentInfo",void 0),I([S($e)],G.prototype,"url",null),I([S({type:String,json:{write:!0}})],G.prototype,"datasetName",void 0),I([S({type:String,json:{write:!0}})],G.prototype,"datasetFormat",void 0),I([S()],G.prototype,"rasterInfo",void 0),I([S()],G.prototype,"ioConfig",void 0),I([S()],G.prototype,"sourceJSON",void 0),G=I([X("esri.layers.support.rasterDatasets.BaseRaster")],G);const oe=G;function fi(e){const t=e.fields,i=e.records,s=t.some(l=>l.name.toLowerCase()==="oid")?"OBJECTID":"OID",n=[{name:s,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map(l=>({name:l.name,type:"esriFieldType"+l.typeName,alias:l.name}))),r=n.map(l=>l.name),a=[];let u=0,o=0;return i.forEach(l=>{const c={};for(c[s]=u++,o=1;o<r.length;o++)c[r[o]]=l[o-1];a.push({attributes:c})}),{displayFieldName:"",fields:n,features:a}}class hi{static get supportedVersions(){return[5]}static parse(t){const i=new DataView(t),s=3&i.getUint8(0);if(s!==3)return{header:{version:s},recordSet:null};const n=i.getUint32(4,!0),r=i.getUint16(8,!0),a=i.getUint16(10,!0),u={version:s,recordCount:n,headerByteCount:r,recordByteCount:a};let o=32;const l=[],c=[];let f;if(s===3){for(;i.getUint8(o)!==13;)f=String.fromCharCode(i.getUint8(o+11)).trim(),l.push({name:Ne(new Uint8Array(t,o,11)),type:f,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(f)],length:i.getUint8(o+16)}),o+=32;if(o+=1,l.length>0)for(;c.length<n&&t.byteLength-o>a;){const m=[];i.getUint8(o)===32?(o+=1,l.forEach(h=>{if(h.type==="C")m.push(Ne(new Uint8Array(t,o,h.length)).trim());else if(h.type==="N")m.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(t,o,h.length)).trim(),10));else if(h.type==="F")m.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(t,o,h.length)).trim()));else if(h.type==="D"){const y=String.fromCharCode.apply(null,new Uint8Array(t,o,h.length)).trim();m.push(new Date(parseInt(y.substring(0,4),10),parseInt(y.substring(4,6),10)-1,parseInt(y.substring(6,8),10)))}o+=h.length}),c.push(m)):o+=a}}return{header:u,fields:l,records:c,recordSet:fi({fields:l,records:c})}}}const te=new Map;te.set("int16","esriFieldTypeSmallInteger"),te.set("int32","esriFieldTypeInteger"),te.set("int64","esriFieldTypeInteger"),te.set("float32","esriFieldTypeSingle"),te.set("float64","esriFieldTypeDouble"),te.set("text","esriFieldTypeString");const Xe=8;let he=class extends oe{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}async open(e){await this.init();const{data:t}=await this.request(this.url+"/conf.json",{signal:e==null?void 0:e.signal});if(!this._validateHeader(t))throw new D("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:i,rasterInfo:s}=this._parseHeader(t);if(s.dataType==="thematic"){const n=await this._fetchAuxiliaryInformation();s.attributeTable=n}this._set("storageInfo",i),this._set("rasterInfo",s),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(e,t,i,s={}){const n=this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(n<0)return null;const r=this._buildCacheFilePath(n,t,i,s.multidimensionalDefinition),a=this._getIndexRecordFromBundle(t,i),u=await this.request(r,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:s.signal});if(!u)return null;const o=new Uint8Array(u.data),l=this._getTileEndAndContentType(o,a);if(l.recordSize===0)return null;const c=await this.request(r,{range:{from:l.position,to:l.position+l.recordSize},responseType:"array-buffer",signal:s.signal});return c?this.decodePixelBlock(c.data,{width:this.rasterInfo.storageInfo.tileInfo.size[0],height:this.rasterInfo.storageInfo.tileInfo.size[1],planes:null,pixelType:null}):null}_validateHeader(e){const t=["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"];return e&&e.type==="RasterInfo"&&!t.some(i=>!e[i])}_parseHeader(e){var t,i;const s=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][e.pixelType],{bandCount:n,histograms:r,colormap:a,blockWidth:u,blockHeight:o,firstPyramidLevel:l,maximumPyramidLevel:c}=e,f=e.statistics&&e.statistics.map(B=>({min:B.min,max:B.max,avg:B.mean,stddev:B.standardDeviation,median:B.median,mode:B.mode})),m=e.extent.spatialReference,h=(t=e.geodataXform)==null?void 0:t.spatialReference,y=new U(m!=null&&m.wkid||m!=null&&m.wkt?m:h);let p=new J({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:y});const d=new z({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:y}),g=Math.round((p.xmax-p.xmin)/d.x),x=Math.round((p.ymax-p.ymin)/d.y),w=this._parseTransform(e.geodataXform),_=w?p:null;w&&(p=w.forwardTransform(p),d.x=(p.xmax-p.xmin)/g,d.y=(p.ymax-p.ymin)/x);const v=(i=e.properties)!=null?i:{},T=e.format.toLowerCase().replace("cache/",""),b=new z(e.origin.x,e.origin.y,y);let C,R,M,A;if(a&&a.colors)for(C=[],R=0;R<a.colors.length;R++)M=a.colors[R],A=a.values?a.values[R]:R,C.push([A,255&M,M<<16>>>24,M<<8>>>24,M>>>24]);const F=e.LODInfos,W=[];for(R=0;R<F.levels.length;R++)W.push({level:F.levels[R],resolution:F.resolutions[R],scale:96/.0254*F.resolutions[R]});const E=new ne({dpi:96,lods:W,format:T,origin:b,size:[u,o],spatialReference:y}),re={recordSize:Xe,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*Xe+64},q=[{maxCol:Math.ceil(g/u)-1,maxRow:Math.ceil(x/o)-1,minCol:0,minRow:0}];let k=2;if(c>0)for(R=0;R<c;R++)q.push({maxCol:Math.ceil(g/k/u)-1,maxRow:Math.ceil(x/k/o)-1,minCol:0,minRow:0}),k*=2;const Q=e.mdInfo;return{storageInfo:re,rasterInfo:new ae({width:g,height:x,pixelType:s,bandCount:n,extent:p,nativeExtent:_,transform:w,spatialReference:y,pixelSize:d,keyProperties:v,statistics:f,histograms:r,multidimensionalInfo:Q,colormap:C,storageInfo:new fe({blockWidth:u,blockHeight:o,pyramidBlockWidth:u,pyramidBlockHeight:o,origin:b,tileInfo:E,firstPyramidLevel:l,maximumPyramidLevel:c,blockBoundary:q})})}}_parseTransform(e){var t,i;if(!oi(e))throw new D("cloudraster:open","the data contains unsupported geodata transform types");const s=li(e);if(s.type==="identity")return null;if(s.type!=="polynomial"||(t=s.forwardCoefficients)==null||!t.length||(i=s.inverseCoefficients)==null||!i.length)throw new D("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return s}async _fetchAuxiliaryInformation(e){const t=this.request(this.url+"/conf.vat.json",{signal:e}).then(r=>r.data).catch(()=>null),i=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:e}).then(r=>r.data).catch(()=>null),s=await Promise.all([t,i]);let n;if(s[0]){let r=s[0].fields;const a=s[0].values;if(r&&a){r=r.map(o=>({type:o.name==="OID"?"esriFieldTypeOID":te.get(o.type),name:o.name,alias:o.alias||o.name}));const u=a.map(o=>({attributes:o}));r&&a&&(n={fields:r,features:u})}}return!n&&s[1]&&(n=hi.parse(s[1]).recordSet),Ee.fromJSON(n)}_buildCacheFilePath(e,t,i,s){const n=this.storageInfo.packetSize,r=Math.floor(t/n)*n,a=Math.floor(i/n)*n,u="R"+this._toHexString4(r)+"C"+this._toHexString4(a);let o="L";o+=e>=10?e.toString():"0"+e.toString();const{multidimensionalInfo:l}=this.rasterInfo,c=s==null?void 0:s[0];if(!P(l)||!c)return`${this.url}/_alllayers/${o}/${u}.bundle`;let f=l.variables.filter(h=>h.name===c.variableName)[0].dimensions[0].values.indexOf(c.values[0]).toString(16);const m=4-f.length;for(let h=0;h<m;h++)f="0"+f;return f="S"+f,`${this.url}/_alllayers/${c.variableName}/${f}/${o}/${u}.bundle`}_getIndexRecordFromBundle(e,t){const i=this.storageInfo.packetSize,s=i*(e%i)+t%i;if(s<0)throw"Invalid level / row / col";return 20+s*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,t){const i=e.subarray(t,t+8);let s,n=0;for(s=0;s<5;s++)n|=(255&i[s])<<8*s;const r=1099511627775&n;for(n=0,s=5;s<8;s++)n|=(255&i[s])<<8*(s-5);return{position:r,recordSize:1099511627775&n}}_toHexString4(e){let t=e.toString(16);if(t.length!==4){let i=4-t.length;for(;i-- >0;)t="0"+t}return t}};I([S({readOnly:!0})],he.prototype,"storageInfo",void 0),I([S({type:String,json:{write:!0}})],he.prototype,"datasetFormat",void 0),he=I([X("esri.layers.support.rasterDatasets.CloudRaster")],he);const di=he;let de=class extends oe{constructor(){super(...arguments),this.datasetFormat="MEMORY"}async open(e){var t;await this.init();const{pixelBlock:i,statistics:s,histograms:n,name:r,keyProperties:a,nativeExtent:u,transform:o}=this.data,{width:l,height:c,pixelType:f}=i,m=this.data.extent||new J({xmin:-.5,ymin:.5,xmax:l-.5,ymax:c-.5,spatialReference:new U({wkid:3857})}),h=(t=this.data.isPseudoSpatialReference)!=null?t:!this.data.extent,y={x:m.width/l,y:m.height/c},p=new ae({width:l,height:c,pixelType:f,extent:m,nativeExtent:u,transform:o,pixelSize:y,spatialReference:m.spatialReference,bandCount:3,keyProperties:a||{},statistics:s,isPseudoSpatialReference:h,histograms:n});this.createRemoteDatasetStorageInfo(p,512,512),this._set("rasterInfo",p),this.updateTileInfo(),await this._buildInMemoryRaster(i,{width:512,height:512},e),this.datasetName=r,this.url="/InMemory/"+r}fetchRawTile(e,t,i,s={}){const n=this._pixelBlockTiles.get(`${e}/${t}/${i}`);return Promise.resolve(n)}async _buildInMemoryRaster(e,t,i){const s=this.rasterInfo.storageInfo.maximumPyramidLevel,n=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:e,tileSize:t,maximumPyramidLevel:s},i):Promise.resolve(Qt(e,t,s)),r=P(this.rasterInfo.statistics),a=P(this.rasterInfo.histograms),u=r&&a?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:e},i):Promise.resolve(Zt(e)),o=await Ae([n,u]);if(!o[0].value&&o[1].value)throw new D("inmemory-raster:open","failed to build in memory raster");var l,c;this._pixelBlockTiles=o[0].value,r||(this.rasterInfo.statistics=(l=o[1].value)==null?void 0:l.statistics),a&&(this.rasterInfo.histograms=(c=o[1].value)==null?void 0:c.histograms)}};I([S({type:String,json:{write:!0}})],de.prototype,"datasetFormat",void 0),I([S()],de.prototype,"data",void 0),de=I([X("esri.layers.support.rasterDatasets.InMemoryRaster")],de);const mi=de;function le(e,t){if(!e||!t)return[];let i=t;t.indexOf("/")>-1?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const s=[];if(t){const r=le(e,i);for(let a=0;a<r.length;a++)le(r[a],t).forEach(u=>s.push(u));return s}const n=e.getElementsByTagNameNS("*",i);if(!n||n.length===0)return[];for(let r=0;r<n.length;r++)s.push(n[r]||n.item[r]);return s}function j(e,t){if(!e||!t)return null;let i=t;t.indexOf("/")>-1?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const s=le(e,i);return s.length>0?t?j(s[0],t):s[0]:null}function V(e,t=null){const i=t?j(e,t):e;let s;return i?(s=i.textContent||i.nodeValue,s?s.trim():null):null}function pi(e,t){const i=le(e,t),s=[];let n;for(let r=0;r<i.length;r++)n=i[r].textContent||i[r].nodeValue,n&&(n=n.trim(),n!==""&&s.push(n));return s}function xe(e,t){return pi(e,t).map(i=>Number(i))}function ie(e,t){const i=V(e,t);return Number(i)}function _e(e,t){var i;const s=e==null||(i=e.nodeName)==null?void 0:i.toLowerCase(),n=t.toLowerCase();return s.slice(s.lastIndexOf(":")+1)===n}function Ke(e,t){if(!e||!t)return null;const i=[];for(let s=0;s<e.length;s++)i.push(e[s]),i.push(t[s]);return i}function yi(e){var t;const i=j(e,"GeodataXform"),s=Ie(ie(i,"SpatialReference/WKID")||V(i,"SpatialReference/WKT"));if(i.getAttribute("xsi:type")!=="typens:PolynomialXform")return{spatialReference:s,transform:null};const n=(t=ie(i,"PolynomialOrder"))!=null?t:1,r=xe(i,"CoeffX/Double"),a=xe(i,"CoeffY/Double"),u=xe(i,"InverseCoeffX/Double"),o=xe(i,"InverseCoeffY/Double"),l=Ke(r,a),c=Ke(u,o);return{spatialReference:s,transform:new Ce({spatialReference:s,polynomialOrder:n,forwardCoefficients:l,inverseCoefficients:c})}}function gi(e){var t;const i=ie(e,"NoDataValue"),s=j(e,"Histograms/HistItem"),n=ie(s,"HistMin"),r=ie(s,"HistMax"),a=ie(s,"BucketCount"),u=(t=V(s,"HistCounts"))==null?void 0:t.split("|").map(h=>Number(h));let o,l,c,f;le(e,"Metadata/MDI").forEach(h=>{var y;const p=Number((y=h.textContent)!=null?y:h.nodeValue);switch(h.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":o=p;break;case"STATISTICS_MAXIMUM":l=p;break;case"STATISTICS_MEAN":c=p;break;case"STATISTICS_STDDEV":f=p}});const m=ie(e,"Metadata/SourceBandIndex");return{noDataValue:i,histogram:u!=null&&u.length&&o!=null&&l!=null?{min:n,max:r,size:a||u.length,counts:u}:null,sourceBandIndex:m,statistics:o!=null&&l!=null?{min:o,max:l,avg:c,stddev:f}:null}}function Ie(e){if(!e)return null;let t=Number(e);if(!isNaN(t)&&t!==0)return new U({wkid:t});if((e=String(e)).startsWith("COMPD_CS")){if(!e.includes("VERTCS")||!e.includes("GEOGCS")&&!e.startsWith("PROJCS"))return null;const i=e.indexOf("VERTCS"),s=e.indexOf("PROJCS"),n=s>-1?s:e.indexOf("GEOGCS");if(n===-1)return null;const r=e.slice(n,e.lastIndexOf("]",i)+1).trim(),a=e.slice(i,e.lastIndexOf("]")).trim();t=ke(r);const u=new U(t?{wkid:t}:{wkt:r}),o=ke(a);return o&&(u.vcsWkid=o),u}return e.startsWith("GEOGCS")||e.startsWith("PROJCS")?(t=ke(e),new U(t!==0?{wkid:t}:{wkt:e})):null}function ke(e){var t;const i=e.replace(/\]/g,"[").replace(/\"/g,"").split("[").map(r=>r.trim()).filter(r=>r!==""),s=i[i.length-1].split(","),n=(t=s[0])==null?void 0:t.toLowerCase();if((n==="epsg"||n==="esri")&&e.endsWith('"]]')){const r=Number(s[1]);if(!isNaN(r)&&r!==0)return r}return 0}function Me(e){var t;if((e==null||(t=e.documentElement.tagName)==null?void 0:t.toLowerCase())!=="pamdataset")return{};const i={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};e.documentElement.childNodes.forEach(n=>{if(n.nodeType===1){if(_e(n,"SRS")){if(!i.spatialReference){const r=V(n);i.spatialReference=Ie(r)}}else if(_e(n,"Metadata"))if(n.getAttribute("domain")==="xml:ESRI"){const{spatialReference:r,transform:a}=yi(n);i.transform=a,i.spatialReference||(i.spatialReference=r)}else le(n,"MDI").forEach(r=>i.metadata[r.getAttribute("key")]=V(r));else if(_e(n,"PAMRasterBand")){const r=gi(n);r.sourceBandIndex!=null&&i.rasterBands[r.sourceBandIndex]==null?i.rasterBands[r.sourceBandIndex]=r:i.rasterBands.push(r)}}});const s=i.rasterBands;if(s){const n=!!s[0].statistics;i.statistics=n?s.map(a=>a.statistics):null;const r=!!s[0].histogram;i.histograms=r?s.map(a=>a.histogram):null}return i}let we=class extends oe{async open(e){await this.init();const t=await this._fetchData(e);let{spatialReference:i,statistics:s,histograms:n,transform:r}=await this._fetchAuxiliaryData(e);const a=!i;a&&(i=new U({wkid:3857})),n!=null&&n.length&&s==null&&(s=Se(n));const{width:u,height:o}=t;let l=new J({xmin:-.5,ymin:.5-o,xmax:u-.5,ymax:.5,spatialReference:i});const c=r?r.forwardTransform(l):l;let f=!0;if(r){const h=r.forwardCoefficients;f=h&&h[1]===0&&h[2]===0,f&&(r=null,l=c)}const m=new mi({data:{extent:c,nativeExtent:l,transform:r,pixelBlock:t,statistics:s,histograms:n,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:a}});await m.open(),this._set("rasterInfo",m.rasterInfo),this._inMemoryRaster=m}fetchRawTile(e,t,i,s={}){return this._inMemoryRaster.fetchRawTile(e,t,i,s)}async _fetchData(e){const{data:t}=await this.request(this.url,{responseType:"array-buffer",signal:e==null?void 0:e.signal}),i=Jt(t).toUpperCase();if(i!=="JPG"&&i!=="PNG"&&i!=="GIF"&&i!=="BMP")throw new D("image-aux-raster:open","the data is not a supported format");return this._set("datasetFormat",i),await this.decodePixelBlock(t,{format:"jpg",width:1,height:1,useCanvas:!0})}async _fetchAuxiliaryData(e){var t,i;const s=K(e==null?void 0:e.signal),n=(t=this.ioConfig.skipExtensions)!=null?t:[],r=n.indexOf("aux.xml")>-1?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:s}),a=this.datasetFormat,u=a==="JPG"?"jgw":a==="PNG"?"pgw":a==="BMP"?"bpw":null,o=n.indexOf(u)>-1?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+u,{responseType:"text",signal:s}),l=await Ae([r,o]);if(s!=null&&s.aborted)throw ut();const c=Me((i=l[0].value)==null?void 0:i.data);if(!c.transform){const f=l[1].value?l[1].value.data.split(`
`).slice(0,6).map(m=>Number(m)):null;c.transform=(f==null?void 0:f.length)===6?new Ce({forwardCoefficients:[f[4],f[5],f[0],-f[1],f[2],-f[3]]}):null}return c}};I([S({type:String,json:{write:!0}})],we.prototype,"datasetFormat",void 0),we=I([X("esri.layers.support.rasterDatasets.ImageAuxRaster")],we);const ve=we;let me=class extends oe{constructor(){super(...arguments),this._levelOffset=0,this._slices=null,this._tilemapCache=null,this.datasetFormat="RasterTileServer"}async open(e){await this.init();const t=e&&e.signal,i=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:t});i.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const s=i.data;if(this.sourceJSON=s,!s)throw new D("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!s.tileInfo)throw new D("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();const n=["jpg","jpeg","png","png8","png24","png32","mixed"];this.tileType=s.cacheType,this.tileType==null&&(n.indexOf(s.tileInfo.format.toLowerCase())>-1?this.tileType="Map":s.tileInfo.format.toLowerCase()==="lerc"?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=s.name.slice(s.name.indexOf("/")+1);const r=await this._fetchRasterInfo({signal:t});if(!P(r))throw new D("image-server-raster:open","cannot initialize image service");{const a=this.tileType==="Map"?ct(s.tileInfo,s):ne.fromJSON(s.tileInfo),{extent:u,pixelSize:o}=r,l=.5/r.width*o.x;let c,f;const m=a.lodAt(Math.max.apply(null,a.lods.map(v=>v.level)));this.tileType!=="Map"&&s.maxScale!==0&&(this.tileType==="Raster"?(c=a.lods.filter(v=>v.resolution===o.x)[0],c||(c=a.lods[a.lods.length-1])):(c=a.lods.filter(v=>Math.abs(v.scale-s.maxScale)<l)[0],c||(c=a.lods.filter(v=>v.scale>s.maxScale).sort((v,T)=>v.scale>T.scale?1:-1)[0])),o.x=o.y=c.resolution,r.width=Math.ceil((u.xmax-u.xmin)/o.x-.1),r.height=Math.ceil((u.ymax-u.ymin)/o.y-.1)),c||(c=m);const h=a.lodAt(Math.min.apply(null,a.lods.map(v=>v.level)));this.tileType==="Map"?this._levelOffset=a.lods[0].level:s.minScale!==0&&this.tileType==="Elevation"&&(f=a.lods.filter(v=>Math.abs(v.scale-s.minScale)<l)[0],this._levelOffset=f.level-h.level),f||(f=h);const y=Math.max(o.x,o.y);(Math.abs(o.x-o.y)>l||!a.lods.some(v=>Math.abs(v.resolution-y)<l))&&(o.x=o.y=c.resolution,r.width=Math.ceil((u.xmax-u.xmin)/o.x-.1),r.height=Math.ceil((u.ymax-u.ymin)/o.y-.1));const p=c.level-f.level,[d,g]=a.size,x=[];a.lods.forEach(v=>{v.level>=f.level&&v.level<=c.level&&x.push({x:v.resolution,y:v.resolution})}),x.sort((v,T)=>v.x-T.x);const w=this.computeBlockBoundary(u,d,g,a.origin,x,p),_=x.length>1?x.slice(1):null;r.storageInfo=new fe({blockWidth:a.size[0],blockHeight:a.size[1],pyramidBlockWidth:a.size[0],pyramidBlockHeight:a.size[1],pyramidResolutions:_,compression:a.format,origin:a.origin,firstPyramidLevel:1,maximumPyramidLevel:p,tileInfo:a,blockBoundary:w}),this._fixGCSShift(r),this._set("rasterInfo",r)}if(s.capabilities.toLowerCase().indexOf("tilemap")>-1){const a={tileInfo:r.storageInfo.tileInfo,parsedUrl:ft(this.url),url:this.url,tileServers:[],type:"tile"};this._tilemapCache=new ht({layer:a})}}async fetchRawTile(e,t,i,s={}){if(this._slices&&s.sliceId==null)return null;const{storageInfo:n,extent:r}=this.rasterInfo,a=n.maximumPyramidLevel-e+this._levelOffset,u=`${this.url}/tile/${a}/${t}/${i}`,o=this._slices?{sliceId:s.sliceId||0}:null,{data:l}=await this.request(u,{query:o,responseType:"array-buffer",signal:s.signal});if(!l)return null;const c=await this.decodePixelBlock(l,{width:n.tileInfo.size[0],height:n.tileInfo.size[1],planes:null,pixelType:null,isPoint:this.tileType==="Elevation"}),f=n.blockBoundary[e];if(n.compression!=="jpg"||i>f.minCol&&i<f.maxCol&&t>f.minRow&&t<f.maxRow)return c;const{origin:m,blockWidth:h,blockHeight:y}=n,{x:p,y:d}=this.getPyramidPixelSize(e),g=Math.round((r.xmin-m.x)/p)%h,x=Math.round((r.xmax-m.x)/p)%h,w=Math.round((m.y-r.ymax)/d)%y,_=Math.round((m.y-r.ymin)/d)%y,v=i===f.minCol?g:0,T=t===f.minRow?w:0,b=i===f.maxCol?x:h,C=t===f.maxRow?_:y;return ei(c,{x:v,y:T},{width:b-v,height:C-T}),c}getSliceIndex(e){if(!this._slices||H(e)||e.length===0)return null;const t=e;for(let i=0;i<this._slices.length;i++){const s=this._slices[i].multidimensionalDefinition;if(s.length===t.length&&!s.some(n=>{const r=t.filter(a=>n.variableName===a.variableName&&a.dimensionName===n.dimensionName)[0];return r?(Array.isArray(n.values[0])?`${n.values[0][0]}-${n.values[0][1]}`:n.values[0])!==(Array.isArray(r.values[0])?`${r.values[0][0]}-${r.values[0][1]}`:r.values[0]):!0}))return i}return null}async fetchVariableStatisticsHistograms(e,t){const i=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then(r=>{var a;return(a=r.data)==null?void 0:a.statistics}),s=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then(r=>{var a;return(a=r.data)==null?void 0:a.histograms}),n=await Promise.all([i,s]);return n[0]&&n[0].forEach(r=>{r.avg=r.mean,r.stddev=r.standardDeviation}),{statistics:n[0]||null,histograms:n[1]||null}}async computeBestPyramidLevelForLocation(e,t={}){if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,K(t.datumTransformation));if(i===null)return null;let s=0;const{maximumPyramidLevel:n}=this.rasterInfo.storageInfo;let r=n-s+this._levelOffset;const a=i.srcLocation;for(;r>=0;){try{if(await this._tilemapCache.fetchAvailability(r,i.row,i.col,t)==="available")break}catch{}if(r--,s++,i=this.identifyPixelLocation(a,s,K(t.datumTransformation)),i===null)return null}return r===-1||i==null?null:s}async _fetchRasterInfo(e){const t=this.sourceJSON,i=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),s=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),n=U.fromJSON(t.spatialReference||t.extent.spatialReference);if(this.tileType==="Map")return new ae({width:i,height:s,bandCount:3,extent:J.fromJSON(t.extent),spatialReference:n,pixelSize:new z({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:n}),pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}});const{slice:r,signal:a}=e,u=!!t.hasRasterAttributeTable&&this.request(this.url+"/rasterAttributeTable",{query:{slice:r,f:"json"},signal:a}).then(h=>Ee.fromJSON(h.data)).catch(()=>null),o=!!t.hasColormap&&this.request(this.url+"/colormap",{query:{slice:r,f:"json"},signal:a}).then(h=>{var y;return(y=h.data)==null?void 0:y.colormap}),l=!!t.hasHistograms&&this.request(this.url+"/histograms",{query:{slice:r,f:"json"},signal:a}).then(h=>{var y;return(y=h.data)==null?void 0:y.histograms}),c=this.request(this.url+"/keyProperties",{query:{f:"json"},signal:a}).then(h=>h.data).catch(()=>{}),f=!!t.hasMultidimensions&&this._fetchMultidimensionalInfo(),m=!!t.hasMultidimensions&&this.request(this.url+"/slices",{query:{f:"json"},signal:a}).then(h=>h.data&&h.data.slices).catch(()=>{});return Promise.all([u,o,l,c,f,m]).then(h=>{let y=null;if(t.minValues&&t.minValues.length===t.bandCount){y=[];for(let p=0;p<t.minValues.length;p++)y.push({min:t.minValues[p],max:t.maxValues[p],avg:t.meanValues[p],stddev:t.stdvValues[p]})}return this._slices=h[5]||null,new ae({width:i,height:s,bandCount:t.bandCount,extent:J.fromJSON(t.extent),spatialReference:n,pixelSize:new z({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:n}),pixelType:t.pixelType.toLowerCase(),statistics:y,attributeTable:h[0]||null,colormap:h[1]||null,histograms:h[2]||null,keyProperties:h[3]||{},multidimensionalInfo:h[4]||null})})}async _fetchMultidimensionalInfo(e){var t;const i=await this.request(this.url+"/multidimensionalInfo",{query:{f:"json"},signal:e}).then(s=>{var n;return(n=s.data)==null?void 0:n.multidimensionalInfo});return(t=i.variables)!=null&&t.length&&i.variables.forEach(s=>{var n;(n=s.statistics)!=null&&n.length&&s.statistics.forEach(r=>{r.avg=r.mean,r.stddev=r.standardDeviation})}),i}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}_fixGCSShift(e){const{extent:t,spatialReference:i}=e;t.xmin===0&&t.xmax===360&&i.wkid&&i.isGeographic&&(e.nativeExtent=e.extent,e.transform=new ui,e.extent=e.transform.forwardTransform(t))}};I([S({type:String,json:{write:!0}})],me.prototype,"datasetFormat",void 0),I([S()],me.prototype,"tileType",void 0),me=I([X("esri.layers.support.rasterDatasets.ImageServerRaster")],me);const xi=me,Y=new Map;Y.set("Int8","s8"),Y.set("UInt8","u8"),Y.set("Int16","s16"),Y.set("UInt16","u16"),Y.set("Int32","s32"),Y.set("UInt32","u32"),Y.set("Float32","f32"),Y.set("Float64","f32"),Y.set("Double64","f32");const ee=new Map;ee.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),ee.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),ee.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),ee.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let ue=class extends oe{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(e){var t;await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const i=e?K(e.signal):null,s=await this.request(this.url,{responseType:"xml",signal:i}),{rasterInfo:n,files:r}=this._parseHeader(s.data);if(((t=this.ioConfig.skipExtensions)==null?void 0:t.indexOf("aux.xml"))===-1){const g=await this._fetchAuxiliaryData(e);var a;g!=null&&(n.statistics=(a=g.statistics)!=null?a:n.statistics,n.histograms=g.histograms,g.histograms&&!P(n.statistics)&&(n.statistics=Se(g.histograms)))}this._set("rasterInfo",n),this._files=r;const u=await this.request(r.index,{responseType:"array-buffer",signal:i});this._storageIndex=this._parseIndex(u.data);const{blockWidth:o,blockHeight:l}=this.rasterInfo.storageInfo,c=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:f,height:m}=this.rasterInfo,h=[],y=this._getBandSegmentCount();let p=0,d=-1;for(;p<this._storageIndex.length;){d++;const g=Math.ceil(f/o/c**d)-1,x=Math.ceil(m/l/c**d)-1;p+=1*g*(1*x)*y*4,h.push({maxRow:x,maxCol:g,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=h,d>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=d),this.updateTileInfo()}async fetchRawTile(e,t,i,s={}){const{blockWidth:n,blockHeight:r,blockBoundary:a}=this.rasterInfo.storageInfo,u=a[e];if(!u||u.maxRow<t||u.maxCol<i||u.minRow>t||u.minCol>i)return null;const{bandCount:o,pixelType:l}=this.rasterInfo,{ranges:c,actualTileWidth:f,actualTileHeight:m}=this._getTileLocation(e,t,i);if(!c||c.length===0)return null;if(c[0].from===0&&c[0].to===0){const R=new Uint8Array(n*r);return new ti({width:n,height:r,pixels:null,mask:R,validPixelCount:0})}const{bandIds:h}=this.ioConfig,y=this._getBandSegmentCount(),p=[];let d=0;for(d=0;d<y;d++)(!h||h.indexOf[d]>-1)&&p.push(this.request(this._files.data,{range:{from:c[d].from,to:c[d].to},responseType:"array-buffer",signal:s.signal}));const g=await Promise.all(p),x=g.map(R=>R.data.byteLength).reduce((R,M)=>R+M),w=new Uint8Array(x);let _=0;for(d=0;d<y;d++)w.set(new Uint8Array(g[d].data),_),_+=g[d].data.byteLength;const v=ee.get(this.rasterInfo.storageInfo.compression).decoderFormat,T=await this.decodePixelBlock(w.buffer,{width:n,height:r,format:v,planes:(h==null?void 0:h.length)||o,pixelType:l});if(P(this.rasterInfo.noDataValue)&&v!=="lerc"&&!T.mask){const R=this.rasterInfo.noDataValue[0];if(R!=null){const M=T.width*T.height,A=new Uint8Array(M);if(Math.abs(R)>1e24)for(d=0;d<M;d++)Math.abs((T.pixels[0][d]-R)/R)>1e-6&&(A[d]=1);else for(d=0;d<M;d++)T.pixels[0][d]!==R&&(A[d]=1);T.mask=A}}let b=0,C=0;if(f!==n||m!==r){let R=T.mask;if(R)for(d=0;d<r;d++)if(C=d*n,d<m)for(b=f;b<n;b++)R[C+b]=0;else for(b=0;b<n;b++)R[C+b]=0;else for(R=new Uint8Array(n*r),T.mask=R,d=0;d<m;d++)for(C=d*n,b=0;b<f;b++)R[C+b]=1}return T}_parseIndex(e){if(e.byteLength%16>0)throw"invalid array buffer must be multiples of 16";let t,i,s,n,r,a;if(jt){for(i=new Uint8Array(e),n=new ArrayBuffer(e.byteLength),s=new Uint8Array(n),r=0;r<e.byteLength/4;r++)for(a=0;a<4;a++)s[4*r+a]=i[4*r+3-a];t=new Uint32Array(n)}else t=new Uint32Array(e);return t}_getBandSegmentCount(){return ee.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(e,t,i){const{blockWidth:s,blockHeight:n,pyramidScalingFactor:r}=this.rasterInfo.storageInfo,{width:a,height:u}=this.rasterInfo,o=this._getBandSegmentCount();let l,c,f,m=0,h=0;for(f=0;f<e;f++)h=r**f,l=Math.ceil(a/s/h),c=Math.ceil(u/n/h),m+=l*c;h=r**e,l=Math.ceil(a/s/h),c=Math.ceil(u/n/h),m+=t*l+i,m*=4*o;const y=this._storageIndex.subarray(m,m+4*o);let p=0,d=0;const g=[];for(let x=0;x<o;x++)p=y[4*x+0]*2**32+y[4*x+1],d=p+y[4*x+2]*2**32+y[4*x+3],g.push({from:p,to:d});return{ranges:g,actualTileWidth:i<l-1?s:Math.ceil(a/h)-s*(l-1),actualTileHeight:t<c-1?n:Math.ceil(u/h)-n*(c-1)}}_parseHeader(e){const t=j(e,"MRF_META/Raster");if(!t)throw new D("mrf:open","not a valid MRF format");const i=j(t,"Size"),s=parseInt(i.getAttribute("x"),10),n=parseInt(i.getAttribute("y"),10),r=parseInt(i.getAttribute("c"),10),a=(V(t,"Compression")||"none").toLowerCase();if(!ee.has(a))throw new D("mrf:open","currently does not support compression "+a);const u=V(t,"DataType")||"UInt8",o=Y.get(u);if(o==null)throw new D("mrf:open","currently does not support pixel type "+u);const l=j(t,"PageSize"),c=parseInt(l.getAttribute("x"),10),f=parseInt(l.getAttribute("y"),10),m=j(t,"DataValues");let h,y;if(m&&(y=m.getAttribute("NoData"),y!=null&&(h=y.trim().split(" ").map(E=>parseFloat(E)))),j(e,"MRF_META/CachedSource"))throw new D("mrf:open","currently does not support MRF referencing other data files");const p=j(e,"MRF_META/GeoTags"),d=j(p,"BoundingBox");if(d==null)throw new D("mrf:open","missing node MRF_META/GeoTags/BoundingBox");const g=parseFloat(d.getAttribute("minx")),x=parseFloat(d.getAttribute("miny")),w=parseFloat(d.getAttribute("maxx")),_=parseFloat(d.getAttribute("maxy")),v=V(p,"Projection")||"",T=V(e,"datafile"),b=V(e,"IndexFile");let C;if(v!=="LOCAL_CS[]")if(v.toLowerCase().startsWith("epsg:")){const E=Number(v.slice(5));isNaN(E)||E===0||(C=new U({wkid:E}))}else C=Ie(v);const R=new J(g,x,w,_);R.spatialReference=C;const M=j(e,"MRF_META/Rsets"),A=parseInt(M&&M.getAttribute("scale")||"2",10),F=new fe({origin:new z({x:R.xmin,y:R.ymax,spatialReference:C}),blockWidth:c,blockHeight:f,pyramidBlockWidth:c,pyramidBlockHeight:f,compression:a,pyramidScalingFactor:A}),W=new z({x:(w-g)/s,y:(_-x)/n,spatialReference:C});return{rasterInfo:new ae({width:s,height:n,extent:R,spatialReference:C,bandCount:r,pixelType:o,pixelSize:W,noDataValue:h,storageInfo:F}),files:{mrf:this.url,index:b||this.url.replace(".mrf",".idx"),data:T||this.url.replace(".mrf",ee.get(a).blobExtension)}}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:e==null?void 0:e.signal});return Me(t)}catch{return null}}};I([S()],ue.prototype,"_files",void 0),I([S()],ue.prototype,"_storageIndex",void 0),I([S({type:String,json:{write:!0}})],ue.prototype,"datasetFormat",void 0),ue=I([X("esri.layers.support.rasterIO.MRFRaster")],ue);const Ii=ue,Qe=function(e,t){const i=e.get(t);return i&&i.values},be=function(e,t){const i=e.get(t);return i&&i.values[0]};let se=class extends oe{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(e){var t,i,s;await this.init();const n=e?K(e.signal):null,{data:r}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:n});if(!r)throw new D("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{littleEndian:a,firstIFD:u,isBigTiff:o}=Wt(r),l=[];await this.readIFDs(l,r,a,u,0,o?8:4,n);const c=qt(l),{width:f,height:m,tileWidth:h,tileHeight:y,planes:p,pixelType:d,compression:g,firstPyramidLevel:x,maximumPyramidLevel:w,pyramidBlockWidth:_,pyramidBlockHeight:v,tileBoundary:T,affine:b,metadata:C}=c,R=((t=c.extent.spatialReference)==null?void 0:t.wkt)||((i=c.extent.spatialReference)==null?void 0:i.wkid);let M=Ie(R),A=!1;M==null&&(A=!0,M=new U({wkid:3857}));const F=new J(N(O({},c.extent),{spatialReference:M})),W=new z(F?{x:F.xmin,y:F.ymax,spatialReference:M}:{x:0,y:0}),E=new fe({blockWidth:h,blockHeight:y,pyramidBlockWidth:_,pyramidBlockHeight:v,compression:g,origin:W,firstPyramidLevel:x,maximumPyramidLevel:w,blockBoundary:T}),re=new z({x:(F.xmax-F.xmin)/f,y:(F.ymax-F.ymin)/m,spatialReference:M}),q=C?{BandProperties:C.bandProperties,DataType:C.dataType}:{},k=new ae({width:f,height:m,bandCount:p,pixelType:d,compression:g,pixelSize:re,storageInfo:E,spatialReference:M,isPseudoSpatialReference:A,keyProperties:q,extent:F,statistics:C?C.statistics:null});if(b!=null&&b.length&&(k.nativeExtent=new J({xmin:-.5,ymin:.5-m,xmax:f-.5,ymax:.5,spatialReference:M}),k.transform=new Ce({polynomialOrder:1,forwardCoefficients:[b[2]+b[0]/2,b[5]-b[3]/2,b[0],b[3],-b[1],-b[4]]}),k.extent=k.transform.forwardTransform(k.nativeExtent),k.pixelSize=new z({x:(F.xmax-F.xmin)/f,y:(F.ymax-F.ymin)/m,spatialReference:M}),E.origin.x=-.5,E.origin.y=.5),(s=this.ioConfig.skipExtensions)==null||!s.includes("aux.xml")){const B=await this._fetchAuxiliaryData(e);if(B!=null){var Q;if(k.statistics=(Q=B.statistics)!=null?Q:k.statistics,k.histograms=B.histograms,B.histograms&&!P(k.statistics)&&(k.statistics=Se(B.histograms)),B.transform&&!b){k.transform=B.transform,k.nativeExtent=k.extent;const Z=k.transform.forwardTransform(k.nativeExtent);k.pixelSize=new z({x:(Z.xmax-Z.xmin)/f,y:(Z.ymax-Z.ymin)/m,spatialReference:M}),k.extent=Z}k.spatialReference||(k.spatialReference=B.spatialReference)}}if(this._set("rasterInfo",k),this._headerInfo=O({littleEndian:a,isBigTiff:o,ifds:l},c),!this._headerInfo.isSupported)throw new D("tiffraster:open","this tiff is not supported: "+this._headerInfo.message);this.updateTileInfo()}async fetchRawTile(e,t,i,s={}){var n;if((n=this._headerInfo)==null||!n.isSupported||this.isBlockOutside(e,t,i))return null;const r=this.getTileLocation(e,t,i);if(!r)return null;const{ranges:a,actualTileWidth:u,actualTileHeight:o,ifd:l}=r,c=a.map(T=>this.request(this.url,{range:T,responseType:"array-buffer",signal:s.signal})),f=await Promise.all(c),m=f.map(T=>T.data.byteLength).reduce((T,b)=>T+b),h=f.length===1?f[0].data:new ArrayBuffer(m),y=[0],p=[0];if(f.length>1){const T=new Uint8Array(h);for(let b=0,C=0;b<f.length;b++){const R=f[b].data;T.set(new Uint8Array(R),C),y[b]=C,C+=R.byteLength,p[b]=R.byteLength}}const{blockWidth:d,blockHeight:g}=this.getBlockWidthHeight(e),x=await this.decodePixelBlock(h,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:l,offsets:y,sizes:p},width:d,height:g,planes:null,pixelType:null});let w,_,v;if(u!==d||o!==g){let T=x.mask;if(T)for(w=0;w<g;w++)if(v=w*d,w<o)for(_=u;_<d;_++)T[v+_]=0;else for(_=0;_<d;_++)T[v+_]=0;else for(T=new Uint8Array(d*g),x.mask=T,w=0;w<o;w++)for(v=w*d,_=0;_<u;_++)T[v+_]=1}return x}async readIFDs(e,t,i,s,n,r=4,a){if(!s)return null;(s>=t.byteLength||s<0)&&(t=(await this.request(this.url,{range:{from:s+n,to:s+n+this._bufferSize},responseType:"array-buffer",signal:a})).data,n=s+n,s=0);const u=await this.readIFD(t,i,s,n,ye.TIFF_TAGS,r,a);if(e.push(u.ifd),!u.nextIFD)return null;await this.readIFDs(e,t,i,u.nextIFD-n,n,r,a)}async readIFD(e,t,i,s,n=ye.TIFF_TAGS,r=4,a){if(!e)return null;const u=Ut(e,t,i,s,n,r);if(u.success){const o=[];if(u.ifd.forEach(l=>{l.values||o.push(l)}),o.length>0){const l=o.map(f=>f.offlineOffsetSize),c=Math.min.apply(null,l.map(f=>f[0]));if(Math.min.apply(null,l.map(f=>f[0]+f[1]))-c<=this._bufferSize){const{data:f}=await this.request(this.url,{range:{from:c,to:c+this._bufferSize},responseType:"array-buffer",signal:a});e=f,s=c,o.forEach(m=>Gt(e,t,m,s))}}if(u.ifd.has("GEOKEYDIRECTORY")){const l=u.ifd.get("GEOKEYDIRECTORY"),c=l.values;if(c&&c.length>4){const f=c[0]+"."+c[1]+"."+c[2],m=await this.readIFD(e,t,l.valueOffset+6-s,s,ye.GEO_KEYS,2,a);l.data=m.ifd,l.data&&l.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[f]})}}return u}if(u.requiredBufferSize&&u.requiredBufferSize!==e.byteLength)return(e=(await this.request(this.url,{range:{from:s,to:s+u.requiredBufferSize+4},responseType:"array-buffer",signal:a})).data).byteLength<u.requiredBufferSize?null:this.readIFD(e,t,0,s,ye.TIFF_TAGS,4,a)}getTileLocation(e,t,i){const{firstPyramidLevel:s,blockBoundary:n}=this.rasterInfo.storageInfo,r=e===0?0:e-(s-1),a=this._headerInfo.ifds[r];if(!a)return null;const u=Vt(a,this._headerInfo),o=Qe(a,"TILEOFFSETS");if(o===void 0)return null;const l=Qe(a,"TILEBYTECOUNTS"),{minRow:c,minCol:f,maxRow:m,maxCol:h}=n[r];if(t>m||i>h||t<c||i<f)return null;const y=be(a,"IMAGEWIDTH"),p=be(a,"IMAGELENGTH"),d=be(a,"TILEWIDTH"),g=be(a,"TILELENGTH"),x=u?this.rasterInfo.bandCount:1,w=x*t*(h+1)+i,_=[{from:o[w],to:o[w+x-1]+l[w+x-1]-1}];if(u){let b=!0;for(let C=0;C<x;C++)if(o[w+C]+l[w+C]!==o[w+C+1]){b=!1;break}if(!b)for(let C=0;C<x;C++)_[C]={from:o[w+C],to:o[w+C]+l[w+C]-1}}const v=o[w],T=l[w];return v==null||T==null?null:{ranges:_,ifd:a,actualTileWidth:i===h?y%d:d,actualTileHeight:t===m?p%g:g}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:e==null?void 0:e.signal});return Me(t)}catch{return null}}};I([S()],se.prototype,"_files",void 0),I([S()],se.prototype,"_headerInfo",void 0),I([S()],se.prototype,"_bufferSize",void 0),I([S({type:String,json:{write:!0}})],se.prototype,"datasetFormat",void 0),se=I([X("esri.layers.support.rasterDatasets.TIFFRaster")],se);const wi=se,L=new Map;L.set("CRF",{desc:"Cloud Raster Format",constructor:di}),L.set("MRF",{desc:"Meta Raster Format",constructor:Ii}),L.set("TIFF",{desc:"GeoTIFF",constructor:wi}),L.set("RasterTileServer",{desc:"Raster Tile Server",constructor:xi}),L.set("JPG",{desc:"JPG Raster Format",constructor:ve}),L.set("PNG",{desc:"PNG Raster Format",constructor:ve}),L.set("GIF",{desc:"GIF Raster Format",constructor:ve}),L.set("BMP",{desc:"BMP Raster Format",constructor:ve});class vi{static get supportedFormats(){const t=new Set;return L.forEach((i,s)=>t.add(s)),t}static async open(t){const{url:i,ioConfig:s,sourceJSON:n}=t;let r=t.datasetFormat;r==null&&i.lastIndexOf(".")&&(r=i.slice(i.lastIndexOf(".")+1).toUpperCase()),r==="OVR"||r==="TIF"?r="TIFF":r!=="JPG"&&r!=="JPEG"&&r!=="JFIF"||(r="JPG"),i.toLowerCase().indexOf("/imageserver")>-1&&i.toLowerCase().indexOf("/wcsserver")===-1&&(r="RasterTileServer");const a={url:i,sourceJSON:n,datasetFormat:r,ioConfig:s||{bandIds:null,sampling:null}};let u,o;if(this.supportedFormats.has(r))return u=L.get(r).constructor,o=new u(a),await o.open({signal:t.signal}),o;if(r)throw new D("rasterfactory:open","not a supported format "+r);const l=Array.from(L.keys());let c=0;const f=function(){return r=l[c++],r?(u=L.get(r).constructor,o=new u(a),o.open({signal:t.signal}).then(()=>o).catch(()=>f())):null};return f()}static register(t,i,s){L.has(t.toUpperCase())||L.set(t.toUpperCase(),{desc:i,constructor:s})}}let $=class extends dt(mt(pt(yt(gt(ci(xt(It(wt(vt))))))))){constructor(...e){super(...e),this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.title=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null}normalizeCtorArgs(e,t){return typeof e=="string"?O({url:e},t):e}load(e){const t=P(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(bt).then(()=>this._openRaster(t))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){var e,t;let i=[new ce({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const s=(e=this.rasterInfo)==null||(t=e.attributeTable)==null?void 0:t.fields,n="Raster.";if(s){const u=s.filter(o=>o.type!=="oid"&&o.name.toLowerCase()!=="value").map(o=>{const l=o.clone();return l.name=n+o.name,l});i=i.concat(u)}const r=this.rasterInfo.dataType;if((r==="vector-magdir"||r==="vector-uv")&&P(this.rasterInfo.multidimensionalInfo)){var a;const u=(a=this.rasterInfo.multidimensionalInfo.variables[0].unit)==null?void 0:a.trim(),o="Magnitude"+(u?` (${u})`:"");i.push(new ce({name:"Raster.Magnitude",alias:o,domain:null,editable:!1,type:"double"})),i.push(new ce({name:"Raster.Direction",alias:"Direction (\xB0)",domain:null,editable:!1,type:"double"}))}return i}set renderer(e){this._set("renderer",e),this.updateRenderer()}readRenderer(e,t,i){const s=t&&t.layerDefinition&&t.layerDefinition.drawingInfo&&t.layerDefinition.drawingInfo.renderer,n=Dt(s,i)||void 0;if(n!=null)return n}createPopupTemplate(e){return St({fields:this.rasterFields,title:this.title},e)}write(e,t){const{raster:i}=this;if(this.loaded?i.datasetFormat==="RasterTileServer"&&(i.tileType==="Raster"||i.tileType==="Map"):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(e,t);if(t&&t.messages){const s=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new D("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${s}'`,{layer:this}))}return null}async _openRaster(e){this.raster?(this.raster.rasterInfo||await this.raster.open(),this.url=this.raster.url):this.raster=await vi.open({url:this.url,sourceJSON:this.sourceJSON,ioConfig:N(O({sampling:"closest"},this.ioConfig),{customFetchParameters:this.customParameters}),signal:e});const{rasterInfo:t}=this.raster;if(!t)throw new D("imagery-tile-layer:load","cannot load resources on "+this.url);this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,this.sourceJSON!=null&&(this._set("version",this.sourceJSON.currentVersion),this._set("copyright",this.sourceJSON.copyrightText),this.sourceJSON.timeInfo&&this._set("timeInfo",Tt.fromJSON(this.sourceJSON.timeInfo))),this.title==null&&(this.title=this.raster.datasetName),this.raster.tileType==="Map"&&(this.popupEnabled=!1),this._configDefaultSettings(),this.watch("customParameters",i=>this.raster.ioConfig.customFetchParameters=i)}};I([S({type:[Rt],json:{write:{overridePolicy(){var e;return{enabled:!this.loaded||this.raster.tileType==="Raster"||((e=this.bandIds)==null?void 0:e.join(","))!=="0,1,2"}}}}})],$.prototype,"bandIds",void 0),I([S({json:{write:{overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"||this.interpolation!=="bilinear"}}}}}),Ct(Bt)],$.prototype,"interpolation",void 0),I([S({json:{write:!0}})],$.prototype,"multidimensionalDefinition",void 0),I([S(_t)],$.prototype,"legendEnabled",void 0),I([S({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],$.prototype,"isReference",void 0),I([S({type:["show","hide"]})],$.prototype,"listMode",void 0),I([S()],$.prototype,"sourceJSON",void 0),I([S({readOnly:!0})],$.prototype,"version",void 0),I([S()],$.prototype,"title",void 0),I([S({readOnly:!0,json:{read:!1}})],$.prototype,"type",void 0),I([S({type:["ArcGISTiledImageServiceLayer"]})],$.prototype,"operationalLayerType",void 0),I([S({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}},writer(e,t,i){t[i]=!e}}}})],$.prototype,"popupEnabled",void 0),I([S({type:kt,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}}}}})],$.prototype,"popupTemplate",void 0),I([S({readOnly:!0})],$.prototype,"defaultPopupTemplate",null),I([S({readOnly:!0,type:[ce]})],$.prototype,"fields",void 0),I([S({readOnly:!0,type:[ce]})],$.prototype,"rasterFields",null),I([S({types:ze,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){var e;const t=((e=this.renderer)==null?void 0:e.type)==="raster-stretch"&&this.renderer.stretchType==="none"&&!this.renderer.useGamma;return{enabled:!this.loaded||this.raster.tileType==="Raster"||!t}}},origins:{"web-scene":{types:Et,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&e.type!=="vector-field"&&e.type!=="animated-flow"})}}}}})],$.prototype,"renderer",null),I([Mt("renderer")],$.prototype,"readRenderer",null),$=I([X("esri.layers.ImageryTileLayer")],$);const zi=$;export{zi as default};
