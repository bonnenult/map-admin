var pe=Object.defineProperty,ge=Object.defineProperties;var ve=Object.getOwnPropertyDescriptors;var ee=Object.getOwnPropertySymbols;var _e=Object.prototype.hasOwnProperty,me=Object.prototype.propertyIsEnumerable;var te=(e,t,i)=>t in e?pe(e,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[t]=i,M=(e,t)=>{for(var i in t||(t={}))_e.call(t,i)&&te(e,i,t[i]);if(ee)for(var i of ee(t))me.call(t,i)&&te(e,i,t[i]);return e},q=(e,t)=>ge(e,ve(t));import{e as s,d as o,i as H,p as j,a5 as p,J as ie,l as fe,a9 as Ce,u as Q,al as J,k5 as be,a2 as T,r as _,gg as U,iO as se,az as Z,ay as K,t as V,i2 as Ae,k6 as N,aA as Oe,k7 as ne,f0 as oe,$ as ae,iX as we,k8 as re,eD as B,jm as m,gi as Ve,k9 as Le,a_ as W,ka as le,am as k,kb as Te,a4 as Ee,kc as ce,jn as E,kd as de,ke as Se,bZ as Ie,kf as Re,a as c,n as $e,b as F,k0 as f,jk as Y,kg as $,eI as Pe,bF as De,fx as ze}from"./index.988b09cd.js";import{p as He}from"./AnalysisView3D.e6f70945.js";import"./vendor.c6be4c00.js";import"./index.25aa0880.js";/* empty css              */import"./qrcode.0911187d.js";/* empty css                 */let P=class extends j{constructor(e){super(e),this.elevationAlignedTargetLocation=null,this.inputPoints={isValid:!1,observer:p(),observerSurfaceNormal:null,target:p(),targetSurfaceNormal:null,observerAdjusted:p(),targetAdjusted:p()},this.computationResult={start:p(),end:p(),intersection:p(),isValid:!1,isTargetVisible:!1},this.result=null}updateComputationResults(){this.notifyChange("computationResult")}updateInputPoints(){this.notifyChange("inputPoints")}onElevationChange(){this.notifyChange("elevationAlignedTargetLocation")}};s([o()],P.prototype,"target",void 0),s([o()],P.prototype,"elevationAlignedTargetLocation",void 0),s([o()],P.prototype,"inputPoints",void 0),s([o()],P.prototype,"computationResult",void 0),s([o()],P.prototype,"result",void 0),P=s([H("esri.views.3d.analysis.LineOfSight.LineOfSightAnalysis")],P);let D=class extends j{constructor(e){super(e),this.target=null,this.intersectedGraphic=null,this.intersectedLocation=null,this.elevationAlignedTargetLocation=null}};s([o()],D.prototype,"target",void 0),s([o()],D.prototype,"intersectedGraphic",void 0),s([o()],D.prototype,"intersectedLocation",void 0),s([o()],D.prototype,"elevationAlignedTargetLocation",void 0),s([o()],D.prototype,"visible",void 0),D=s([H("esri.views.3d.analysis.LineOfSight.LineOfSightResult")],D);let C=class extends ie.EventedMixin(j){constructor(e){super(e),this._updatingHandles=new fe,this._frameTask=Ce,this._handles=new Q,this._analysisHandles=new Q}initialize(){var e;const t=(e=this.view.resourceController)==null?void 0:e.scheduler;t&&(this._frameTask=t.registerTask(J.LINE_OF_SIGHT_TOOL)),this._handles.add([this._connectObserver(),this._connectAnalyses(),this._connectTargets()]),this._intersector=new be({view:this.view})}destroy(){this._handles.destroy(),this._analysisHandles.destroy(),this._analyses.removeAll(),this._updatingHandles.destroy()}get updating(){return this._frameTask.updating||this._updatingHandles.updating}get priority(){return this._frameTask.priority}set priority(e){this._frameTask.priority=e}get _analyses(){return this.analysisViewData.analyses}get _observerEngineLocation(){return this.analysisViewData.observerEngineLocation}set _observerEngineLocation(e){this.analysisViewData.observerEngineLocation=e}get _screenPixelSize(){return this.view.state.camera.computeScreenPixelSizeAt(this._observerEngineLocation)}getLineOfSightComputationDependencies(e){const{inputPoints:t}=e;return{inputPoints:t}}computeAnalysis(e){const t=e.analysis,{inputPoints:i,computationResult:n}=t,{observerAdjusted:r,targetAdjusted:d}=i,{start:a,end:u}=n;T(a,r),T(u,d),this._canComputeAnalysis(t)?this._computeAnalysisIntersection(e):this._interpolateAnalysisIntersection(e),t.updateComputationResults(),this.emit("result-changed",{target:e.analysis.target,result:t.result})}_adjustStartEndPositions(e){const t=this._screenPixelSize,i=this.view,{inputPoints:n}=e,{observer:r,observerSurfaceNormal:d,target:a,targetSurfaceNormal:u,observerAdjusted:h,targetAdjusted:v}=n,l=X;_(d)?T(l,d):U(l,a,r);const g=t;se(l,l),Z(l,l,Math.min(g,1)),K(h,r,l),_(u)?T(l,u):U(l,r,a);const w=i.state.camera.computeScreenPixelSizeAt(a);se(l,l),Z(l,l,Math.min(w,1)),K(v,a,l)}_computeAnalysisIntersection({analysis:e,interpolationInfo:t}){const{view:i}=this,{sceneIntersectionHelper:n,renderCoordsHelper:r}=i;if(V(n))return;const d=this._intersector.intersector,{computationResult:a,inputPoints:u}=e,{observer:h,target:v}=u,{start:l,end:g}=a,w=Ae(l,g,ke);n.intersectToolIntersectorRay(w,d);const S=a.intersection,x=X,G=d.results.min.getIntersectionPoint(S);let y=!0;if(G){T(t.originalIntersection,S),T(t.originalObserver,l),T(t.originalTarget,g),r.fromRenderCoords(S,x,i.spatialReference);const b=1-N(g,v)/N(l,v);y=N(h,S)>=b*N(h,v)}const I=new Oe(x,i.spatialReference);{const{result:b,target:R}=e;_(b)?(b.target=R,b.intersectedGraphic=y?null:ne(d.results.min,i),b.intersectedLocation=y?null:I,b.visible=!!G&&y):e.result=new D({target:R,elevationAlignedTargetLocation:e.elevationAlignedTargetLocation,intersectedGraphic:y?null:ne(d.results.min,i),intersectedLocation:y?null:I,visible:!!G&&y})}a.isValid=u.isValid=!0,a.isTargetVisible=y}_interpolateAnalysisIntersection({analysis:e,interpolationInfo:t}){const{computationResult:i,inputPoints:n}=e,{start:r,end:d,intersection:a}=i,{originalIntersection:u,originalObserver:h,originalTarget:v}=t;if(T(a,u),n.isValid){const l=X,g=N(h,u)/N(h,v);oe(l,r,h),Z(l,l,1-g),K(a,a,l),oe(l,d,v),Z(l,l,g),K(a,a,l),i.isValid=!0}else e.result=null,i.isValid=!1,i.isTargetVisible=!1}_canComputeAnalysis(e){const t=this.analysisViewData.elevationAlignedObserver,i=this.view.frustum;if(V(t)||V(e.target)||V(i))return!1;const{observerAdjusted:n,targetAdjusted:r}=e.inputPoints,d=i.intersectsPoint(n),a=i.intersectsPoint(r);return d&&a}_onObserverChange(e,t){if(V(e))return this.analysis.targets.removeAll(),void(this.analysisViewData.elevationAlignedObserver=null);this.analysisViewData.elevationAlignedObserver=this._applyElevationAlignment(e,t);const i=p();this.view.renderCoordsHelper.toRenderCoords(this.analysisViewData.elevationAlignedObserver,i),this._observerEngineLocation=i,this.priority=J.LINE_OF_SIGHT_TOOL_INTERACTIVE}_applyElevationAlignment(e,t){if(e.hasZ&&(V(t)||t.type===0))return e;const i=e.clone();return i.z=ae(we(this.view.elevationProvider,i),0),i}_onObserverChangeForAnalysis(e){e.inputPoints.isValid=!1}_onObserverEngineForAnalysis(e,t,i){const{inputPoints:n}=e;if(T(n.observer,t),_(i)){const r=this._intersector.updateFromIntersectionResult(i);_(r)&&this.view.renderCoordsHelper.toRenderCoords(r,n.observer),n.observerSurfaceNormal=re(i.normal)}else n.observerSurfaceNormal=null;this._adjustStartEndPositions(e),e.updateInputPoints(),this.priority=J.LINE_OF_SIGHT_TOOL_INTERACTIVE}_onTargetLocationChange(e,t,i){const n=e.inputPoints;if(n.isValid=!1,_(t)){if(e.elevationAlignedTargetLocation=this._applyElevationAlignment(t,i),this.view.renderCoordsHelper.toRenderCoords(e.elevationAlignedTargetLocation,n.target),_(i)){const r=this._intersector.updateFromIntersectionResult(i);_(r)&&this.view.renderCoordsHelper.toRenderCoords(r,n.target),n.targetSurfaceNormal=re(i.normal)}else n.targetSurfaceNormal=null;this._adjustStartEndPositions(e),e.updateInputPoints()}this.priority=J.LINE_OF_SIGHT_TOOL_INTERACTIVE}_connectAnalysisToTarget(e){return B([m(()=>e.target.location,t=>{he(t,e.target.intersection)||(e.target.intersection=null)},ce),m(()=>({analysis:e,targetLocation:e.target.location,targetIntersection:e.target.intersection}),({analysis:t,targetLocation:i,targetIntersection:n})=>{_(i)&&this._onTargetLocationChange(t,i,n)},E)])}_connectAnalysisToObserver(e){return m(()=>({analysis:e,observer:this.analysisViewData.elevationAlignedObserver}),({analysis:t})=>{this._onObserverChangeForAnalysis(t)},E)}_connectAnalysisToObserverEngine(e){return m(()=>({analysis:e,observer:this._observerEngineLocation,observerIntersection:this.analysis.intersection}),({analysis:t,observer:i,observerIntersection:n})=>{this._onObserverEngineForAnalysis(t,i,n)},E)}_connectAnalysisToCamera(e){return m(()=>({camera:this.view.state.camera,isDirty:this._isCameraDirty}),({isDirty:t})=>{e.inputPoints.isValid&&!t||e.updateInputPoints()},de)}_connectAnalysisToElevation(e){return this.view.elevationProvider.on("elevation-change",t=>{if(!this._canComputeAnalysis(e))return;const i=this.analysis.observer;ue(t.extent,t.spatialReference,i)&&this._onObserverChange(i,this.analysis.intersection);const n=e.target;_(n)&&ue(t.extent,t.spatialReference,n.location)&&e.onElevationChange()})}_connectAnalysisForCompute(e){let t=Se;const i={analysis:e,interpolationInfo:{originalIntersection:p(),originalObserver:p(),originalTarget:p()}};return B([m(()=>this.getLineOfSightComputationDependencies(e),()=>{t=le(t),t=Ie(async n=>{await Re(this._frameTask.schedule(()=>this.computeAnalysis(i),n))})},E),W(()=>t=le(t))])}_connectAnalysis(e){const t=this._analysisHandles;t.has(e)||t.add([this._connectAnalysisToTarget(e),this._connectAnalysisToObserver(e),this._connectAnalysisToObserverEngine(e),this._connectAnalysisToCamera(e),this._connectAnalysisToElevation(e),this._connectAnalysisForCompute(e)],e)}_disconnectAnalysis(e){this._analysisHandles.remove(e)}_onAnalysesCollectionChange(e){e.added.forEach(t=>this._connectAnalysis(t)),e.removed.forEach(t=>this._disconnectAnalysis(t))}_onTargetsChange(){return this._analyses.removeAll(),this.analysis.targets.forEach(e=>this._addTarget(e)),this._updatingHandles.addOnCollectionPropertyChange(this.analysis,"targets",e=>this._onTargetCollectionChange(e))}_onTargetCollectionChange(e){e.added.forEach(t=>this._addTarget(t)),e.removed.forEach(t=>this._removeTarget(t))}_onCursorTargetChange(e,t){_(t)&&this._removeTarget(t),_(e)&&this._addTarget(e)}_addTarget(e){this._analyses.some(t=>t.target===e)||this._analyses.add(new P({target:e}))}_removeTarget(e){const t=this._analyses.find(i=>i.target===e);this._analyses.remove(t)}_connectObserver(){return B([m(()=>this.analysis.observer,e=>{he(e,this.analysis.intersection)||(this.analysis.intersection=null)},ce),m(()=>({observer:this.analysis.observer,intersection:this.analysis.intersection}),({observer:e,intersection:t})=>this._onObserverChange(e,t),E)])}_connectAnalyses(){let e=null;return B([m(()=>this._analyses,()=>{k(e),e=this._updatingHandles.addOnCollectionPropertyChange(this,"_analyses",t=>this._onAnalysesCollectionChange(t)),this._analyses.forEach(t=>this._connectAnalysis(t))},E),W(()=>e=k(e))])}_connectTargets(){let e=null;return B([m(()=>this.analysis.targets,()=>{e=k(e),e=this._onTargetsChange()},E),m(()=>this.analysisViewData.cursorTarget,(t,i)=>{this._onCursorTargetChange(t,i)}),W(()=>{e=k(e)})])}get _isCameraDirty(){const e=this.analysisViewData.elevationAlignedObserver,{view:t}=this,{renderCoordsHelper:i}=t;if(V(e)||V(i))return!1;const n=X;i.toRenderCoords(e,n);const r=t.state.camera.computeScreenPixelSizeAt(n);return Math.abs((r-this._screenPixelSize)/this._screenPixelSize)>je}};function ue(e,t,i){return!V(i)&&(Ve(e,t,ye,i.spatialReference),Le(ye,i))}function he(e,t){return V(t)||_(e)&&e.equals(t.point)}s([o({constructOnly:!0})],C.prototype,"analysis",void 0),s([o({constructOnly:!0})],C.prototype,"analysisViewData",void 0),s([o({constructOnly:!0})],C.prototype,"view",void 0),s([o()],C.prototype,"updating",null),s([o()],C.prototype,"priority",null),s([o()],C.prototype,"_analyses",null),s([o()],C.prototype,"_observerEngineLocation",null),s([o()],C.prototype,"_screenPixelSize",null),s([o({readOnly:!0})],C.prototype,"_updatingHandles",void 0),s([o()],C.prototype,"_frameTask",void 0),s([o()],C.prototype,"_isCameraDirty",null),C=s([H("esri.views.3d.analysis.LineOfSight.LineOfSightController")],C);const je=.1,X=p(),ke=Te(),ye=Ee();let O=class extends j{constructor(e){super(e),this.innerWidth=2,this.outerWidth=8,this.visibleInnerColor=new c([3,252,111,1]),this.visibleOuterColor=new c([3,252,111,.15]),this.occludedInnerColor=new c([252,3,69,1]),this.occludedOuterColor=new c([252,3,69,.1]),this.undefinedInnerColor=new c([255,255,255,1]),this.undefinedOuterColor=new c([127,127,127,.2])}};s([o({type:Number})],O.prototype,"innerWidth",void 0),s([o({type:Number})],O.prototype,"outerWidth",void 0),s([o({type:c})],O.prototype,"visibleInnerColor",void 0),s([o({type:c})],O.prototype,"visibleOuterColor",void 0),s([o({type:c})],O.prototype,"occludedInnerColor",void 0),s([o({type:c})],O.prototype,"occludedOuterColor",void 0),s([o({type:c})],O.prototype,"undefinedInnerColor",void 0),s([o({type:c})],O.prototype,"undefinedOuterColor",void 0),O=s([H("esri.views.3d.analysis.LineOfSight.LineOfSightConfiguration")],O);let z=class extends j{constructor(){super(...arguments),this.analyses=new $e,this.elevationAlignedObserver=null,this.configuration=new O,this.observerEngineLocation=p(),this.cursorTarget=null}};s([o()],z.prototype,"analyses",void 0),s([o()],z.prototype,"elevationAlignedObserver",void 0),s([o({type:O})],z.prototype,"configuration",void 0),s([o()],z.prototype,"observerEngineLocation",void 0),s([o()],z.prototype,"cursorTarget",void 0),z=s([H("esri.views.3d.analysis.LineOfSight.LineOfSightViewData")],z);let L=class extends j{constructor(e){super(e),this._handle=null,this._analysisHandles=new Q}initialize(){this._handle=this._connectAnalyses()}destroy(){this._handle=k(this._handle),this._analysisHandles=F(this._analysisHandles)}get visible(){return this.analysisView.visible&&!this.analysisView.suspended}get _analyses(){return this.analysisView.analysisViewData.analyses}get _configuration(){return this.analysisView.analysisViewData.configuration}get _opacity(){return this.analysisView.fullOpacity}createLineOfSightVisualization(){const e=this._configuration,t=this._opacity,i={view:this.view,attached:!0,width:e.outerWidth,innerWidth:e.innerWidth},n=c.toUnitRGBA(e.visibleOuterColor);f(n,n,t);const r=c.toUnitRGBA(e.visibleInnerColor);f(r,r,t);const d=c.toUnitRGBA(e.occludedOuterColor);f(d,d,t);const a=c.toUnitRGBA(e.occludedInnerColor);f(a,a,t);const u=c.toUnitRGBA(e.undefinedOuterColor);f(u,u,t);const h=c.toUnitRGBA(e.undefinedInnerColor);return f(h,h,t),{visibleLineVisualElement:new Y(q(M({},i),{color:n,innerColor:r})),occludedLineVisualElement:new Y(q(M({},i),{color:d,innerColor:a})),undefinedLineVisualElement:new Y(q(M({},i),{color:u,innerColor:h}))}}destroyLineOfSightVisualization(e){e.visibleLineVisualElement=F(e.visibleLineVisualElement),e.occludedLineVisualElement=F(e.occludedLineVisualElement),e.undefinedLineVisualElement=F(e.undefinedLineVisualElement)}updateLineOfSightVisualization(e,t){const i=this.visible,n=this._configuration,{computationResult:r,inputPoints:d}=e,{start:a,end:u,intersection:h,isValid:v,isTargetVisible:l}=r,{observer:g}=d,w=Be;w[12]=g[0],w[13]=g[1],w[14]=g[2];const S=U(xe,a,g),x=U(Ge,u,g),G=U(Ne,h,g),{visibleLineVisualElement:y,occludedLineVisualElement:I,undefinedLineVisualElement:b}=t;if(!i)return y.visible=!1,I.visible=!1,void(b.visible=!1);if(y.visible=!0,I.visible=!0,b.visible=!0,y.geometry=null,I.geometry=null,b.geometry=null,v)if(l){y.geometry=[[$(S),$(x)]],y.transform=w;const R=c.toUnitRGBA(n.visibleOuterColor);y.color=f(R,R,this._opacity)}else{y.geometry=[[$(S),$(G)]],y.transform=w;const R=c.toUnitRGBA(n.occludedOuterColor);y.color=f(R,R,this._opacity),I.geometry=[[$(G),$(x)]],I.transform=w}else b.geometry=[[$(S),$(x)]],b.transform=w}updateVisualizationOpacity(e,t){const i=this._configuration,n=this._opacity,r=c.toUnitRGBA(i.visibleOuterColor);f(r,r,n);const d=c.toUnitRGBA(i.visibleInnerColor);f(d,d,n);const a=c.toUnitRGBA(i.occludedOuterColor);f(a,a,n);const u=c.toUnitRGBA(i.occludedInnerColor);f(u,u,n);const h=c.toUnitRGBA(i.undefinedOuterColor);f(h,h,n);const v=c.toUnitRGBA(i.undefinedInnerColor);f(v,v,n),t.visibleLineVisualElement.color=e.computationResult.isTargetVisible?r:a,t.visibleLineVisualElement.innerColor=d,t.occludedLineVisualElement.color=a,t.occludedLineVisualElement.innerColor=u,t.undefinedLineVisualElement.color=h,t.undefinedLineVisualElement.innerColor=v}getLineOfSightVisualizationDependencies(e){const{computationResult:t}=e,{occludedOuterColor:i,visibleOuterColor:n}=this._configuration;return{computationResult:t,occludedOuterColor:i,visibleOuterColor:n,visible:this.visible}}_connectAnalysis(e){const t=this._analysisHandles;if(t.has(e))return;const i=this.createLineOfSightVisualization();t.add([m(()=>this.getLineOfSightVisualizationDependencies(e),()=>this.updateLineOfSightVisualization(e,i),E),m(()=>this._opacity,()=>this.updateVisualizationOpacity(e,i),de),W(()=>this.destroyLineOfSightVisualization(i))],e)}_disconnectAnalysis(e){this._analysisHandles.remove(e)}_connectAnalyses(){let e=null;return B([m(()=>this._analyses,t=>{e=k(e),e=t.on("change",i=>this._onAnalysesCollectionChange(i)),this._onAnalysesCollectionChange({target:t,added:t.items,removed:[],moved:[]})},E),W(()=>e=k(e))])}_onAnalysesCollectionChange(e){e.added.forEach(t=>this._connectAnalysis(t)),e.removed.forEach(t=>this._disconnectAnalysis(t))}};s([o({constructOnly:!0})],L.prototype,"analysis",void 0),s([o({constructOnly:!0})],L.prototype,"analysisView",void 0),s([o({constructOnly:!0})],L.prototype,"view",void 0),s([o({readOnly:!0})],L.prototype,"visible",null),s([o()],L.prototype,"_analyses",null),s([o()],L.prototype,"_configuration",null),s([o()],L.prototype,"_opacity",null),L=s([H("esri.views.3d.analysis.LineOfSight.LineOfSightVisualization")],L);const xe=p(),Ge=p(),Ne=p(),Be=Pe();let A=class extends He(De(ie.EventedMixin(j))){constructor(e){super(e),this.type="line-of-sight-view",this.suspended=!1,this.fullOpacity=1,this.analysisViewData=new z}initialize(){const e=this.view,t=this.analysis;this._analysisController=new C({analysis:t,analysisViewData:this.analysisViewData,view:e}),this._analysisVisualization=new L({analysis:t,analysisView:this,view:e}),this.handles.add([this._analysisController.on("result-changed",i=>{i.target!==this.analysisViewData.cursorTarget&&this.emit("result-changed",i)})])}destroy(){this._analysisController=F(this._analysisController),this._analysisVisualization=F(this._analysisVisualization)}get results(){return this.analysisViewData.analyses.map(e=>e.result)}get priority(){return this._analysisController.priority}set priority(e){this._analysisController.priority=e}get updating(){return _(this._analysisController)&&this._analysisController.updating}getResultForTarget(e){const t=this.analysisViewData.analyses.find(n=>n.target===e),i=ze(t,n=>n.result);return ae(i,null)}get test(){return{visualization:this._analysisVisualization,controller:this._analysisController}}};s([o()],A.prototype,"type",void 0),s([o()],A.prototype,"analysis",void 0),s([o({readOnly:!0})],A.prototype,"results",null),s([o()],A.prototype,"priority",null),s([o()],A.prototype,"suspended",void 0),s([o()],A.prototype,"fullOpacity",void 0),s([o()],A.prototype,"analysisViewData",void 0),s([o()],A.prototype,"updating",null),s([o()],A.prototype,"_analysisController",void 0),s([o()],A.prototype,"_analysisVisualization",void 0),A=s([H("esri.views.3d.analysis.LineOfSight.LineOfSightView3D")],A);const Xe=A;export{Xe as default};
