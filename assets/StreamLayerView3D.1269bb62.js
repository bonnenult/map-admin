var V=Object.defineProperty;var m=Object.getOwnPropertySymbols;var $=Object.prototype.hasOwnProperty,M=Object.prototype.propertyIsEnumerable;var f=(t,e,r)=>e in t?V(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r,g=(t,e)=>{for(var r in e||(e={}))$.call(e,r)&&f(t,r,e[r]);if(m)for(var r of m(e))M.call(e,r)&&f(t,r,e[r]);return t};import{aY as i,aZ as s,a_ as c,dm as C,gc as F,a$ as L,j3 as T,b1 as d,as as k,gi as D,fX as U,fY as Q,c5 as N,bd as P}from"./vendor.47ccae81.js";import{t as z,h as A}from"./createConnection.b02e0343.js";import{s as J,E as B}from"./EventedSet.f21bf1b0.js";import"./CircularArray.0a51dd29.js";import"./Graphics3DFeatureLikeLayerView.5dad492f.js";import"./Graphics3DScaleVisibility.7377a362.js";import"./rendererConversion.1dce883d.js";import"./optimizedFeatureQueryEngineAdapter.43553634.js";import"./centroid.db30e28e.js";import"./PooledRBush.e74b4240.js";import"./Graphics3DObjectStates.65fef5f4.js";import"./QueryEngine.5fc93982.js";import"./WhereClause.fde6eef5.js";import"./projectionSupport.f43af219.js";import"./json.2d0d6862.js";import"./QueryEngineCapabilities.83e56447.js";import"./utils.7e8873d5.js";import"./ClassBreaksDefinition.e84bedbe.js";import"./spatialQuerySupport.8e7e561a.js";import"./Graphics3DFrustumVisibility.1d75a4e0.js";import"./attributeUtils.a1b96ab7.js";import"./projectExtentUtils.066a3971.js";var h;const Z=2500;let l=h=class extends k{getObjectId(){return this.objectId}clone(){return new h(g({objectId:this.objectId},this.cloneProperties()))}};i([s({type:Number,json:{read:!0}})],l.prototype,"objectId",void 0),l=h=i([c("esri.layers.graphics.controllers.StreamGraphic")],l);class q{constructor(e){this.onUpdate=e,this._idToGraphic=new Map}destroy(){this._idToGraphic.clear()}add(e){this._idToGraphic.set(e.objectId,e)}get(e){return this._idToGraphic.get(e)}forEach(e){this._idToGraphic.forEach(e)}removeById(e){const r=this._idToGraphic.get(e);return r?(r.sourceLayer=r.layer=null,this._idToGraphic.delete(e),r):null}update(e,r){this.onUpdate(e,r)}get size(){return this._idToGraphic.size}}let a=class extends C(F(L)){constructor(){super(...arguments),this._updateInfo={websocket:0,client:0},this.graphics=new J}initialize(){this.addResolvingPromise(this.layer.when(()=>this._startup()))}destroy(){this.clear()}clear(){this._updateIntervalId&&(clearInterval(this._updateIntervalId),this._updateIntervalId=0),this.connection&&(this.connection.destroy(),this.connection=null),this.store&&(this.store.destroy(),this.store=null),this.graphics.clear(),this.handles.removeAll()}get updating(){return!this.connection||this.connection.connectionStatus==="connected"}_startup(){const{parsedUrl:t,spatialReference:e,definitionExpression:r,geometryDefinition:b,objectIdField:v,timeInfo:j,purgeOptions:_,maxReconnectionAttempts:w,maxReconnectionInterval:I,updateInterval:S}=this.layer,O=T.toJSON(this.layer.geometryType),E=e,u=this.layerView.view.spatialReference,G={geometry:b,where:r};this.clear(),this._set("connection",z(t,E,u,O,G,w,I)),this._outSpatialReference=u.toJSON(),this.store=new q(this._onUpdate.bind(this)),this.featuresManager=new A(this.store,v,j.toJSON(),_),this.handles.add([this.connection.on("feature",n=>this._onFeature(n)),this.layer.watch("definitionExpression",()=>this._startup()),this.layer.watch("geometryDefinition",()=>this._startup()),this.layer.watch("purgeOptions",()=>this._startup())]);let y=performance.now();this._updateIntervalId=setInterval(()=>{const n=performance.now(),p=n-y;if(p>Z){y=n;const x=Math.round(this._updateInfo.client/(p/1e3)),R=Math.round(this._updateInfo.websocket/(p/1e3));this._updateInfo.client=0,this._updateInfo.websocket=0,this.layerView.emit("update-rate",{client:x,websocket:R})}this.featuresManager.checkForUpdates()},S)}_onFeature(t){this._updateInfo.websocket++,this.layerView.hasEventListener("data-received")&&this.layerView.emit("data-received",{attributes:t.attributes,centroid:t.centroid,geometry:t.geometry});try{d(t.geometry)&&!t.geometry.spatialReference&&(t.geometry.spatialReference=this._outSpatialReference);const e=l.fromJSON(t);e.sourceLayer=e.layer=this.layer,this.featuresManager.add(e)}catch{}}_onUpdate(t,e){d(e)&&this.graphics.removeMany(e),d(t)&&(this._updateInfo.client+=t.length,this.graphics.addMany(t))}};i([s()],a.prototype,"connection",void 0),i([s()],a.prototype,"layer",void 0),i([s()],a.prototype,"layerView",void 0),i([s({readOnly:!0})],a.prototype,"updating",null),a=i([c("esri.layers.graphics.controllers.StreamController")],a);const Y=a,W=t=>{let e=class extends t{constructor(...r){super(...r),this.connectionError=null,this.connectionStatus="disconnected",this.filter=null}};return i([s({readOnly:!0})],e.prototype,"connectionError",void 0),i([s({aliasOf:"controller.connection.connectionStatus",readOnly:!0})],e.prototype,"connectionStatus",void 0),i([s({type:D})],e.prototype,"filter",void 0),e=i([c("esri.layers.mixins.StreamLayerView")],e),e};let o=class extends W(B(U(Q))){constructor(){super(...arguments),this.type="stream-3d",this.updatePolicy=0,this.hasZ=!0,this.hasM=!1}get connectionError(){const t=this.get("controller.connection.errorString");if(t)return new N("stream-controller",t)}createQuery(){return new P({outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference})}queryLatestObservations(t,e){return this.queryEngine.executeQueryForLatestObservations(this._ensureQuery(t),e==null?void 0:e.signal)}createController(){return new Y({layer:this.layer,layerView:this})}beforeSetController(){}};i([s({readOnly:!0})],o.prototype,"updatePolicy",void 0),i([s({readOnly:!0})],o.prototype,"connectionError",null),i([s()],o.prototype,"controller",void 0),i([s({readOnly:!0})],o.prototype,"hasZ",void 0),i([s({readOnly:!0})],o.prototype,"hasM",void 0),o=i([c("esri.views.3d.layers.StreamLayerView3D")],o);const je=o;export{je as default};
