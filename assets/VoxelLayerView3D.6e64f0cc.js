import{fW as h,fX as p,c4 as e,eC as w,j_ as i,bg as y,aX as t,aY as n,aZ as c}from"./vendor.c8f3cc8c.js";let s=class extends h(p){constructor(){super(...arguments),this.type="voxel-3d",this._wasmLayerId=-1}initialize(){if(this.view.viewingMode!=="local")throw new e("voxel:unsupported-viewingMode","Voxel layers support local viewingMode only.",{});if(this.view._stage.renderView.renderingContext.webglVersion!=="webgl2")throw new e("voxel:unsupported-context","Voxel layers are supported in WebGL2 rendering contexts only.",{});const o=this.layer.spatialReference;if(!w(o,this.view.spatialReference))throw new e("layerview:spatial-reference-incompatible","The spatial reference of this scene layer is incompatible with the spatial reference of the view",{});const r=i.getInstance(),d=r.addLayer(this.view,this).then(a=>{this._wasmLayerId=a,this._suspendedHandle=y(this,"suspended",l=>{i.getInstance().setLayerEnabled(this.view,this,!l)})}).catch(a=>{if(r.removeLayer(this.view,this),this._wasmLayerId=-1,a===-1)throw new e("voxel:addLayer-failure","The voxel layer description was invalid.",{});if(a===-2)throw new e("voxel:addLayer-failure","The voxel layer web assembly module failed to download.",{})});this.addResolvingPromise(d)}destroy(){i.getInstance().removeLayer(this.view,this),this._suspendedHandle&&(this._suspendedHandle.remove(),this._suspendedHandle=null)}isUpdating(){return!(this._wasmLayerId<0)&&i.getInstance().isUpdating(this.view,this._wasmLayerId)}updatingFlagChanged(){this.notifyChange("updating")}};t([n()],s.prototype,"layer",void 0),t([n({readOnly:!0,aliasOf:"layer.parsedUrl.path"})],s.prototype,"baseUrl",void 0),s=t([c("esri.views.3d.layers.VoxelLayerView3D")],s);const u=s;export{u as default};
