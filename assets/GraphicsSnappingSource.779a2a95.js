import{dk as h,aZ as y,jS as m,a$ as o,sq as f,b4 as l,dF as g,eE as S,aV as v,cm as w,ht as j,bv as k,eI as O,j1 as b,aW as d,aX as p,aY as C,h4 as F}from"./vendor.70daa49e.js";import{u as R}from"./normalizeUtilsSync.d0259d5c.js";import{m as $}from"./FeatureStore.9e234abf.js";import{L as A}from"./QueryEngine.14879efa.js";import{o as E}from"./queryEngineUtils.1e08ec51.js";import"./PooledRBush.644941f3.js";import"./optimizedFeatureQueryEngineAdapter.a39515e3.js";import"./centroid.76062f7d.js";import"./WhereClause.29c93a98.js";import"./projectionSupport.850c9ce4.js";import"./json.2d0d6862.js";import"./QueryEngineCapabilities.83e56447.js";import"./utils.c7c48db1.js";import"./ClassBreaksDefinition.74a74626.js";import"./spatialQuerySupport.6f01f5ac.js";let n=class extends h(y){constructor(e){super(e),this.availability=1,this.sources={multipoint:null,point:null,polygon:null,polyline:null},this.loadedWkids=new Set,this.loadedWkts=new Set,this.pendingAdds=[]}get updating(){return this.updatingHandles.updating}get layer(){return this.layerSource.layer}destroy(){const e=this.pendingAdds;this.pendingAdds.length=0;for(const t of e)t.task.abort();this.mapSources(t=>this.destroySource(t))}initialize(){this.handles.add([this.layer.on("graphic-update",e=>this.onGraphicUpdate(e)),this.updatingHandles.addOnCollectionChange(this.layer.graphics,e=>this.onGraphicsChanged(e))]),this.addMany(this.layer.graphics.toArray())}async fetchCandidates(e,t){const s=await m(this.mapSources(i=>i.queryEngine.executeQueryForSnapping({point:e.coordinateHelper.vectorToPoint(e.point).toJSON(),distance:e.distance,types:e.types,query:o(e.filter)?e.filter.createQuery().toJSON():{where:"1=1"}},t).then(({candidates:a})=>a))),r=s.flat().map(i=>E(i,e.coordinateHelper));return f(e.point,r),r}refresh(){}onGraphicUpdate(e){switch(e.property){case"geometry":case"visible":this.remove(e.graphic),this.addMany([e.graphic])}}onGraphicsChanged(e){for(const t of e.removed)this.remove(t);this.addMany(e.added)}addMany(e){const t=[],s=new Map;for(const r of e)l(r.geometry)||(this.needsInitializeProjection(r.geometry.spatialReference)?(t.push(r.geometry.spatialReference),s.set(r.uid,r)):this.add(r));this.createPendingAdd(t,s)}createPendingAdd(e,t){if(!e.length)return;const s=g(async a=>{await S(e.map(u=>({source:u,dest:this.spatialReference})),{signal:a}),this.markLoadedSpatialReferences(e);for(const[,u]of t)this.add(u)});this.updatingHandles.addPromise(s.promise);const r={task:s,graphics:t},i=()=>F(this.pendingAdds,r);s.promise.then(i,i),this.pendingAdds.push(r)}markLoadedSpatialReferences(e){for(const t of e)t.wkid!=null&&this.loadedWkids.add(t.wkid),t.wkt!=null&&this.loadedWkts.add(t.wkt)}add(e){if(l(e.geometry)||!e.visible)return;let t=e.geometry;if(t.type==="mesh")return;t.type==="extent"&&(t=v.fromExtent(t));const s=this.ensureSource(t.type);if(l(s))return;const r=this.createOptimizedFeature(e.uid,t);o(r)&&s.featureStore.add(r)}needsInitializeProjection(e){return(e.wkid==null||!this.loadedWkids.has(e.wkid))&&(e.wkt==null||!this.loadedWkts.has(e.wkt))&&!w(e,this.spatialReference)}createOptimizedFeature(e,t){const s=j(R(t),this.spatialReference);return s?new k(O(s,!1,!1),{[c]:e},null,e):null}ensureSource(e){const t=this.sources[e];if(o(t))return t;const s=this.createSource(e);return this.sources[e]=s,s}createSource(e){const t=b.toJSON(e),s=new $({geometryType:t,hasZ:!1,hasM:!1});return{featureStore:s,queryEngine:new A({featureStore:s,fields:[{name:c,type:"esriFieldTypeOID",alias:c}],geometryType:t,hasM:!1,hasZ:!1,objectIdField:c,spatialReference:this.spatialReference,scheduler:o(this.view)&&this.view.type==="3d"?this.view.resourceController.scheduler:null}),type:e}}remove(e){this.mapSources(t=>this.removeFromSource(t,e));for(const t of this.pendingAdds)t.graphics.delete(e.uid),t.graphics.size===0&&t.task.abort()}removeFromSource(e,t){const s=t.uid;e.featureStore.has(s)&&e.featureStore.removeById(t.uid)}destroySource(e){e.queryEngine.destroy(),this.sources[e.type]=null}mapSources(e){const{point:t,polygon:s,polyline:r,multipoint:i}=this.sources,a=[];return o(t)&&a.push(e(t)),o(s)&&a.push(e(s)),o(r)&&a.push(e(r)),o(i)&&a.push(e(i)),a}};d([p({constructOnly:!0})],n.prototype,"spatialReference",void 0),d([p({constructOnly:!0})],n.prototype,"layerSource",void 0),d([p({constructOnly:!0})],n.prototype,"view",void 0),d([p({readOnly:!0})],n.prototype,"updating",null),d([p({readOnly:!0})],n.prototype,"availability",void 0),n=d([C("esri.views.interactive.snapping.featureSources.GraphicsSnappingSource")],n);const c="OBJECTID";export{n as GraphicsSnappingSource};
